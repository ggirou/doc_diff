{"dependencies":[{"kind":"library","name":"dart:async","id":"dart.async","comment":"\nSupport for asynchronous programming,\nwith classes such as Future and Stream.\n\nFor an introduction to asynchronous programming in Dart, see the\n[dart:async section of the language tour]\n(https://www.dartlang.org/docs/dart-up-and-running/contents/ch03.html#ch03-asynchronous-programming).\n\n## Other resources\n\n* [Using Future Based APIs]\n(https://www.dartlang.org/articles/using-future-based-apis/): A first look at\nFutures and how to use them to write asynchronous Dart code.\n\n* [Futures and Error Handling]\n(https://www.dartlang.org/articles/futures-and-error-handling/): Everything\nyou wanted to know about handling errors and exceptions when working with\nFutures (but were afraid to ask).\n\n* [The Event Loop and Dart](https://www.dartlang.org/articles/event-loop/):\nLearn how Dart handles the event queue and microtask queue, so you can write\nbetter asynchronous code with fewer surprises.\n\n* [Asynchronous Unit Testing with Dart]\n(https://www.dartlang.org/articles/dart-unit-tests/#asynchronous-tests): How\nto test asynchronous code.\n","children":[{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"kind":"class","name":"Timer","id":"Timer","comment":"\nA count-down timer that can be configured to fire once or repeatedly.\n\nThe timer counts down from the specified duration to 0.\nWhen the timer reaches 0, the timer invokes the specified callback function.\nUse a periodic timer to repeatedly count down the same interval.\n\nA negative duration is treated the same as a duration of 0.\nIf the duration is statically known to be 0, consider using [run].\n\nFrequently the duration is either a constant or computed as in the\nfollowing example (taking advantage of the multiplication operator of\nthe [Duration] class):\n\n    const TIMEOUT = const Duration(seconds: 3);\n    const ms = const Duration(milliseconds: 1);\n\n    startTimeout([int milliseconds]) {\n      var duration = milliseconds == null ? TIMEOUT : ms * milliseconds;\n      return new Timer(duration, handleTimeout);\n    }\n    ...\n    void handleTimeout() {  // callback function\n      ...\n    }\n\nNote: If Dart code using Timer is compiled to JavaScript, the finest\ngranularity available in the browser is 4 milliseconds.\n\nSee [Stopwatch] for measuring elapsed time.\n","children":[{"returnType":{"name":"void","refId":"void"},"isStatic":true,"kind":"method","name":"run","id":"run1()","comment":"\nRuns the given [callback] asynchronously as soon as possible.\n\nThis function is equivalent to `new Timer(Duration.ZERO, callback)`.\n","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"callback","id":"callback","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"78"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"cancel","id":"cancel0()","comment":"\nCancels the timer.\n","line":"85"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"isActive","id":"isActive","comment":"\nReturns whether the timer is still active.\n\nA non-periodic timer is active if the callback has not been executed,\nand the timer has not been canceled.\n\nA periodic timer is active if it has not been canceled.\n","line":"95"},{"returnType":{"name":"Timer","refId":"dart.async/Timer"},"kind":"constructor","name":"","id":"2()","comment":"\nCreates a new timer.\n\nThe [callback] function is invoked after the given [duration].\n\n","children":[{"ref":{"name":"Duration","refId":"dart.core/Duration"},"kind":"param","name":"duration","id":"duration"},{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"callback","id":"callback","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"46"},{"returnType":{"name":"Timer","refId":"dart.async/Timer"},"kind":"constructor","name":"periodic","id":"periodic2()","comment":"\nCreates a new repeating timer.\n\nThe [callback] is invoked repeatedly with [duration] intervals until\ncanceled with the [cancel] function.\n","children":[{"ref":{"name":"Duration","refId":"dart.core/Duration"},"kind":"param","name":"duration","id":"duration"},{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"callback","id":"callback","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"Timer","refId":"dart.async/Timer"},"kind":"param","name":"timer","id":"timer","uri":"dart-sdk/lib/async/timer.dart","line":"63"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}],"line":"63"}],"line":"62"}],"uri":"dart-sdk/lib/async/timer.dart","line":"38"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"kind":"class","name":"StreamTransformer","id":"StreamTransformer","comment":"\nThe target of a [Stream.transform] call.\n\nThe [Stream.transform] call will pass itself to this object and then return\nthe resulting stream.\n\nIt is good practice to write transformers that can be used multiple times.\n","children":[{"returnType":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"T","refId":"dart.async/StreamTransformer/T"}]},"kind":"method","name":"bind","id":"bind1()","children":[{"ref":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"S","refId":"dart.async/StreamTransformer/S"}]},"kind":"param","name":"stream","id":"stream"}],"line":"1335"},{"returnType":{"name":"StreamTransformer","refId":"dart.async/StreamTransformer","arguments":[{"name":"S","refId":"dart.async/StreamTransformer/S"},{"name":"T","refId":"dart.async/StreamTransformer/T"}]},"kind":"constructor","name":"","id":"1()","comment":"\nCreates a [StreamTransformer].\n\nThe returned instance takes responsibility of implementing ([bind]).\nWhen the user invokes `bind` it returns a new \"bound\" stream. Only when\nthe user starts listening to the bound stream, the `listen` method\ninvokes the given closure [transformer].\n\nThe [transformer] closure receives the stream, that was bound, as argument\nand returns a [StreamSubscription]. In almost all cases the closure\nlistens itself to the stream that is given as argument.\n\nThe result of invoking the [transformer] closure is a [StreamSubscription].\nThe bound stream-transformer (created by the `bind` method above) then sets\nthe handlers it received as part of the `listen` call.\n\nConceptually this can be summarized as follows:\n\n1. `var transformer = new StreamTransformer(transformerClosure);`\n  creates a `StreamTransformer` that supports the `bind` method.\n2. `var boundStream = stream.transform(transformer);` binds the `stream`\n  and returns a bound stream that has a pointer to `stream`.\n3. `boundStream.listen(f1, onError: f2, onDone: f3, cancelOnError: b)`\n  starts the listening and transformation. This is accomplished\n  in 2 steps: first the `boundStream` invokes the `transformerClosure` with\n  the `stream` it captured: `transformerClosure(stream, b)`.\n  The result `subscription`, a [StreamSubscription], is then\n  updated to receive its handlers: `subscription.onData(f1)`,\n  `subscription.onError(f2)`, `subscription(f3)`. Finally the subscription\n  is returned as result of the `listen` call.\n\nThere are two common ways to create a StreamSubscription:\n\n1. by creating a new class that implements [StreamSubscription].\n   Note that the subscription should run callbacks in the [Zone] the\n   stream was listened to.\n2. by allocating a [StreamController] and to return the result of\n   listening to its stream.\n\nExample use of a duplicating transformer:\n\n    stringStream.transform(new StreamTransformer<String, String>(\n        (Stream<String> input, bool cancelOnError) {\n          StreamController<String> controller;\n          StreamSubscription<String> subscription;\n          controller = new StreamController<String>(\n            onListen: () {\n              subscription = input.listen((data) {\n                  // Duplicate the data.\n                  controller.add(data);\n                  controller.add(data);\n                },\n                onError: controller.addError,\n                onDone: controller.close,\n                cancelOnError: cancelOnError);\n            },\n            onPause: subscription.pause,\n            onResume: subscription.resume,\n            onCancel: subscription.cancel,\n            sync: true);\n          return controller.stream.listen(null);\n        });\n","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"transformer","id":"transformer","children":[{"returnType":{"name":"StreamSubscription","refId":"dart.async/StreamSubscription","arguments":[{"name":"T","refId":"dart.async/StreamTransformer/T"}]},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"S","refId":"dart.async/StreamTransformer/S"}]},"kind":"param","name":"stream","id":"stream","uri":"dart-sdk/lib/async/stream.dart","line":"1315"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"param","name":"cancelOnError","id":"cancelOnError","uri":"dart-sdk/lib/async/stream.dart","line":"1315"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}],"line":"1315"}],"line":"1314"},{"returnType":{"name":"StreamTransformer","refId":"dart.async/StreamTransformer","arguments":[{"name":"S","refId":"dart.async/StreamTransformer/S"},{"name":"T","refId":"dart.async/StreamTransformer/T"}]},"kind":"constructor","name":"fromHandlers","id":"fromHandlers3()","comment":"\nCreates a [StreamTransformer] that delegates events to the given functions.\n\nExample use of a duplicating transformer:\n\n    stringStream.transform(new StreamTransformer<String, String>.fromHandlers(\n        handleData: (String value, EventSink<String> sink) {\n          sink.add(value);\n          sink.add(value);  // Duplicate the incoming events.\n        }));\n","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"isNamed":true,"kind":"param","name":"handleData","id":"handleData","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"S","refId":"dart.async/StreamTransformer/S"},"kind":"param","name":"data","id":"data","uri":"dart-sdk/lib/async/stream.dart","line":"1330"},{"ref":{"name":"EventSink","refId":"dart.async/EventSink","arguments":[{"name":"T","refId":"dart.async/StreamTransformer/T"}]},"kind":"param","name":"sink","id":"sink","uri":"dart-sdk/lib/async/stream.dart","line":"1330"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}],"line":"1330"},{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"isNamed":true,"kind":"param","name":"handleError","id":"handleError","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"Object","refId":"dart.core/Object"},"kind":"param","name":"error","id":"error","uri":"dart-sdk/lib/async/stream.dart","line":"1331"},{"ref":{"name":"StackTrace","refId":"dart.core/StackTrace"},"kind":"param","name":"stackTrace","id":"stackTrace","uri":"dart-sdk/lib/async/stream.dart","line":"1331"},{"ref":{"name":"EventSink","refId":"dart.async/EventSink","arguments":[{"name":"T","refId":"dart.async/StreamTransformer/T"}]},"kind":"param","name":"sink","id":"sink","uri":"dart-sdk/lib/async/stream.dart","line":"1331"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}],"line":"1331"},{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"isNamed":true,"kind":"param","name":"handleDone","id":"handleDone","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"EventSink","refId":"dart.async/EventSink","arguments":[{"name":"T","refId":"dart.async/StreamTransformer/T"}]},"kind":"param","name":"sink","id":"sink","uri":"dart-sdk/lib/async/stream.dart","line":"1332"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}],"line":"1332"}],"line":"1329"},{"kind":"typeparam","name":"S","id":"S"},{"kind":"typeparam","name":"T","id":"T"}],"uri":"dart-sdk/lib/async/stream.dart","line":"1249"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"interfaces":[{"name":"EventSink","refId":"dart.async/EventSink","arguments":[{"name":"S","refId":"dart.async/StreamSink/S"}]},{"name":"StreamConsumer","refId":"dart.async/StreamConsumer","arguments":[{"name":"S","refId":"dart.async/StreamSink/S"}]}],"kind":"class","name":"StreamSink","id":"StreamSink","comment":"\nA [StreamSink] unifies the asynchronous methods from [StreamConsumer] and\nthe synchronous methods from [EventSink].\n\nThe [EventSink] methods can't be used while the [addStream] is called.\nAs soon as the [addStream]'s [Future] completes with a value, the\n[EventSink] methods can be used again.\n\nIf [addStream] is called after any of the [EventSink] methods, it'll\nbe delayed until the underlying system has consumed the data added by the\n[EventSink] methods.\n\nWhen [EventSink] methods are used, the [done] [Future] can be used to\ncatch any errors.\n\nWhen [close] is called, it will return the [done] [Future].\n","children":[{"returnType":{"name":"Future","refId":"dart.async/Future"},"kind":"method","name":"close","id":"close0()","comment":"\nClose the [StreamSink]. It'll return the [done] Future.\n","line":"1227"},{"ref":{"name":"Future","refId":"dart.async/Future"},"kind":"property","name":"done","id":"done","comment":"\nThe [done] Future completes with the same values as [close], except\nfor the following case:\n\n* The synchronous methods of [EventSink] were called, resulting in an\n  error. If there is no active future (like from an addStream call), the\n  [done] future will complete with that error\n","line":"1237"},{"kind":"typeparam","name":"S","id":"S"}],"uri":"dart-sdk/lib/async/stream.dart","line":"1223"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"kind":"class","name":"StreamConsumer","id":"StreamConsumer","comment":"\nThe target of a [Stream.pipe] call.\n\nThe [Stream.pipe] call will pass itself to this object, and then return\nthe resulting [Future]. The pipe should complete the future when it's\ndone.\n","children":[{"returnType":{"name":"Future","refId":"dart.async/Future"},"kind":"method","name":"addStream","id":"addStream1()","comment":"\nConsumes the elements of [stream].\n\nListens on [stream] and does something for each event.\n\nThe consumer may stop listening after an error, or it may consume\nall the errors and only stop at a done event.\n","children":[{"ref":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"S","refId":"dart.async/StreamConsumer/S"}]},"kind":"param","name":"stream","id":"stream"}],"line":"1200"},{"returnType":{"name":"Future","refId":"dart.async/Future"},"kind":"method","name":"close","id":"close0()","line":"1202"},{"kind":"typeparam","name":"S","id":"S"}],"uri":"dart-sdk/lib/async/stream.dart","line":"1191"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"kind":"class","name":"EventSink","id":"EventSink","comment":"\nAn interface that abstracts creation or handling of [Stream] events.\n","children":[{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"add","id":"add1()","comment":"Create a data event ","children":[{"ref":{"name":"T","refId":"dart.async/EventSink/T"},"kind":"param","name":"event","id":"event"}],"line":"1154"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"addError","id":"addError2()","comment":"Create an async error. ","children":[{"kind":"param","name":"errorEvent","id":"errorEvent"},{"ref":{"name":"StackTrace","refId":"dart.core/StackTrace"},"isOptional":true,"kind":"param","name":"stackTrace","id":"stackTrace"}],"line":"1156"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"close","id":"close0()","comment":"Request a stream to close. ","line":"1158"},{"kind":"typeparam","name":"T","id":"T"}],"uri":"dart-sdk/lib/async/stream.dart","line":"1152"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"kind":"class","name":"Stream","id":"Stream","comment":"\nA source of asynchronous data events.\n\nA Stream provides a sequence of events. Each event is either a data event or\nan error event, representing the result of a single computation. When the\nStream is exhausted, it may send a single \"done\" event.\n\nYou can [listen] on a stream to receive the events it sends. When you listen,\nyou receive a [StreamSubscription] object that can be used to stop listening,\nor to temporarily pause events from the stream.\n\nWhen an event is fired, the listeners at that time are informed.\nIf a listener is added while an event is being fired, the change\nwill only take effect after the event is completely fired. If a listener\nis canceled, it immediately stops receiving events.\n\nWhen the \"done\" event is fired, subscribers are unsubscribed before\nreceiving the event. After the event has been sent, the stream has no\nsubscribers. Adding new subscribers after this point is allowed, but\nthey will just receive a new \"done\" event as soon as possible.\n\nStreams always respect \"pause\" requests. If necessary they need to buffer\ntheir input, but often, and preferably, they can simply request their input\nto pause too.\n\nThere are two kinds of streams: The normal \"single-subscription\" streams and\n\"broadcast\" streams.\n\nA single-subscription stream allows only a single listener during the whole\nlifetime of the stream.\nIt holds back events until it gets a listener, and it may exhaust\nitself when the listener is unsubscribed, even if the stream wasn't done.\n\nSingle-subscription streams are generally used for streaming parts of\ncontiguous data like file I/O.\n\nA broadcast stream allows any number of listeners, and it fires\nits events when they are ready, whether there are listeners or not.\n\nBroadcast streams are used for independent events/observers.\n\nStream transformations, such as [where] and [skip], always return\nnon-broadcast streams. If several listeners want to listen to the returned\nstream, use [asBroadcastStream] to create a broadcast stream on top of the\nnon-broadcast stream.\n\nThe default implementation of [isBroadcast] returns false.\nA broadcast stream inheriting from [Stream] must override [isBroadcast]\nto return [:true:].\n","children":[{"returnType":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"T","refId":"dart.async/Stream/T"}]},"kind":"method","name":"asBroadcastStream","id":"asBroadcastStream2()","comment":"\nReturns a multi-subscription stream that produces the same events as this.\n\nIf this stream is already a broadcast stream, it is returned unmodified.\n\nIf this stream is single-subscription, return a new stream that allows\nmultiple subscribers. It will subscribe to this stream when its first\nsubscriber is added, and will stay subscribed until this stream ends,\nor a callback cancels the subscription.\n\nIf [onListen] is provided, it is called with a subscription-like object\nthat represents the underlying subscription to this stream. It is\npossible to pause, resume or cancel the subscription during the call\nto [onListen]. It is not possible to change the event handlers, including\nusing [StreamSubscription.asFuture].\n\nIf [onCancel] is provided, it is called in a similar way to [onListen]\nwhen the returned stream stops having listener. If it later gets\na new listener, the [onListen] function is called again.\n\nUse the callbacks, for example, for pausing the underlying subscription\nwhile having no subscribers to prevent losing events, or canceling the\nsubscription when there are no listeners.\n","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"isNamed":true,"kind":"param","name":"onListen","id":"onListen","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"StreamSubscription","refId":"dart.async/StreamSubscription","arguments":[{"name":"T","refId":"dart.async/Stream/T"}]},"kind":"param","name":"subscription","id":"subscription","uri":"dart-sdk/lib/async/stream.dart","line":"228"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}],"line":"228"},{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"isNamed":true,"kind":"param","name":"onCancel","id":"onCancel","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"StreamSubscription","refId":"dart.async/StreamSubscription","arguments":[{"name":"T","refId":"dart.async/Stream/T"}]},"kind":"param","name":"subscription","id":"subscription","uri":"dart-sdk/lib/async/stream.dart","line":"229"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}],"line":"229"}],"line":"227"},{"returnType":{"name":"StreamSubscription","refId":"dart.async/StreamSubscription","arguments":[{"name":"T","refId":"dart.async/Stream/T"}]},"kind":"method","name":"listen","id":"listen4()","comment":"\nAdds a subscription to this stream.\n\nOn each data event from this stream, the subscriber's [onData] handler\nis called. If [onData] is null, nothing happens.\n\nOn errors from this stream, the [onError] handler is given a\nobject describing the error.\n\nThe [onError] callback must be of type `void onError(error)` or\n`void onError(error, StackTrace stackTrace)`. If [onError] accepts\ntwo arguments it is called with the stack trace (which could be `null` if\nthe stream itself received an error without stack trace).\nOtherwise it is called with just the error object.\n\nIf this stream closes, the [onDone] handler is called.\n\nIf [cancelOnError] is true, the subscription is ended when\nthe first error is reported. The default is false.\n","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"onData","id":"onData","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"T","refId":"dart.async/Stream/T"},"kind":"param","name":"event","id":"event","uri":"dart-sdk/lib/async/stream.dart","line":"254"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]},{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"isNamed":true,"kind":"param","name":"onError","id":"onError","line":"255"},{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"isNamed":true,"kind":"param","name":"onDone","id":"onDone","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","uri":"dart-sdk/lib/core/function.dart","line":"13"}],"line":"256"},{"ref":{"name":"bool","refId":"dart.core/bool"},"isOptional":true,"isNamed":true,"kind":"param","name":"cancelOnError","id":"cancelOnError","line":"257"}],"line":"254"},{"returnType":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"T","refId":"dart.async/Stream/T"}]},"kind":"method","name":"where","id":"where1()","comment":"\nCreates a new stream from this stream that discards some data events.\n\nThe new stream sends the same error and done events as this stream,\nbut it only sends the data events that satisfy the [test].\n\nThe returned stream is not a broadcast stream, even if this stream is.\n","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"test","id":"test","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"T","refId":"dart.async/Stream/T"},"kind":"param","name":"event","id":"event","uri":"dart-sdk/lib/async/stream.dart","line":"267"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"267"},{"returnType":{"name":"Stream","refId":"dart.async/Stream"},"kind":"method","name":"map","id":"map1()","comment":"\nCreates a new stream that converts each element of this stream\nto a new value using the [convert] function.\n\nThe returned stream is not a broadcast stream, even if this stream is.\n","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"convert","id":"convert","children":[{"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"T","refId":"dart.async/Stream/T"},"kind":"param","name":"event","id":"event","uri":"dart-sdk/lib/async/stream.dart","line":"277"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"277"},{"returnType":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"T","refId":"dart.async/Stream/T"}]},"kind":"method","name":"handleError","id":"handleError2()","comment":"\nCreates a wrapper Stream that intercepts some errors from this stream.\n\nIf this stream sends an error that matches [test], then it is intercepted\nby the [handle] function.\n\nThe [onError] callback must be of type `void onError(error)` or\n`void onError(error, StackTrace stackTrace)`. Depending on the function\ntype the the stream either invokes [onError] with or without a stack\ntrace. The stack trace argument might be `null` if the stream itself\nreceived an error without stack trace.\n\nAn asynchronous error [:e:] is matched by a test function if [:test(e):]\nreturns true. If [test] is omitted, every error is considered matching.\n\nIf the error is intercepted, the [handle] function can decide what to do\nwith it. It can throw if it wants to raise a new (or the same) error,\nor simply return to make the stream forget the error.\n\nIf you need to transform an error into a data event, use the more generic\n[Stream.transform] to handle the event by writing a data event to\nthe output sink\n\nThe returned stream is not a broadcast stream, even if this stream is.\n","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"onError","id":"onError"},{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"isNamed":true,"kind":"param","name":"test","id":"test","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"functiontype","name":"Function","id":"Function","children":[{"kind":"param","name":"error","id":"error","uri":"dart-sdk/lib/async/stream.dart","line":"306"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"306"},{"returnType":{"name":"Stream","refId":"dart.async/Stream"},"kind":"method","name":"expand","id":"expand1()","comment":"\nCreates a new stream from this stream that converts each element\ninto zero or more events.\n\nEach incoming event is converted to an [Iterable] of new events,\nand each of these new events are then sent by the returned stream\nin order.\n\nThe returned stream is not a broadcast stream, even if this stream is.\n","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"convert","id":"convert","children":[{"returnType":{"name":"Iterable","refId":"dart.core/Iterable"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"T","refId":"dart.async/Stream/T"},"kind":"param","name":"value","id":"value","uri":"dart-sdk/lib/async/stream.dart","line":"320"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"320"},{"returnType":{"name":"Future","refId":"dart.async/Future"},"kind":"method","name":"pipe","id":"pipe1()","comment":"\nBinds this stream as the input of the provided [StreamConsumer].\n","children":[{"ref":{"name":"StreamConsumer","refId":"dart.async/StreamConsumer","arguments":[{"name":"T","refId":"dart.async/Stream/T"}]},"kind":"param","name":"streamConsumer","id":"streamConsumer"}],"line":"327"},{"returnType":{"name":"Stream","refId":"dart.async/Stream"},"kind":"method","name":"transform","id":"transform1()","comment":"\nChains this stream as the input of the provided [StreamTransformer].\n\nReturns the result of [:streamTransformer.bind:] itself.\n","children":[{"ref":{"name":"StreamTransformer","refId":"dart.async/StreamTransformer","arguments":[{"name":"T","refId":"dart.async/Stream/T"}]},"kind":"param","name":"streamTransformer","id":"streamTransformer"}],"line":"336"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"T","refId":"dart.async/Stream/T"}]},"kind":"method","name":"reduce","id":"reduce1()","comment":"\nReduces a sequence of values by repeatedly applying [combine].\n","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"combine","id":"combine","children":[{"returnType":{"name":"T","refId":"dart.async/Stream/T"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"T","refId":"dart.async/Stream/T"},"kind":"param","name":"previous","id":"previous","uri":"dart-sdk/lib/async/stream.dart","line":"343"},{"ref":{"name":"T","refId":"dart.async/Stream/T"},"kind":"param","name":"element","id":"element","uri":"dart-sdk/lib/async/stream.dart","line":"343"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"343"},{"returnType":{"name":"Future","refId":"dart.async/Future"},"kind":"method","name":"fold","id":"fold2()","comment":"Reduces a sequence of values by repeatedly applying [combine]. ","children":[{"kind":"param","name":"initialValue","id":"initialValue"},{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"combine","id":"combine","children":[{"kind":"functiontype","name":"Function","id":"Function","children":[{"kind":"param","name":"previous","id":"previous","uri":"dart-sdk/lib/async/stream.dart","line":"373"},{"ref":{"name":"T","refId":"dart.async/Stream/T"},"kind":"param","name":"element","id":"element","uri":"dart-sdk/lib/async/stream.dart","line":"373"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"373"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"String","refId":"dart.core/String"}]},"kind":"method","name":"join","id":"join1()","comment":"\nCollects string of data events' string representations.\n\nIf [separator] is provided, it is inserted between any two\nelements.\n\nAny error in the stream causes the future to complete with that\nerror. Otherwise it completes with the collected string when\nthe \"done\" event arrives.\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"defaultValue":"\"\"","isOptional":true,"kind":"param","name":"separator","id":"separator"}],"line":"405"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"bool","refId":"dart.core/bool"}]},"kind":"method","name":"contains","id":"contains1()","comment":"\nChecks whether [needle] occurs in the elements provided by this stream.\n\nCompletes the [Future] when the answer is known.\nIf this stream reports an error, the [Future] will report that error.\n","children":[{"ref":{"name":"Object","refId":"dart.core/Object"},"kind":"param","name":"needle","id":"needle"}],"line":"438"},{"returnType":{"name":"Future","refId":"dart.async/Future"},"kind":"method","name":"forEach","id":"forEach1()","comment":"\nExecutes [action] on each data event of the stream.\n\nCompletes the returned [Future] when all events of the stream\nhave been processed. Completes the future with an error if the\nstream has an error event, or if [action] throws.\n","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"action","id":"action","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"T","refId":"dart.async/Stream/T"},"kind":"param","name":"element","id":"element","uri":"dart-sdk/lib/async/stream.dart","line":"468"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"468"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"bool","refId":"dart.core/bool"}]},"kind":"method","name":"every","id":"every1()","comment":"\nChecks whether [test] accepts all elements provided by this stream.\n\nCompletes the [Future] when the answer is known.\nIf this stream reports an error, the [Future] will report that error.\n","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"test","id":"test","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"T","refId":"dart.async/Stream/T"},"kind":"param","name":"element","id":"element","uri":"dart-sdk/lib/async/stream.dart","line":"493"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"493"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"bool","refId":"dart.core/bool"}]},"kind":"method","name":"any","id":"any1()","comment":"\nChecks whether [test] accepts any element provided by this stream.\n\nCompletes the [Future] when the answer is known.\n\nIf this stream reports an error, the [Future] reports that error.\n\nStops listening to the stream after the first matching element has been\nfound.\n\nInternally the method cancels its subscription after this element. This\nmeans that single-subscription (non-broadcast) streams are closed and\ncannot be reused after a call to this method.\n","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"test","id":"test","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"T","refId":"dart.async/Stream/T"},"kind":"param","name":"element","id":"element","uri":"dart-sdk/lib/async/stream.dart","line":"530"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"530"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"List","refId":"dart.core/List","arguments":[{"name":"T","refId":"dart.async/Stream/T"}]}]},"kind":"method","name":"toList","id":"toList0()","comment":"Collects the data of this stream in a [List]. ","line":"593"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"Set","refId":"dart.core/Set","arguments":[{"name":"T","refId":"dart.async/Stream/T"}]}]},"kind":"method","name":"toSet","id":"toSet0()","comment":"Collects the data of this stream in a [Set]. ","line":"609"},{"returnType":{"name":"Future","refId":"dart.async/Future"},"kind":"method","name":"drain","id":"drain1()","comment":"\nDiscards all data on the stream, but signals when it's done or an error\noccured.\n\nWhen subscribing using [drain], cancelOnError will be true. This means\nthat the future will complete with the first error on the stream and then\ncancel the subscription.\n\nIn case of a `done` event the future completes with the given\n[futureValue].\n","children":[{"isOptional":true,"kind":"param","name":"futureValue","id":"futureValue"}],"line":"635"},{"returnType":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"T","refId":"dart.async/Stream/T"}]},"kind":"method","name":"take","id":"take1()","comment":"\nProvides at most the first [n] values of this stream.\n\nForwards the first [n] data events of this stream, and all error\nevents, to the returned stream, and ends with a done event.\n\nIf this stream produces fewer than [count] values before it's done,\nso will the returned stream.\n\nStops listening to the stream after the first [n] elements have been\nreceived.\n\nInternally the method cancels its subscription after these elements. This\nmeans that single-subscription (non-broadcast) streams are closed and\ncannot be reused after a call to this method.\n\nThe returned stream is not a broadcast stream, even if this stream is.\n","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"count","id":"count"}],"line":"656"},{"returnType":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"T","refId":"dart.async/Stream/T"}]},"kind":"method","name":"takeWhile","id":"takeWhile1()","comment":"\nForwards data events while [test] is successful.\n\nThe returned stream provides the same events as this stream as long\nas [test] returns [:true:] for the event data. The stream is done\nwhen either this stream is done, or when this stream first provides\na value that [test] doesn't accept.\n\nStops listening to the stream after the accepted elements.\n\nInternally the method cancels its subscription after these elements. This\nmeans that single-subscription (non-broadcast) streams are closed and\ncannot be reused after a call to this method.\n\nThe returned stream is not a broadcast stream, even if this stream is.\n","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"test","id":"test","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"T","refId":"dart.async/Stream/T"},"kind":"param","name":"element","id":"element","uri":"dart-sdk/lib/async/stream.dart","line":"676"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"676"},{"returnType":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"T","refId":"dart.async/Stream/T"}]},"kind":"method","name":"skip","id":"skip1()","comment":"\nSkips the first [count] data events from this stream.\n\nThe returned stream is not a broadcast stream, even if this stream is.\n","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"count","id":"count"}],"line":"685"},{"returnType":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"T","refId":"dart.async/Stream/T"}]},"kind":"method","name":"skipWhile","id":"skipWhile1()","comment":"\nSkip data events from this stream while they are matched by [test].\n\nError and done events are provided by the returned stream unmodified.\n\nStarting with the first data event where [test] returns false for the\nevent data, the returned stream will have the same events as this stream.\n\nThe returned stream is not a broadcast stream, even if this stream is.\n","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"test","id":"test","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"T","refId":"dart.async/Stream/T"},"kind":"param","name":"element","id":"element","uri":"dart-sdk/lib/async/stream.dart","line":"699"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"699"},{"returnType":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"T","refId":"dart.async/Stream/T"}]},"kind":"method","name":"distinct","id":"distinct1()","comment":"\nSkips data events if they are equal to the previous data event.\n\nThe returned stream provides the same events as this stream, except\nthat it never provides two consequtive data events that are equal.\n\nEquality is determined by the provided [equals] method. If that is\nomitted, the '==' operator on the last provided data element is used.\n\nThe returned stream is not a broadcast stream, even if this stream is.\n","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"kind":"param","name":"equals","id":"equals","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"T","refId":"dart.async/Stream/T"},"kind":"param","name":"previous","id":"previous","uri":"dart-sdk/lib/async/stream.dart","line":"714"},{"ref":{"name":"T","refId":"dart.async/Stream/T"},"kind":"param","name":"next","id":"next","uri":"dart-sdk/lib/async/stream.dart","line":"714"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"714"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[]},"kind":"method","name":"firstWhere","id":"firstWhere2()","comment":"\nFinds the first element of this stream matching [test].\n\nReturns a future that is filled with the first element of this stream\nthat [test] returns true for.\n\nIf no such element is found before this stream is done, and a\n[defaultValue] function is provided, the result of calling [defaultValue]\nbecomes the value of the future.\n\nStops listening to the stream after the first matching element has been\nreceived.\n\nInternally the method cancels its subscription after the first element that\nmatches the predicate. This means that single-subscription (non-broadcast)\nstreams are closed and cannot be reused after a call to this method.\n\nIf an error occurs, or if this stream ends without finding a match and\nwith no [defaultValue] function provided, the future will receive an\nerror.\n","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"test","id":"test","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"T","refId":"dart.async/Stream/T"},"kind":"param","name":"element","id":"element","uri":"dart-sdk/lib/async/stream.dart","line":"839"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]},{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"isNamed":true,"kind":"param","name":"defaultValue","id":"defaultValue","children":[{"returnType":{"name":"Object","refId":"dart.core/Object"},"kind":"functiontype","name":"Function","id":"Function","uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"839"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[]},"kind":"method","name":"lastWhere","id":"lastWhere2()","comment":"\nFinds the last element in this stream matching [test].\n\nAs [firstWhere], except that the last matching element is found.\nThat means that the result cannot be provided before this stream\nis done.\n","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"test","id":"test","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"T","refId":"dart.async/Stream/T"},"kind":"param","name":"element","id":"element","uri":"dart-sdk/lib/async/stream.dart","line":"873"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]},{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"isNamed":true,"kind":"param","name":"defaultValue","id":"defaultValue","children":[{"returnType":{"name":"Object","refId":"dart.core/Object"},"kind":"functiontype","name":"Function","id":"Function","uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"873"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"T","refId":"dart.async/Stream/T"}]},"kind":"method","name":"singleWhere","id":"singleWhere1()","comment":"\nFinds the single element in this stream matching [test].\n\nLike [lastMatch], except that it is an error if more than one\nmatching element occurs in the stream.\n","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"test","id":"test","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"T","refId":"dart.async/Stream/T"},"kind":"param","name":"element","id":"element","uri":"dart-sdk/lib/async/stream.dart","line":"913"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"913"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"T","refId":"dart.async/Stream/T"}]},"kind":"method","name":"elementAt","id":"elementAt1()","comment":"\nReturns the value of the [index]th data event of this stream.\n\nStops listening to the stream after the [index]th data event has been\nreceived.\n\nInternally the method cancels its subscription after these elements. This\nmeans that single-subscription (non-broadcast) streams are closed and\ncannot be reused after a call to this method.\n\nIf an error event occurs before the value is found, the future completes\nwith this error.\n\nIf a done event occurs before the value is found, the future completes\nwith a [RangeError].\n","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"index","id":"index"}],"line":"967"},{"returnType":{"name":"Stream","refId":"dart.async/Stream"},"kind":"method","name":"timeout","id":"timeout2()","comment":"\nCreates a new stream with the same events as this stream.\n\nWhenever more than [timeLimit] passes between two events from this stream,\nthe [onTimeout] function is called.\n\nThe countdown doesn't start until the returned stream is listened to.\nThe countdown is reset every time an event is forwarded from this stream,\nor when the stream is paused and resumed.\n\nThe [onTimeout] function is called with one argument: an\n[EventSink] that allows putting events into the returned stream.\nThis `EventSink` is only valid during the call to `onTimeout`.\n\nIf `onTimeout` is omitted, a timeout will just put a [TimeoutException]\ninto the error channel of the returned stream.\n\nThe returned stream is not a broadcast stream, even if this stream is.\n","children":[{"ref":{"name":"Duration","refId":"dart.core/Duration"},"kind":"param","name":"timeLimit","id":"timeLimit"},{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"isNamed":true,"kind":"param","name":"onTimeout","id":"onTimeout","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"EventSink","refId":"dart.async/EventSink"},"kind":"param","name":"sink","id":"sink","uri":"dart-sdk/lib/async/stream.dart","line":"1006"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"1006"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"isBroadcast","id":"isBroadcast","comment":"\nReports whether this stream is a broadcast stream.\n","line":"201"},{"ref":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"property","name":"length","id":"length","comment":"Counts the elements in the stream. ","line":"555"},{"ref":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"bool","refId":"dart.core/bool"}]},"kind":"property","name":"isEmpty","id":"isEmpty","comment":"\nReports whether this stream contains any elements.\n\nStops listening to the stream after the first element has been received.\n\nInternally the method cancels its subscription after the first element.\nThis means that single-subscription (non-broadcast) streams are closed and\ncannot be reused after a call to this getter.\n","line":"577"},{"ref":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"T","refId":"dart.async/Stream/T"}]},"kind":"property","name":"first","id":"first","comment":"\nReturns the first element of the stream.\n\nStops listening to the stream after the first element has been received.\n\nInternally the method cancels its subscription after the first element.\nThis means that single-subscription (non-broadcast) streams are closed\nand cannot be reused after a call to this getter.\n\nIf an error event occurs before the first data event, the resulting future\nis completed with that error.\n\nIf this stream is empty (a done event occurs before the first data event),\nthe resulting future completes with a [StateError].\n\nExcept for the type of the error, this method is equivalent to\n[:this.elementAt(0):].\n","line":"736"},{"ref":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"T","refId":"dart.async/Stream/T"}]},"kind":"property","name":"last","id":"last","comment":"\nReturns the last element of the stream.\n\nIf an error event occurs before the first data event, the resulting future\nis completed with that error.\n\nIf this stream is empty (a done event occurs before the first data event),\nthe resulting future completes with a [StateError].\n","line":"760"},{"ref":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"T","refId":"dart.async/Stream/T"}]},"kind":"property","name":"single","id":"single","comment":"\nReturns the single element.\n\nIf an error event occurs before or after the first data event, the\nresulting future is completed with that error.\n\nIf [this] is empty or has more than one element throws a [StateError].\n","line":"790"},{"kind":"constructor","name":"","id":"0()","line":"62"},{"returnType":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"T","refId":"dart.async/Stream/T"}]},"kind":"constructor","name":"fromFuture","id":"fromFuture1()","comment":"\nCreates a new single-subscription stream from the future.\n\nWhen the future completes, the stream will fire one event, either\ndata or error, and then close with a done-event.\n","children":[{"ref":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"T","refId":"dart.async/Stream/T"}]},"kind":"param","name":"future","id":"future"}],"line":"70"},{"returnType":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"T","refId":"dart.async/Stream/T"}]},"kind":"constructor","name":"fromIterable","id":"fromIterable1()","comment":"\nCreates a single-subscription stream that gets its data from [data].\n\nIf iterating [data] throws an error, the stream ends immediately with\nthat error. No done event will be sent (iteration is not complete), but no\nfurther data events will be generated either, since iteration cannot\ncontinue.\n","children":[{"ref":{"name":"Iterable","refId":"dart.core/Iterable","arguments":[{"name":"T","refId":"dart.async/Stream/T"}]},"kind":"param","name":"data","id":"data"}],"line":"91"},{"returnType":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"T","refId":"dart.async/Stream/T"}]},"kind":"constructor","name":"periodic","id":"periodic2()","comment":"\nCreates a stream that repeatedly emits events at [period] intervals.\n\nThe event values are computed by invoking [computation]. The argument to\nthis callback is an integer that starts with 0 and is incremented for\nevery event.\n\nIf [computation] is omitted the event values will all be `null`.\n","children":[{"ref":{"name":"Duration","refId":"dart.core/Duration"},"kind":"param","name":"period","id":"period"},{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"kind":"param","name":"computation","id":"computation","children":[{"returnType":{"name":"T","refId":"dart.async/Stream/T"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"computationCount","id":"computationCount","uri":"dart-sdk/lib/async/stream.dart","line":"106"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}],"line":"106"}],"line":"105"},{"returnType":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"T","refId":"dart.async/Stream/T"}]},"kind":"constructor","name":"eventTransformed","id":"eventTransformed2()","comment":"\nCreates a stream where all events of an existing stream are piped through\na sink-transformation.\n\nThe given [mapSink] closure is invoked when the returned stream is\nlistened to. All events from the [source] are added into the event sink\nthat is returned from the invocation. The transformation puts all\ntransformed events into the sink the [mapSink] closure received during\nits invocation. Conceptually the [mapSink] creates a transformation pipe\nwith the input sink being the returned [EventSink] and the output sink\nbeing the sink it received.\n\nThis constructor is frequently used to build transformers.\n\nExample use for a duplicating transformer:\n\n    class DuplicationSink implements EventSink<String> {\n      final EventSink<String> _outputSink;\n      DuplicationSink(this._outputSink);\n\n      void add(String data) {\n        _outputSink.add(data);\n        _outputSink.add(data);\n      }\n\n      void addError(e, [st]) => _outputSink(e, st);\n      void close() => _outputSink.close();\n    }\n\n    class DuplicationTransformer implements StreamTransformer<String, String> {\n      // Some generic types ommitted for brevety.\n      Stream bind(Stream stream) => new Stream<String>.eventTransform(\n          stream,\n          (EventSink sink) => new DuplicationSink(sink));\n    }\n\n    stringStream.transform(new DuplicationTransformer());\n","children":[{"ref":{"name":"Stream","refId":"dart.async/Stream"},"kind":"param","name":"source","id":"source"},{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"mapSink","id":"mapSink","children":[{"returnType":{"name":"EventSink","refId":"dart.async/EventSink"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"EventSink","refId":"dart.async/EventSink","arguments":[{"name":"T","refId":"dart.async/Stream/T"}]},"kind":"param","name":"sink","id":"sink","uri":"dart-sdk/lib/async/stream.dart","line":"194"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}],"line":"194"}],"line":"193"},{"kind":"typeparam","name":"T","id":"T"}],"uri":"dart-sdk/lib/async/stream.dart","line":"61"}],"uri":"dart-sdk/lib/async/async.dart","line":"32"},{"kind":"library","name":"dart:core","id":"dart.core","comment":"\n\nBuilt-in types, collections,\nand other core functionality for every Dart program.\n\nThis library is automatically imported.\n\nSome classes in this library,\nsuch as [String] and [num],\nsupport Dart's built-in data types.\nOther classes, such as [List] and [Map], provide data structures\nfor managing collections of objects.\nAnd still other classes represent commonly used types of data\nsuch as URIs, dates and times, and errors.\n\n## Numbers and booleans\n\n[int] and [double] provide support for Dart's built-in numerical data types:\nintegers and double-precision floating point numbers, respectively.\nAn object of type [bool] is either true or false.\nVariables of these types can be constructed from literals:\n\n    int meaningOfLife = 42;\n    double valueOfPi  = 3.141592;\n    bool visible      = true;\n\n## Strings and regular expressions\n\nA [String] is immutable and represents a sequence of characters.\n\n    String shakespeareQuote = \"All the world's a stage, ...\";\n\n[StringBuffer] provides a way to construct strings efficiently.\n\n    StringBuffer moreShakespeare = new StringBuffer();\n    moreShakespeare.write('And all the men and women ');\n    moreShakespeare.write('merely players; ...');\n\nThe String and StringBuffer classes implement string concatenation,\ninterpolation, and other string manipulation features.\n\n    String philosophy = 'Live on ';\n    String get palindrome => philosophy + philosophy.split('').reversed.join();\n\n[RegExp] implements Dart regular expressions,\nwhich provide a grammar for matching patterns within text.\nFor example, here's a regular expression that matches\na string of one or more digits:\n\n    var numbers = new RegExp(r'\\d+');\n\nDart regular expressions have the same syntax and semantics as\nJavaScript regular expressions. See\n<http://ecma-international.org/ecma-262/5.1/#sec-15.10>\nfor the specification of JavaScript regular expressions.\n\n## Collections\n\nThe dart:core library provides basic collections,\nsuch as [List], [Map], and [Set].\n\nA List is an ordered collection of objects, with a length.\nLists are sometimes called arrays.\nUse a List when you need to access objects by index.\n\n    List superheroes = [ 'Batman', 'Superman', 'Harry Potter' ];\n\nA Set is an unordered collection of unique objects.\nYou cannot get an item by index (position).\nAdding a duplicate item has no effect.\n\n    Set villains = new Set();\n    villains.add('Joker');\n    villains.addAll( ['Lex Luther', 'Voldemort'] );\n\nA Map is an unordered collection of key-value pairs.\nMaps are sometimes called associative arrays because\nmaps associate a key to some value for easy retrieval.\nKeys are unique.\nUse a Map when you need to access objects\nby a unique identifier.\n\n    Map sidekicks = { 'Batman': 'Robin',\n                      'Superman': 'Lois Lane',\n                      'Harry Potter': 'Ron and Hermione' };\n\nIn addition to these classes,\ndart:core contains [Iterable],\nan interface that defines functionality\ncommon in collections of objects.\nExamples include the ability\nto run a function on each element in the collection,\nto apply a test to each element,\nto retrieve an object, and to determine length.\n\nIterable is implemented by List and Set,\nand used by Map for its keys and values.\n\nFor other kinds of collections, check out the\n[dart:collection](#dart-collection) library.\n\n## Date and time\n\nUse [DateTime] to represent a point in time\nand [Duration] to represent a span of time.\n\nYou can create DateTime objects with constructors\nor by parsing a correctly formatted string.\n\n    DateTime now = new DateTime.now();\n    DateTime berlinWallFell = new DateTime(1989, 11, 9);\n    DateTime moonLanding = DateTime.parse(\"1969-07-20\");\n\nCreate a Duration object specifying the individual time units.\n\n    Duration timeRemaining = new Duration(hours:56, minutes:14);\n\nIn addition to DateTime and Duration,\ndart:core contains the [Stopwatch] class for measuring elapsed time.\n\n## Uri\n\nA [Uri] object represents a uniform resource identifier,\nwhich identifies a resource on the web.\n\n    Uri dartlang = Uri.parse('http://dartlang.org/');\n\n## Errors\n\nThe [Error] class represents the occurrence of an error\nduring runtime.\nSubclasses of this class represent specific kinds of errors.\n\n## Other documentation\n\nFor more information about how to use the built-in types, refer to\n[Built-in Types](http://www.dartlang.org/docs/dart-up-and-running/contents/ch02.html#built-in-types)\nin Chapter 2 of\n[Dart: Up and Running](http://www.dartlang.org/docs/dart-up-and-running/).\n\nAlso, see\n[dart:core - Numbers, Collections, Strings, and More](http://www.dartlang.org/docs/dart-up-and-running/contents/ch03.html#ch03-dartcore---strings-collections-and-more)\nfor more coverage of classes in this package.\n\nThe\n[Dart Language Specification](http://www.dartlang.org/docs/spec/)\nprovides technical details.\n","children":[{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"kind":"class","name":"StringSink","id":"StringSink","children":[{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"write","id":"write1()","comment":"\nConverts [obj] to a String by invoking `toString` and adds the result to\n`this`.\n","children":[{"ref":{"name":"Object","refId":"dart.core/Object"},"kind":"param","name":"obj","id":"obj"}],"line":"13"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"writeAll","id":"writeAll2()","comment":"\nIterates over the given [objects] and [write]s them in sequence.\n","children":[{"ref":{"name":"Iterable","refId":"dart.core/Iterable"},"kind":"param","name":"objects","id":"objects"},{"ref":{"name":"String","refId":"dart.core/String"},"defaultValue":"\"\"","isOptional":true,"kind":"param","name":"separator","id":"separator"}],"line":"18"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"writeln","id":"writeln1()","comment":"\nConverts [obj] to a String by invoking `toString` and adds the result to\n`this`. Then adds a new line.\n","children":[{"ref":{"name":"Object","refId":"dart.core/Object"},"defaultValue":"\"\"","isOptional":true,"kind":"param","name":"obj","id":"obj"}],"line":"24"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"writeCharCode","id":"writeCharCode1()","comment":"\nWrites the [charCode] to `this`.\n\nThis method is equivalent to `write(new String.fromCharCode(charCode))`.\n","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"charCode","id":"charCode"}],"line":"31"}],"uri":"dart-sdk/lib/core/string_sink.dart","line":"7"},{"kind":"class","name":"Object","id":"Object","comment":"\nThe base class for all Dart objects.\n\nBecause Object is the root of the Dart class hierarchy,\nevery other Dart class is a subclass of Object.\n\nWhen you define a class, you should override [toString]\nto return a string describing an instance of that class.\nYou might also need to define [hashCode] and [==], as described in the\n[Implementing map keys]\n(http://www.dartlang.org/docs/dart-up-and-running/contents/ch03.html#ch03-implementing-map-keys)\nsection of the [library tour]\n(http://www.dartlang.org/docs/dart-up-and-running/contents/ch03.html).\n","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"isOperator":true,"kind":"method","name":"==","id":"==1()","comment":"\nThe equality operator.\n\nThe default behavior for all [Object]s is to return true if and\nonly if [:this:] and [other] are the same object.\n\nOverride this method to specify a different equality relation on\na class. The overriding method must still be an equivalence relation.\nThat is, it must be:\n\n * Total: It must return a boolean for all arguments. It should never throw\n   or return `null`.\n\n * Reflexive: For all objects `o`, `o == o` must be true.\n\n * Symmetric: For all objects `o1` and `o2`, `o1 == o2` and `o2 == o1` must\n   either both be true, or both be false.\n\n * Transitive: For all objects `o1`, `o2`, and `o3`, if `o1 == o2` and\n   `o2 == o3` are true, then `o1 == o3` must be true.\n\nThe method should also be consistent over time, so equality of two objects\nshould not change over time, or at least only change if one of the objects\nwas modified.\n\nIf a subclass overrides the equality operator it should override\nthe [hashCode] method as well to maintain consistency.\n","children":[{"kind":"param","name":"other","id":"other"}],"line":"59"},{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"method","name":"toString","id":"toString0()","comment":"\nReturns a string representation of this object.\n","line":"78"},{"kind":"method","name":"noSuchMethod","id":"noSuchMethod1()","comment":"\n[noSuchMethod] is invoked when users invoke a non-existent method\non an object. The name of the method and the arguments of the\ninvocation are passed to [noSuchMethod] in an [Invocation].\nIf [noSuchMethod] returns a value, that value becomes the result of\nthe original invocation.\n\nThe default behavior of [noSuchMethod] is to throw a\n[NoSuchMethodError].\n","children":[{"ref":{"name":"Invocation","refId":"dart.core/Invocation"},"kind":"param","name":"invocation","id":"invocation"}],"line":"90"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"property","name":"hashCode","id":"hashCode","comment":"\nGet a hash code for this object.\n\nAll objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator [:==:]. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.\n\nIf a subclass overrides [hashCode] it should override the\nequality operator as well to maintain consistency.\n","line":"73"},{"ref":{"name":"Type","refId":"dart.core/Type"},"kind":"property","name":"runtimeType","id":"runtimeType","comment":"\nA representation of the runtime type of the object.\n","line":"95"},{"kind":"constructor","name":"","id":"0()","comment":"\nCreates a new [Object] instance.\n\n[Object] instances have no meaningful state, and are only useful\nthrough their identity. An [Object] instance is equal to itself\nonly.\n","line":"29"}],"uri":"dart-sdk/lib/core/object.dart","line":"21"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"kind":"class","name":"Map","id":"Map","comment":"\nAn unordered collection of key-value pairs, from which you retrieve a value\nby using its associated key.\n\nEach key can occur at most once in a map.\n\nIt is generally not allowed to modify the map (add or remove keys) while\nan operation is being performed on the map, for example in functions called\nduring a [forEach] or [putIfAbsent] call.\nModifying the map while iterating the keys or values will also most likely\nbreak the iteration.\n","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"method","name":"containsValue","id":"containsValue1()","comment":"\nReturns true if this map contains the given value.\n","children":[{"ref":{"name":"Object","refId":"dart.core/Object"},"kind":"param","name":"value","id":"value"}],"line":"109"},{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"method","name":"containsKey","id":"containsKey1()","comment":"\nReturns true if this map contains the given key.\n","children":[{"ref":{"name":"Object","refId":"dart.core/Object"},"kind":"param","name":"key","id":"key"}],"line":"114"},{"returnType":{"name":"V","refId":"dart.core/Map/V"},"isOperator":true,"kind":"method","name":"[]","id":"[]1()","comment":"\nReturns the value for the given [key] or null if [key] is not\nin the map. Because null values are supported, one should either\nuse [containsKey] to distinguish between an absent key and a null\nvalue, or use the [putIfAbsent] method.\n","children":[{"ref":{"name":"Object","refId":"dart.core/Object"},"kind":"param","name":"key","id":"key"}],"line":"122"},{"returnType":{"name":"void","refId":"void"},"isOperator":true,"kind":"method","name":"[]=","id":"[]=2()","comment":"\nAssociates the [key] with the given [value].\n","children":[{"ref":{"name":"K","refId":"dart.core/Map/K"},"kind":"param","name":"key","id":"key"},{"ref":{"name":"V","refId":"dart.core/Map/V"},"kind":"param","name":"value","id":"value"}],"line":"127"},{"returnType":{"name":"V","refId":"dart.core/Map/V"},"kind":"method","name":"putIfAbsent","id":"putIfAbsent2()","comment":"\nIf [key] is not associated to a value, calls [ifAbsent] and\nupdates the map by mapping [key] to the value returned by\n[ifAbsent]. Returns the value in the map.\n\n    Map<String, int> scores = {'Bob': 36};\n    for (var key in ['Bob', 'Rohan', 'Sophena']) {\n      scores.putIfAbsent(key, () => key.length);\n    }\n    scores['Bob'];      // 36\n    scores['Rohan'];    //  5\n    scores['Sophena'];  //  7\n\nThe code that [ifAbsent] executes must not add or remove keys.\n","children":[{"ref":{"name":"K","refId":"dart.core/Map/K"},"kind":"param","name":"key","id":"key"},{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"ifAbsent","id":"ifAbsent","children":[{"returnType":{"name":"V","refId":"dart.core/Map/V"},"kind":"functiontype","name":"Function","id":"Function","uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"144"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"addAll","id":"addAll1()","comment":"\nAdds all key-value pairs of [other] to this map.\n\nIf a key of [other] is already in this map, its value is overwritten.\n\nThe operation is equivalent to doing `this[key] = value` for each key\nand associated value in other. It iterates over [other], which must\ntherefore not change during the iteration.\n","children":[{"ref":{"name":"Map","refId":"dart.core/Map","arguments":[{"name":"K","refId":"dart.core/Map/K"},{"name":"V","refId":"dart.core/Map/V"}]},"kind":"param","name":"other","id":"other"}],"line":"155"},{"returnType":{"name":"V","refId":"dart.core/Map/V"},"kind":"method","name":"remove","id":"remove1()","comment":"\nRemoves the association for the given [key]. Returns the value for\n[key] in the map or null if [key] is not in the map. Note that values\ncan be null and a returned null value does not always imply that the\nkey is absent.\n","children":[{"ref":{"name":"Object","refId":"dart.core/Object"},"kind":"param","name":"key","id":"key"}],"line":"163"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"clear","id":"clear0()","comment":"\nRemoves all pairs from the map.\n","line":"168"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"forEach","id":"forEach1()","comment":"\nApplies [f] to each {key, value} pair of the map.\n\nIt is an error to add or remove keys from the map during iteration.\n","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"f","id":"f","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"K","refId":"dart.core/Map/K"},"kind":"param","name":"key","id":"key","uri":"dart-sdk/lib/core/map.dart","line":"175"},{"ref":{"name":"V","refId":"dart.core/Map/V"},"kind":"param","name":"value","id":"value","uri":"dart-sdk/lib/core/map.dart","line":"175"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"175"},{"ref":{"name":"Iterable","refId":"dart.core/Iterable","arguments":[{"name":"K","refId":"dart.core/Map/K"}]},"kind":"property","name":"keys","id":"keys","comment":"\nThe keys of [this].\n\nThe returned iterable has efficient `length` and `contains` operations,\nbased on [length] and [containsKey] of the map.\n","line":"183"},{"ref":{"name":"Iterable","refId":"dart.core/Iterable","arguments":[{"name":"V","refId":"dart.core/Map/V"}]},"kind":"property","name":"values","id":"values","comment":"\nThe values of [this].\n\nThe returned iterable has an efficient `length` method based on the\n[length] of the map.\n","line":"191"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"property","name":"length","id":"length","comment":"\nThe number of key-value pairs in the map.\n","line":"196"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"isEmpty","id":"isEmpty","comment":"\nReturns true if there is no key-value pair in the map.\n","line":"201"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"isNotEmpty","id":"isNotEmpty","comment":"\nReturns true if there is at least one key-value pair in the map.\n","line":"206"},{"returnType":{"name":"Map","refId":"dart.core/Map","arguments":[{"name":"K","refId":"dart.core/Map/K"},{"name":"V","refId":"dart.core/Map/V"}]},"kind":"constructor","name":"","id":"0()","comment":"\nCreates a Map instance with the default implementation, [LinkedHashMap].\n\nA `LinkedHashMap` requires the keys to implement compatible\n`operator==` and `hashCode`, and it allows null as a key.\n","line":"26"},{"returnType":{"name":"Map","refId":"dart.core/Map","arguments":[{"name":"K","refId":"dart.core/Map/K"},{"name":"V","refId":"dart.core/Map/V"}]},"kind":"constructor","name":"from","id":"from1()","comment":"\nCreates a [LinkedHashMap] instance that contains all key-value pairs of\n[other].\n\nA `LinkedHashMap` requires the keys to implement compatible\n`operator==` and `hashCode`, and it allows null as a key.\n","children":[{"ref":{"name":"Map","refId":"dart.core/Map","arguments":[{"name":"K","refId":"dart.core/Map/K"},{"name":"V","refId":"dart.core/Map/V"}]},"kind":"param","name":"other","id":"other"}],"line":"35"},{"returnType":{"name":"Map","refId":"dart.core/Map","arguments":[{"name":"K","refId":"dart.core/Map/K"},{"name":"V","refId":"dart.core/Map/V"}]},"kind":"constructor","name":"identity","id":"identity0()","comment":"\nCreates an identity map with the default implementation, [LinkedHashMap].\n\nThe returned map allows `null` as a key.\n","line":"42"},{"returnType":{"name":"Map","refId":"dart.core/Map","arguments":[{"name":"K","refId":"dart.core/Map/K"},{"name":"V","refId":"dart.core/Map/V"}]},"kind":"constructor","name":"fromIterable","id":"fromIterable3()","comment":"\nCreates a Map instance in which the keys and values are computed from the\n[iterable].\n\nThe created map is a [LinkedHashMap].\nA `LinkedHashMap` requires the keys to implement compatible\n`operator==` and `hashCode`, and it allows null as a key.\n\nFor each element of the [iterable] this constructor computes a key-value\npair, by applying [key] and [value] respectively.\n\nThe example below creates a new Map from a List. The keys of `map` are\n`list` values converted to strings, and the values of the `map` are the\nsquares of the `list` values:\n\n    List<int> list = [1, 2, 3];\n    Map<String, int> map = new Map.fromIterable(list,\n        key: (item) => item.toString(),\n        value: (item) => item * item));\n\n    map['1'] + map['2']; // 1 + 4\n    map['3'] - map['2']; // 9 - 4\n\nIf no values are specified for [key] and [value] the default is the\nidentity function.\n\nIn the following example, the keys and corresponding values of `map`\nare `list` values:\n\n    map = new Map.fromIterable(list);\n    map[1] + map[2]; // 1 + 2\n    map[3] - map[2]; // 3 - 2\n\nThe keys computed by the source [iterable] do not need to be unique. The\nlast occurrence of a key will simply overwrite any previous value.\n","children":[{"ref":{"name":"Iterable","refId":"dart.core/Iterable"},"kind":"param","name":"iterable","id":"iterable"},{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"isNamed":true,"kind":"param","name":"key","id":"key","children":[{"returnType":{"name":"K","refId":"dart.core/Map/K"},"kind":"functiontype","name":"Function","id":"Function","children":[{"kind":"param","name":"element","id":"element","uri":"dart-sdk/lib/core/map.dart","line":"81"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}],"line":"81"},{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"isNamed":true,"kind":"param","name":"value","id":"value","children":[{"returnType":{"name":"V","refId":"dart.core/Map/V"},"kind":"functiontype","name":"Function","id":"Function","children":[{"kind":"param","name":"element","id":"element","uri":"dart-sdk/lib/core/map.dart","line":"81"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}],"line":"81"}],"line":"80"},{"returnType":{"name":"Map","refId":"dart.core/Map","arguments":[{"name":"K","refId":"dart.core/Map/K"},{"name":"V","refId":"dart.core/Map/V"}]},"kind":"constructor","name":"fromIterables","id":"fromIterables2()","comment":"\nCreates a Map instance associating the given [keys] to [values].\n\nThe created map is a [LinkedHashMap].\nA `LinkedHashMap` requires the keys to implement compatible\n`operator==` and `hashCode`, and it allows null as a key.\n\nThis constructor iterates over [keys] and [values] and maps each element of\n[keys] to the corresponding element of [values].\n\n    List<String> letters = ['b', 'c'];\n    List<String> words = ['bad', 'cat'];\n    Map<String, String> map = new Map.fromIterables(letters, words);\n    map['b'] + map['c'];  // badcat\n\nIf [keys] contains the same object multiple times, the last occurrence\noverwrites the previous value.\n\nIt is an error if the two [Iterable]s don't have the same length.\n","children":[{"ref":{"name":"Iterable","refId":"dart.core/Iterable","arguments":[{"name":"K","refId":"dart.core/Map/K"}]},"kind":"param","name":"keys","id":"keys"},{"ref":{"name":"Iterable","refId":"dart.core/Iterable","arguments":[{"name":"V","refId":"dart.core/Map/V"}]},"kind":"param","name":"values","id":"values"}],"line":"103"},{"kind":"typeparam","name":"K","id":"K"},{"kind":"typeparam","name":"V","id":"V"}],"uri":"dart-sdk/lib/core/map.dart","line":"19"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"isThrowable":true,"kind":"class","name":"Exception","id":"Exception","comment":"\nA marker interface implemented by all core library exceptions.\n\nAn [Exception] is intended to convey information to the user about a failure,\nso that the error can be addressed programmatically. It is intended to be\ncaught, and it should contain useful data fields.\n\nCreating instances of [Exception] directly with [:new Exception(\"message\"):]\nis discouraged, and only included as a temporary measure during development,\nuntil the actual exceptions used by a library are done.\n","children":[{"returnType":{"name":"Exception","refId":"dart.core/Exception"},"kind":"constructor","name":"","id":"1()","children":[{"isOptional":true,"kind":"param","name":"message","id":"message"}],"line":"21"}],"uri":"dart-sdk/lib/core/exceptions.dart","line":"20"}],"uri":"dart-sdk/lib/core/core.dart","line":"153"},{"kind":"library","name":"dart:convert","id":"dart.convert","comment":"\nConverters for JSON and UTF-8, as well as support for creating additional\nconverters.\n","children":[{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"interfaces":[{"name":"StringConversionSink","refId":"dart.convert/StringConversionSink"}],"kind":"class","name":"StringConversionSinkMixin","id":"StringConversionSinkMixin","comment":"\nThis class provides a mixin for converters that need to accept String\ninputs.\n","children":[{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"addSlice","id":"addSlice4()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"str","id":"str"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"start","id":"start"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"end","id":"end"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"param","name":"isLast","id":"isLast"}],"line":"178"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"close","id":"close0()","line":"179"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"add","id":"add1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"str","id":"str"}],"line":"181"},{"returnType":{"name":"ByteConversionSink","refId":"dart.convert/ByteConversionSink"},"kind":"method","name":"asUtf8Sink","id":"asUtf8Sink1()","children":[{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"param","name":"allowMalformed","id":"allowMalformed"}],"line":"183"},{"returnType":{"name":"ClosableStringSink","refId":"dart.convert/ClosableStringSink"},"kind":"method","name":"asStringSink","id":"asStringSink0()","line":"187"}],"uri":"dart-sdk/lib/convert/string_conversion.dart","line":"176"},{"superclass":{"name":"StringConversionSinkMixin","refId":"dart.convert/StringConversionSinkMixin"},"isAbstract":true,"kind":"class","name":"StringConversionSinkBase","id":"StringConversionSinkBase","comment":"\nThis class provides a base-class for converters that need to accept String\ninputs.\n","uri":"dart-sdk/lib/convert/string_conversion.dart","line":"169"},{"superclass":{"name":"ChunkedConversionSink","refId":"dart.convert/ChunkedConversionSink","arguments":[{"name":"String","refId":"dart.core/String"}]},"isAbstract":true,"kind":"class","name":"StringConversionSink","id":"StringConversionSink","comment":"\nThis class provides an interface for converters to\nefficiently transmit String data.\n\nInstead of limiting the interface to one non-chunked String it accepts\npartial strings or can be transformed into a byte sink that\naccepts UTF-8 code units.\n\nThis abstract class will likely get more methods over time. Implementers are\nurged to extend [StringConversionSinkBase] or to mix in\n[StringConversionSinkMixin], to ensure that their class covers the newly\nadded methods.\n","children":[{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"addSlice","id":"addSlice4()","comment":"\nAdds the next [chunk] to `this`.\n\nAdds the substring defined by [start] and [end]-exclusive to `this`.\n\nIf [isLast] is `true` closes `this`.\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"chunk","id":"chunk"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"start","id":"start"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"end","id":"end"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"param","name":"isLast","id":"isLast"}],"line":"45"},{"returnType":{"name":"ByteConversionSink","refId":"dart.convert/ByteConversionSink"},"kind":"method","name":"asUtf8Sink","id":"asUtf8Sink1()","comment":"\nReturns `this` as a sink that accepts UTF-8 input.\n\nIf used, this method must be the first and only call to `this`. It\ninvalidates `this`. All further operations must be performed on the result.\n","children":[{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"param","name":"allowMalformed","id":"allowMalformed"}],"line":"53"},{"returnType":{"name":"ClosableStringSink","refId":"dart.convert/ClosableStringSink"},"kind":"method","name":"asStringSink","id":"asStringSink0()","comment":"\nReturns `this` as a [ClosableStringSink].\n\nIf used, this method must be the first and only call to `this`. It\ninvalidates `this`. All further operations must be performed on the result.\n","line":"63"},{"kind":"constructor","name":"","id":"0()","line":"22"},{"returnType":{"name":"StringConversionSink","refId":"dart.convert/StringConversionSink"},"kind":"constructor","name":"withCallback","id":"withCallback1()","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"callback","id":"callback","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"accumulated","id":"accumulated","uri":"dart-sdk/lib/convert/string_conversion.dart","line":"23"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"23"},{"returnType":{"name":"StringConversionSink","refId":"dart.convert/StringConversionSink"},"kind":"constructor","name":"from","id":"from1()","children":[{"ref":{"name":"ChunkedConversionSink","refId":"dart.convert/ChunkedConversionSink","arguments":[{"name":"String","refId":"dart.core/String"}]},"kind":"param","name":"sink","id":"sink"}],"line":"25"},{"returnType":{"name":"StringConversionSink","refId":"dart.convert/StringConversionSink"},"kind":"constructor","name":"fromStringSink","id":"fromStringSink1()","comment":"\nCreates a new instance wrapping the given [sink].\n\nEvery string that is added to the returned instance is forwarded to\nthe [sink]. The instance is allowed to buffer and is not required to\nforward immediately.\n","children":[{"ref":{"name":"StringSink","refId":"dart.core/StringSink"},"kind":"param","name":"sink","id":"sink"}],"line":"35"}],"uri":"dart-sdk/lib/convert/string_conversion.dart","line":"20"},{"superclass":{"name":"Codec","refId":"dart.convert/Codec","arguments":[{"name":"String","refId":"dart.core/String"},{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]}]},"isAbstract":true,"kind":"class","name":"Encoding","id":"Encoding","comment":"\nOpen-ended Encoding enum.\n","children":[{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"String","refId":"dart.core/String"}]},"kind":"method","name":"decodeStream","id":"decodeStream1()","children":[{"ref":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]}]},"kind":"param","name":"byteStream","id":"byteStream"}],"line":"13"},{"returnType":{"name":"Encoding","refId":"dart.convert/Encoding"},"isStatic":true,"kind":"method","name":"getByName","id":"getByName1()","comment":"\nGets an [Encoding] object from the name of the character set\nname. The names used are the IANA official names for the\ncharacter set (see\nhttp://www.iana.org/assignments/character-sets/character-sets.xml).\n\nThe [name] passed is case insensitive.\n\nIf character set is not supported [:null:] is returned.\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"name","id":"name"}],"line":"71"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"property","name":"name","id":"name","comment":"\nName of the encoding.\n\nIf the encoding is standardized, this is the lower-case version of one of\nthe IANA official names for the character set (see\nhttp://www.iana.org/assignments/character-sets/character-sets.xml)\n","line":"27"},{"ref":{"name":"Map","refId":"dart.core/Map","arguments":[{"name":"String","refId":"dart.core/String"},{"name":"Encoding","refId":"dart.convert/Encoding"}]},"isStatic":true,"kind":"variable","name":"_nameToEncoding","id":"_nameToEncoding","isPrivate":true,"line":"31"},{"kind":"constructor","name":"","id":"0()","line":"11"}],"uri":"dart-sdk/lib/convert/encoding.dart","line":"10"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"interfaces":[{"name":"StreamTransformer","refId":"dart.async/StreamTransformer"}],"kind":"class","name":"Converter","id":"Converter","comment":"\nA [Converter] converts data from one representation into another.\n\nIt is recommended that implementations of `Converter` extend this class,\nto inherit any further methods that may be added to the class.\n","children":[{"returnType":{"name":"T","refId":"dart.convert/Converter/T"},"kind":"method","name":"convert","id":"convert1()","comment":"\nConverts [input] and returns the result of the conversion.\n","children":[{"ref":{"name":"S","refId":"dart.convert/Converter/S"},"kind":"param","name":"input","id":"input"}],"line":"19"},{"returnType":{"name":"Converter","refId":"dart.convert/Converter","arguments":[{"name":"S","refId":"dart.convert/Converter/S"}]},"kind":"method","name":"fuse","id":"fuse1()","comment":"\nFuses `this` with [other].\n\nEncoding with the resulting converter is equivalent to converting with\n`this` before converting with `other`.\n","children":[{"ref":{"name":"Converter","refId":"dart.convert/Converter","arguments":[{"name":"T","refId":"dart.convert/Converter/T"}]},"kind":"param","name":"other","id":"other"}],"line":"27"},{"returnType":{"name":"ChunkedConversionSink","refId":"dart.convert/ChunkedConversionSink"},"kind":"method","name":"startChunkedConversion","id":"startChunkedConversion1()","comment":"\nStarts a chunked conversion.\n","children":[{"ref":{"name":"ChunkedConversionSink","refId":"dart.convert/ChunkedConversionSink"},"kind":"param","name":"sink","id":"sink"}],"line":"34"},{"returnType":{"name":"Stream","refId":"dart.async/Stream"},"kind":"method","name":"bind","id":"bind1()","children":[{"ref":{"name":"Stream","refId":"dart.async/Stream"},"kind":"param","name":"source","id":"source"}],"line":"40"},{"kind":"constructor","name":"","id":"0()","line":"14"},{"kind":"typeparam","name":"S","id":"S"},{"kind":"typeparam","name":"T","id":"T"}],"uri":"dart-sdk/lib/convert/converter.dart","line":"13"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"kind":"class","name":"Codec","id":"Codec","comment":"\nA [Codec] encodes and (if supported) decodes data.\n\nCodecs can be fused. For example fusing [JSON] and [UTF8] produces\nan encoder that can convert Json objects directly to bytes, or can decode\nbytes directly to json objects.\n\nFused codecs generally attempt to optimize the operations and can be faster\nthan executing each step of an encoding separately.\n\n*Codecs are still experimental and are subject to change without notice.*\n","children":[{"returnType":{"name":"T","refId":"dart.convert/Codec/T"},"kind":"method","name":"encode","id":"encode1()","children":[{"ref":{"name":"S","refId":"dart.convert/Codec/S"},"kind":"param","name":"input","id":"input"}],"line":"22"},{"returnType":{"name":"S","refId":"dart.convert/Codec/S"},"kind":"method","name":"decode","id":"decode1()","children":[{"ref":{"name":"T","refId":"dart.convert/Codec/T"},"kind":"param","name":"encoded","id":"encoded"}],"line":"23"},{"returnType":{"name":"Codec","refId":"dart.convert/Codec","arguments":[{"name":"S","refId":"dart.convert/Codec/S"}]},"kind":"method","name":"fuse","id":"fuse1()","comment":"\nFuses `this` with `other`.\n\nWhen encoding, the resulting codec encodes with `this` before\nencoding with [other].\n\nWhen decoding, the resulting codec decodes with [other] before decoding\nwith `this`.\n\nIn some cases one needs to use the [inverted] codecs to be able to fuse\nthem correctly. That is, the output type of `this` ([T]) must match the\ninput type of the second codec [other].\n\nExamples:\n\n    final JSON_TO_BYTES = JSON.fuse(UTF8);\n    List<int> bytes = JSON_TO_BYTES.encode([\"json-object\"]);\n    var decoded = JSON_TO_BYTES.decode(bytes);\n    assert(decoded is List && decoded[0] == \"json-object\");\n\n    var inverted = JSON.inverted;\n    var jsonIdentity = JSON.fuse(inverted);\n    var jsonObject = jsonIdentity.encode([\"1\", 2]);\n    assert(jsonObject is List && jsonObject[0] == \"1\" && jsonObject[1] == 2);\n","children":[{"ref":{"name":"Codec","refId":"dart.convert/Codec","arguments":[{"name":"T","refId":"dart.convert/Codec/T"}]},"kind":"param","name":"other","id":"other"}],"line":"65"},{"ref":{"name":"Converter","refId":"dart.convert/Converter","arguments":[{"name":"S","refId":"dart.convert/Codec/S"},{"name":"T","refId":"dart.convert/Codec/T"}]},"kind":"property","name":"encoder","id":"encoder","comment":"\nReturns the encoder from [S] to [T].\n\nIt may be stateful and should not be reused.\n","line":"30"},{"ref":{"name":"Converter","refId":"dart.convert/Converter","arguments":[{"name":"T","refId":"dart.convert/Codec/T"},{"name":"S","refId":"dart.convert/Codec/S"}]},"kind":"property","name":"decoder","id":"decoder","comment":"\nReturns the decoder of `this`, converting from [T] to [S].\n\nIt may be stateful an should not be reused.\n","line":"36"},{"ref":{"name":"Codec","refId":"dart.convert/Codec","arguments":[{"name":"T","refId":"dart.convert/Codec/T"},{"name":"S","refId":"dart.convert/Codec/S"}]},"kind":"property","name":"inverted","id":"inverted","comment":"\nInverts `this`.\n\nThe [encoder] and [decoder] of the resulting codec are swapped.\n","line":"74"},{"kind":"constructor","name":"","id":"0()","line":"20"},{"kind":"typeparam","name":"S","id":"S"},{"kind":"typeparam","name":"T","id":"T"}],"uri":"dart-sdk/lib/convert/codec.dart","line":"19"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"kind":"class","name":"ChunkedConversionSink","id":"ChunkedConversionSink","comment":"\nA [ChunkedConversionSink] is used to transmit data more efficiently between\ntwo converters during chunked conversions.\n\nIt is recommended that implementations of `ChunkedConversionSink` extends\nthis class, to inherit any further methods that may be added to the class.\n","children":[{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"add","id":"add1()","comment":"\nAdds chunked data to this sink.\n\nThis method is also used when converters are used as [StreamTransformer]s.\n","children":[{"ref":{"name":"T","refId":"dart.convert/ChunkedConversionSink/T"},"kind":"param","name":"chunk","id":"chunk"}],"line":"26"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"close","id":"close0()","comment":"\nCloses the sink.\n\nThis signals the end of the chunked conversion. This method is called\nwhen converters are used as [StreamTransformer]'s.\n","line":"34"},{"kind":"constructor","name":"","id":"0()","line":"17"},{"returnType":{"name":"ChunkedConversionSink","refId":"dart.convert/ChunkedConversionSink","arguments":[{"name":"T","refId":"dart.convert/ChunkedConversionSink/T"}]},"kind":"constructor","name":"withCallback","id":"withCallback1()","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"callback","id":"callback","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"T","refId":"dart.convert/ChunkedConversionSink/T"}]},"kind":"param","name":"accumulated","id":"accumulated","uri":"dart-sdk/lib/convert/chunked_conversion.dart","line":"19"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}],"line":"19"}],"line":"18"},{"kind":"typeparam","name":"T","id":"T"}],"uri":"dart-sdk/lib/convert/chunked_conversion.dart","line":"16"},{"superclass":{"name":"ByteConversionSink","refId":"dart.convert/ByteConversionSink"},"isAbstract":true,"kind":"class","name":"ByteConversionSinkBase","id":"ByteConversionSinkBase","comment":"\nThis class provides a base-class for converters that need to accept byte\ninputs.\n","children":[{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"add","id":"add1()","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"param","name":"chunk","id":"chunk"}],"line":"47"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"close","id":"close0()","line":"48"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"addSlice","id":"addSlice4()","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"param","name":"chunk","id":"chunk"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"start","id":"start"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"end","id":"end"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"param","name":"isLast","id":"isLast"}],"line":"50"}],"uri":"dart-sdk/lib/convert/byte_conversion.dart","line":"45"},{"superclass":{"name":"ChunkedConversionSink","refId":"dart.convert/ChunkedConversionSink","arguments":[{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]}]},"isAbstract":true,"kind":"class","name":"ByteConversionSink","id":"ByteConversionSink","comment":"\nThe [ByteConversionSink] provides an interface for converters to\nefficiently transmit byte data.\n\nInstead of limiting the interface to one non-chunked list of bytes it\naccepts its input in chunks (themselves being lists of bytes).\n\nThis abstract class will likely get more methods over time. Implementers are\nurged to extend or mix in [ByteConversionSinkBase] to ensure that their\nclass covers the newly added methods.\n","children":[{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"addSlice","id":"addSlice4()","comment":"\nAdds the next [chunk] to `this`.\n\nAdds the bytes defined by [start] and [end]-exclusive to `this`.\n\nIf [isLast] is `true` closes `this`.\n\nContrary to `add` the given [chunk] must not be held onto. Once the method\nreturns, it is safe to overwrite the data in it.\n","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"param","name":"chunk","id":"chunk"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"start","id":"start"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"end","id":"end"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"param","name":"isLast","id":"isLast"}],"line":"35"},{"kind":"constructor","name":"","id":"0()","line":"19"},{"returnType":{"name":"ByteConversionSink","refId":"dart.convert/ByteConversionSink"},"kind":"constructor","name":"withCallback","id":"withCallback1()","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"callback","id":"callback","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"param","name":"accumulated","id":"accumulated","uri":"dart-sdk/lib/convert/byte_conversion.dart","line":"20"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"20"},{"returnType":{"name":"ByteConversionSink","refId":"dart.convert/ByteConversionSink"},"kind":"constructor","name":"from","id":"from1()","children":[{"ref":{"name":"ChunkedConversionSink","refId":"dart.convert/ChunkedConversionSink","arguments":[{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]}]},"kind":"param","name":"sink","id":"sink"}],"line":"22"}],"uri":"dart-sdk/lib/convert/byte_conversion.dart","line":"18"}],"uri":"dart-sdk/lib/convert/convert.dart","line":"9"},{"kind":"library","name":"dart:collection","id":"dart.collection","comment":"\nClasses and utilities that supplement the collection support in dart:core.\n","children":[{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"interfaces":[{"name":"_LinkedListLink","refId":"dart.collection/_LinkedListLink"}],"kind":"class","name":"LinkedListEntry","id":"LinkedListEntry","comment":"\nEntry element for a [LinkedList]. Any entry must extend this class.\n","children":[{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"unlink","id":"unlink0()","comment":"\nUnlink the element from the list.\n","line":"202"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"insertAfter","id":"insertAfter1()","comment":"\ninsert an element after this.\n","children":[{"ref":{"name":"E","refId":"dart.collection/LinkedListEntry/E"},"kind":"param","name":"entry","id":"entry"}],"line":"225"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"insertBefore","id":"insertBefore1()","comment":"\nInsert an element before this.\n","children":[{"ref":{"name":"E","refId":"dart.collection/LinkedListEntry/E"},"kind":"param","name":"entry","id":"entry"}],"line":"232"},{"ref":{"name":"LinkedList","refId":"dart.collection/LinkedList","arguments":[{"name":"E","refId":"dart.collection/LinkedListEntry/E"}]},"kind":"property","name":"list","id":"list","comment":"\nGet the list containing this element.\n","line":"197"},{"ref":{"name":"E","refId":"dart.collection/LinkedListEntry/E"},"kind":"property","name":"next","id":"next","comment":"\nReturn the succeeding element in the list.\n","line":"209"},{"ref":{"name":"E","refId":"dart.collection/LinkedListEntry/E"},"kind":"property","name":"previous","id":"previous","comment":"\nReturn the preceeding element in the list.\n","line":"217"},{"ref":{"name":"LinkedList","refId":"dart.collection/LinkedList","arguments":[{"name":"E","refId":"dart.collection/LinkedListEntry/E"}]},"kind":"variable","name":"_list","id":"_list","isPrivate":true,"line":"190"},{"ref":{"name":"_LinkedListLink","refId":"dart.collection/_LinkedListLink"},"kind":"variable","name":"_next","id":"_next","isPrivate":true,"line":"191"},{"ref":{"name":"_LinkedListLink","refId":"dart.collection/_LinkedListLink"},"kind":"variable","name":"_previous","id":"_previous","isPrivate":true,"line":"192"},{"upperBound":{"name":"LinkedListEntry","refId":"dart.collection/LinkedListEntry","arguments":[{"name":"E","refId":"dart.collection/LinkedListEntry/E"}]},"kind":"typeparam","name":"E","id":"E"}],"uri":"dart-sdk/lib/collection/linked_list.dart","line":"188"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"kind":"class","name":"_LinkedListLink","id":"_LinkedListLink","children":[{"ref":{"name":"_LinkedListLink","refId":"dart.collection/_LinkedListLink"},"kind":"variable","name":"_next","id":"_next","isPrivate":true,"line":"180"},{"ref":{"name":"_LinkedListLink","refId":"dart.collection/_LinkedListLink"},"kind":"variable","name":"_previous","id":"_previous","isPrivate":true,"line":"181"}],"isPrivate":true,"uri":"dart-sdk/lib/collection/linked_list.dart","line":"179"}],"uri":"dart-sdk/lib/collection/collection.dart","line":"8"}],"kind":"library","name":"dart:io","id":"dart.io","comment":"\nFile, socket, HTTP, and other I/O support for server applications.\n\nThe IO library is used for Dart server applications,\nwhich run on a stand-alone Dart VM from the command line.\n*This library does not work in browser based applications.*\n\nThis library allows you to work with files, directories,\nsockets, processes, HTTP servers and clients, and more.\n","children":[{"kind":"method","name":"_getTimerFactoryClosure","id":"_getTimerFactoryClosure0()","isPrivate":true,"uri":"dart-sdk/lib/io/timer_impl.dart","line":"314"},{"returnType":{"name":"StdioType","refId":"dart.io/StdioType"},"kind":"method","name":"stdioType","id":"stdioType1()","comment":"For a stream, returns whether it is attached to a file, pipe, terminal, or\nsomething else.","children":[{"kind":"param","name":"object","id":"object"}],"uri":"dart-sdk/lib/io/stdio.dart","line":"273"},{"returnType":{"name":"IOSink","refId":"dart.io/IOSink"},"kind":"method","name":"stderr","id":"stderr0()","comment":"The standard output stream of errors written by this program.","uri":"dart-sdk/lib/io/stdio.dart","line":"263"},{"returnType":{"name":"Stdout","refId":"dart.io/Stdout"},"kind":"method","name":"stdout","id":"stdout0()","comment":"The standard output stream of data written by this program.","uri":"dart-sdk/lib/io/stdio.dart","line":"254"},{"returnType":{"name":"Stdin","refId":"dart.io/Stdin"},"kind":"method","name":"stdin","id":"stdin0()","comment":"The standard input stream of data read by this program.","uri":"dart-sdk/lib/io/stdio.dart","line":"245"},{"returnType":{"name":"int","refId":"dart.core/int"},"kind":"method","name":"pid","id":"pid0()","comment":"\nReturns the PID of the current process.\n","uri":"dart-sdk/lib/io/process.dart","line":"85"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"sleep","id":"sleep1()","comment":"\nSleep for the duration specified in [duration].\n\nUse this with care, as no asynchronous operations can be processed\nin a isolate while it is blocked in a [sleep] call.\n","children":[{"ref":{"name":"Duration","refId":"dart.core/Duration"},"kind":"param","name":"duration","id":"duration"}],"uri":"dart-sdk/lib/io/process.dart","line":"74"},{"isSetter":true,"kind":"method","name":"exitCode=","id":"exitCode=1()","comment":"\nGlobal exit code for the Dart VM.\n\nThe exit code is global for the Dart VM and the last assignment to\nexitCode from any isolate determines the exit code of the Dart VM\non normal termination.\n\nSee [exit] for more information on how to chose a value for the\nexit code.\n","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"code","id":"code"}],"uri":"dart-sdk/lib/io/process.dart","line":"61"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"exit","id":"exit1()","comment":"\nExit the Dart VM process immediately with the given exit code.\n\nThis does not wait for any asynchronous operations to terminate. Using\n[exit] is therefore very likely to lose data.\n\nThe handling of exit codes is platform specific.\n\nOn Linux and Mac OS an exit code for normal termination will always\nbe in the range [0..255]. If an exit code outside this range is\nset the actual exit code will be the lower 8 bits masked off and\ntreated as an unsigned value. E.g. using an exit code of -1 will\nresult in an actual exit code of 255 being reported.\n\nOn Windows the exit code can be set to any 32-bit value. However\nsome of these values are reserved for reporting system errors like\ncrashes.\n\nBesides this the Dart executable itself uses an exit code of `254`\nfor reporting compile time errors and an exit code of `255` for\nreporting runtime error (unhandled exception).\n\nDue to these facts it is recommended to only use exit codes in the\nrange [0..127] for communicating the result of running a Dart\nprogram to the surrounding environment. This will avoid any\ncross-platform issues.\n","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"code","id":"code"}],"uri":"dart-sdk/lib/io/process.dart","line":"44"},{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"method","name":"_getHttpVersion","id":"_getHttpVersion0()","isPrivate":true,"uri":"dart-sdk/lib/io/http_impl.dart","line":"2578"},{"returnType":{"name":"_BufferAndStart","refId":"dart.io/_BufferAndStart"},"kind":"method","name":"_ensureFastAndSerializableByteData","id":"_ensureFastAndSerializableByteData3()","children":[{"ref":{"name":"List","refId":"dart.core/List"},"kind":"param","name":"buffer","id":"buffer","line":"104"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"start","id":"start","line":"104"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"end","id":"end","line":"104"}],"isPrivate":true,"uri":"dart-sdk/lib/io/common.dart","line":"103"},{"kind":"method","name":"_exceptionFromResponse","id":"_exceptionFromResponse3()","comment":"\nReturns an Exception or an Error\n","children":[{"kind":"param","name":"response","id":"response"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"message","id":"message"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"path","id":"path"}],"isPrivate":true,"uri":"dart-sdk/lib/io/common.dart","line":"26"},{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"method","name":"_isErrorResponse","id":"_isErrorResponse1()","children":[{"kind":"param","name":"response","id":"response"}],"isPrivate":true,"uri":"dart-sdk/lib/io/common.dart","line":"19"},{"ref":{"name":"IOSink","refId":"dart.io/IOSink"},"kind":"property","name":"stderr","id":"stderr","comment":"The standard output stream of errors written by this program.","uri":"dart-sdk/lib/io/stdio.dart","line":"263"},{"ref":{"name":"Stdout","refId":"dart.io/Stdout"},"kind":"property","name":"stdout","id":"stdout","comment":"The standard output stream of data written by this program.","uri":"dart-sdk/lib/io/stdio.dart","line":"254"},{"ref":{"name":"Stdin","refId":"dart.io/Stdin"},"kind":"property","name":"stdin","id":"stdin","comment":"The standard input stream of data read by this program.","uri":"dart-sdk/lib/io/stdio.dart","line":"245"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"property","name":"pid","id":"pid","comment":"\nReturns the PID of the current process.\n","uri":"dart-sdk/lib/io/process.dart","line":"85"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"variable","name":"_webSocketGUID","id":"_webSocketGUID","isPrivate":true,"uri":"dart-sdk/lib/io/websocket_impl.dart","line":"7"},{"ref":{"name":"SystemEncoding","refId":"dart.io/SystemEncoding"},"kind":"variable","name":"SYSTEM_ENCODING","id":"SYSTEM_ENCODING","comment":"The current system encoding.","uri":"dart-sdk/lib/io/string_transformer.dart","line":"8"},{"ref":{"name":"IOSink","refId":"dart.io/IOSink"},"kind":"variable","name":"_stderr","id":"_stderr","isPrivate":true,"uri":"dart-sdk/lib/io/stdio.dart","line":"241"},{"ref":{"name":"Stdout","refId":"dart.io/Stdout"},"kind":"variable","name":"_stdout","id":"_stdout","isPrivate":true,"uri":"dart-sdk/lib/io/stdio.dart","line":"240"},{"ref":{"name":"Stdin","refId":"dart.io/Stdin"},"kind":"variable","name":"_stdin","id":"_stdin","isPrivate":true,"uri":"dart-sdk/lib/io/stdio.dart","line":"239"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"_STDIO_HANDLE_TYPE_OTHER","id":"_STDIO_HANDLE_TYPE_OTHER","isPrivate":true,"uri":"dart-sdk/lib/io/stdio.dart","line":"11"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"_STDIO_HANDLE_TYPE_SOCKET","id":"_STDIO_HANDLE_TYPE_SOCKET","isPrivate":true,"uri":"dart-sdk/lib/io/stdio.dart","line":"10"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"_STDIO_HANDLE_TYPE_FILE","id":"_STDIO_HANDLE_TYPE_FILE","isPrivate":true,"uri":"dart-sdk/lib/io/stdio.dart","line":"9"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"_STDIO_HANDLE_TYPE_PIPE","id":"_STDIO_HANDLE_TYPE_PIPE","isPrivate":true,"uri":"dart-sdk/lib/io/stdio.dart","line":"8"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"_STDIO_HANDLE_TYPE_TERMINAL","id":"_STDIO_HANDLE_TYPE_TERMINAL","isPrivate":true,"uri":"dart-sdk/lib/io/stdio.dart","line":"7"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"_SSL_PROCESS_FILTER","id":"_SSL_PROCESS_FILTER","isPrivate":true,"uri":"dart-sdk/lib/io/io_service.dart","line":"46"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"_DIRECTORY_RENAME","id":"_DIRECTORY_RENAME","isPrivate":true,"uri":"dart-sdk/lib/io/io_service.dart","line":"45"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"_DIRECTORY_LIST_STOP","id":"_DIRECTORY_LIST_STOP","isPrivate":true,"uri":"dart-sdk/lib/io/io_service.dart","line":"44"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"_DIRECTORY_LIST_NEXT","id":"_DIRECTORY_LIST_NEXT","isPrivate":true,"uri":"dart-sdk/lib/io/io_service.dart","line":"43"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"_DIRECTORY_LIST_START","id":"_DIRECTORY_LIST_START","isPrivate":true,"uri":"dart-sdk/lib/io/io_service.dart","line":"42"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"_DIRECTORY_CREATE_TEMP","id":"_DIRECTORY_CREATE_TEMP","isPrivate":true,"uri":"dart-sdk/lib/io/io_service.dart","line":"41"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"_DIRECTORY_EXISTS","id":"_DIRECTORY_EXISTS","isPrivate":true,"uri":"dart-sdk/lib/io/io_service.dart","line":"40"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"_DIRECTORY_DELETE","id":"_DIRECTORY_DELETE","isPrivate":true,"uri":"dart-sdk/lib/io/io_service.dart","line":"39"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"_DIRECTORY_CREATE","id":"_DIRECTORY_CREATE","isPrivate":true,"uri":"dart-sdk/lib/io/io_service.dart","line":"38"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"_SOCKET_REVERSE_LOOKUP","id":"_SOCKET_REVERSE_LOOKUP","isPrivate":true,"uri":"dart-sdk/lib/io/io_service.dart","line":"37"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"_SOCKET_LIST_INTERFACES","id":"_SOCKET_LIST_INTERFACES","isPrivate":true,"uri":"dart-sdk/lib/io/io_service.dart","line":"36"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"_SOCKET_LOOKUP","id":"_SOCKET_LOOKUP","isPrivate":true,"uri":"dart-sdk/lib/io/io_service.dart","line":"35"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"_FILE_STAT","id":"_FILE_STAT","isPrivate":true,"uri":"dart-sdk/lib/io/io_service.dart","line":"34"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"_FILE_IDENTICAL","id":"_FILE_IDENTICAL","isPrivate":true,"uri":"dart-sdk/lib/io/io_service.dart","line":"33"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"_FILE_TYPE","id":"_FILE_TYPE","isPrivate":true,"uri":"dart-sdk/lib/io/io_service.dart","line":"32"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"_FILE_LINK_TARGET","id":"_FILE_LINK_TARGET","isPrivate":true,"uri":"dart-sdk/lib/io/io_service.dart","line":"31"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"_FILE_RENAME_LINK","id":"_FILE_RENAME_LINK","isPrivate":true,"uri":"dart-sdk/lib/io/io_service.dart","line":"30"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"_FILE_DELETE_LINK","id":"_FILE_DELETE_LINK","isPrivate":true,"uri":"dart-sdk/lib/io/io_service.dart","line":"29"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"_FILE_CREATE_LINK","id":"_FILE_CREATE_LINK","isPrivate":true,"uri":"dart-sdk/lib/io/io_service.dart","line":"28"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"_FILE_WRITE_FROM","id":"_FILE_WRITE_FROM","isPrivate":true,"uri":"dart-sdk/lib/io/io_service.dart","line":"27"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"_FILE_READ_INTO","id":"_FILE_READ_INTO","isPrivate":true,"uri":"dart-sdk/lib/io/io_service.dart","line":"26"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"_FILE_READ","id":"_FILE_READ","isPrivate":true,"uri":"dart-sdk/lib/io/io_service.dart","line":"25"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"_FILE_WRITE_BYTE","id":"_FILE_WRITE_BYTE","isPrivate":true,"uri":"dart-sdk/lib/io/io_service.dart","line":"24"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"_FILE_READ_BYTE","id":"_FILE_READ_BYTE","isPrivate":true,"uri":"dart-sdk/lib/io/io_service.dart","line":"23"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"_FILE_FLUSH","id":"_FILE_FLUSH","isPrivate":true,"uri":"dart-sdk/lib/io/io_service.dart","line":"22"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"_FILE_LAST_MODIFIED","id":"_FILE_LAST_MODIFIED","isPrivate":true,"uri":"dart-sdk/lib/io/io_service.dart","line":"21"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"_FILE_LENGTH_FROM_PATH","id":"_FILE_LENGTH_FROM_PATH","isPrivate":true,"uri":"dart-sdk/lib/io/io_service.dart","line":"20"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"_FILE_LENGTH","id":"_FILE_LENGTH","isPrivate":true,"uri":"dart-sdk/lib/io/io_service.dart","line":"19"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"_FILE_TRUNCATE","id":"_FILE_TRUNCATE","isPrivate":true,"uri":"dart-sdk/lib/io/io_service.dart","line":"18"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"_FILE_SET_POSITION","id":"_FILE_SET_POSITION","isPrivate":true,"uri":"dart-sdk/lib/io/io_service.dart","line":"17"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"_FILE_POSITION","id":"_FILE_POSITION","isPrivate":true,"uri":"dart-sdk/lib/io/io_service.dart","line":"16"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"_FILE_CLOSE","id":"_FILE_CLOSE","isPrivate":true,"uri":"dart-sdk/lib/io/io_service.dart"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"_FILE_RESOLVE_SYMBOLIC_LINKS","id":"_FILE_RESOLVE_SYMBOLIC_LINKS","isPrivate":true,"uri":"dart-sdk/lib/io/io_service.dart","line":"14"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"_FILE_OPEN","id":"_FILE_OPEN","isPrivate":true,"uri":"dart-sdk/lib/io/io_service.dart","line":"13"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"_FILE_COPY","id":"_FILE_COPY","isPrivate":true,"uri":"dart-sdk/lib/io/io_service.dart","line":"12"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"_FILE_RENAME","id":"_FILE_RENAME","isPrivate":true,"uri":"dart-sdk/lib/io/io_service.dart","line":"11"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"_FILE_DELETE","id":"_FILE_DELETE","isPrivate":true,"uri":"dart-sdk/lib/io/io_service.dart","line":"10"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"_FILE_CREATE","id":"_FILE_CREATE","isPrivate":true,"uri":"dart-sdk/lib/io/io_service.dart","line":"9"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"_FILE_EXISTS","id":"_FILE_EXISTS","isPrivate":true,"uri":"dart-sdk/lib/io/io_service.dart","line":"8"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"variable","name":"_DART_SESSION_ID","id":"_DART_SESSION_ID","isPrivate":true,"uri":"dart-sdk/lib/io/http_session.dart","line":"7"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"_HEADERS_BUFFER_SIZE","id":"_HEADERS_BUFFER_SIZE","isPrivate":true,"uri":"dart-sdk/lib/io/http_impl.dart","line":"7"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"_BLOCK_SIZE","id":"_BLOCK_SIZE","isPrivate":true,"uri":"dart-sdk/lib/io/file_impl.dart","line":"8"},{"kind":"variable","name":"APPEND","id":"APPEND","comment":"The [FileMode] for opening a file for reading a file and writing to the end\nof it. If the file does not exist, it will be created.","uri":"dart-sdk/lib/io/file.dart","line":"30"},{"kind":"variable","name":"WRITE","id":"WRITE","comment":"The [FileMode] for opening a file for reading and writing. The file will be\noverwritten. If the file does not exist, it will be created.","uri":"dart-sdk/lib/io/file.dart","line":"27"},{"kind":"variable","name":"READ","id":"READ","comment":"The [FileMode] for opening a file only for reading.","uri":"dart-sdk/lib/io/file.dart","line":"24"},{"ref":{"name":"GZipCodec","refId":"dart.io/GZipCodec"},"kind":"variable","name":"GZIP","id":"GZIP","comment":"\nAn instance of the default implementation of the [GZipCodec].\n","uri":"dart-sdk/lib/io/data_transformer.dart","line":"48"},{"ref":{"name":"ZLibCodec","refId":"dart.io/ZLibCodec"},"kind":"variable","name":"ZLIB","id":"ZLIB","comment":"\nAn instance of the default implementation of the [ZLibCodec].\n","uri":"dart-sdk/lib/io/data_transformer.dart","line":"11"},{"kind":"variable","name":"_BYTES_PER_WORD","id":"_BYTES_PER_WORD","isPrivate":true,"uri":"dart-sdk/lib/io/crypto.dart","line":"167"},{"kind":"variable","name":"_BITS_PER_BYTE","id":"_BITS_PER_BYTE","isPrivate":true,"uri":"dart-sdk/lib/io/crypto.dart","line":"166"},{"kind":"variable","name":"_MASK_32","id":"_MASK_32","isPrivate":true,"uri":"dart-sdk/lib/io/crypto.dart","line":"165"},{"kind":"variable","name":"_MASK_8","id":"_MASK_8","isPrivate":true,"uri":"dart-sdk/lib/io/crypto.dart","line":"164"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"_OSERROR_RESPONSE_MESSAGE","id":"_OSERROR_RESPONSE_MESSAGE","isPrivate":true,"uri":"dart-sdk/lib/io/common.dart","line":"16"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"_OSERROR_RESPONSE_ERROR_CODE","id":"_OSERROR_RESPONSE_ERROR_CODE","isPrivate":true,"uri":"dart-sdk/lib/io/common.dart"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"_ERROR_RESPONSE_ERROR_TYPE","id":"_ERROR_RESPONSE_ERROR_TYPE","isPrivate":true,"uri":"dart-sdk/lib/io/common.dart","line":"14"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"_FILE_CLOSED_RESPONSE","id":"_FILE_CLOSED_RESPONSE","isPrivate":true,"uri":"dart-sdk/lib/io/common.dart","line":"12"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"_OSERROR_RESPONSE","id":"_OSERROR_RESPONSE","isPrivate":true,"uri":"dart-sdk/lib/io/common.dart","line":"11"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"_ILLEGAL_ARGUMENT_RESPONSE","id":"_ILLEGAL_ARGUMENT_RESPONSE","isPrivate":true,"uri":"dart-sdk/lib/io/common.dart","line":"10"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"_SUCCESS_RESPONSE","id":"_SUCCESS_RESPONSE","isPrivate":true,"uri":"dart-sdk/lib/io/common.dart","line":"9"},{"superclass":{"name":"Stream","refId":"dart.async/Stream"},"interfaces":[{"name":"WebSocket","refId":"dart.io/WebSocket"}],"kind":"class","name":"_WebSocketImpl","id":"_WebSocketImpl","children":[{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"WebSocket","refId":"dart.io/WebSocket"}]},"isStatic":true,"kind":"method","name":"connect","id":"connect2()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"url","id":"url"},{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"String","refId":"dart.core/String"}]},"kind":"param","name":"protocols","id":"protocols"}],"line":"778"},{"returnType":{"name":"StreamSubscription","refId":"dart.async/StreamSubscription"},"kind":"method","name":"listen","id":"listen4()","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"onData","id":"onData","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","children":[{"kind":"param","name":"message","id":"message","uri":"dart-sdk/lib/io/websocket_impl.dart","line":"901"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]},{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"isNamed":true,"kind":"param","name":"onError","id":"onError","line":"902"},{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"isNamed":true,"kind":"param","name":"onDone","id":"onDone","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","uri":"dart-sdk/lib/core/function.dart","line":"13"}],"line":"903"},{"ref":{"name":"bool","refId":"dart.core/bool"},"isOptional":true,"isNamed":true,"kind":"param","name":"cancelOnError","id":"cancelOnError","line":"904"}],"line":"901"},{"returnType":{"name":"void","refId":"void"},"isSetter":true,"kind":"method","name":"pingInterval=","id":"pingInterval=1()","children":[{"ref":{"name":"Duration","refId":"dart.core/Duration"},"kind":"param","name":"interval","id":"interval"}],"line":"913"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"add","id":"add1()","children":[{"kind":"param","name":"data","id":"data"}],"line":"936"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"addError","id":"addError2()","children":[{"kind":"param","name":"error","id":"error"},{"ref":{"name":"StackTrace","refId":"dart.core/StackTrace"},"isOptional":true,"kind":"param","name":"stackTrace","id":"stackTrace"}],"line":"937"},{"returnType":{"name":"Future","refId":"dart.async/Future"},"kind":"method","name":"addStream","id":"addStream1()","children":[{"ref":{"name":"Stream","refId":"dart.async/Stream"},"kind":"param","name":"stream","id":"stream"}],"line":"939"},{"returnType":{"name":"Future","refId":"dart.async/Future"},"kind":"method","name":"close","id":"close2()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"isOptional":true,"kind":"param","name":"code","id":"code"},{"ref":{"name":"String","refId":"dart.core/String"},"isOptional":true,"kind":"param","name":"reason","id":"reason"}],"line":"942"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_close","id":"_close2()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"isOptional":true,"kind":"param","name":"code","id":"code"},{"ref":{"name":"String","refId":"dart.core/String"},"isOptional":true,"kind":"param","name":"reason","id":"reason"}],"isPrivate":true,"line":"953"},{"returnType":{"name":"bool","refId":"dart.core/bool"},"isStatic":true,"kind":"method","name":"_isReservedStatusCode","id":"_isReservedStatusCode1()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"code","id":"code"}],"isPrivate":true,"line":"963"},{"ref":{"name":"Duration","refId":"dart.core/Duration"},"kind":"property","name":"pingInterval","id":"pingInterval","line":"911"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"property","name":"readyState","id":"readyState","line":"930"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"property","name":"extensions","id":"extensions","line":"932"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"property","name":"closeCode","id":"closeCode","line":"933"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"property","name":"closeReason","id":"closeReason","line":"934"},{"ref":{"name":"Future","refId":"dart.async/Future"},"kind":"property","name":"done","id":"done","line":"940"},{"ref":{"name":"String","refId":"dart.core/String"},"isFinal":true,"kind":"variable","name":"protocol","id":"protocol","line":"757"},{"ref":{"name":"StreamController","refId":"dart.async/StreamController"},"kind":"variable","name":"_controller","id":"_controller","isPrivate":true,"line":"759"},{"ref":{"name":"StreamSubscription","refId":"dart.async/StreamSubscription"},"kind":"variable","name":"_subscription","id":"_subscription","isPrivate":true,"line":"760"},{"ref":{"name":"StreamSink","refId":"dart.async/StreamSink"},"kind":"variable","name":"_sink","id":"_sink","isPrivate":true,"line":"761"},{"ref":{"name":"Socket","refId":"dart.io/Socket"},"isFinal":true,"kind":"variable","name":"_socket","id":"_socket","isPrivate":true,"line":"763"},{"ref":{"name":"bool","refId":"dart.core/bool"},"isFinal":true,"kind":"variable","name":"_serverSide","id":"_serverSide","isPrivate":true,"line":"764"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"_readyState","id":"_readyState","isPrivate":true,"line":"765"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"variable","name":"_writeClosed","id":"_writeClosed","isPrivate":true,"line":"766"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"_closeCode","id":"_closeCode","isPrivate":true,"line":"767"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"variable","name":"_closeReason","id":"_closeReason","isPrivate":true,"line":"768"},{"ref":{"name":"Duration","refId":"dart.core/Duration"},"kind":"variable","name":"_pingInterval","id":"_pingInterval","isPrivate":true,"line":"769"},{"ref":{"name":"Timer","refId":"dart.async/Timer"},"kind":"variable","name":"_pingTimer","id":"_pingTimer","isPrivate":true,"line":"770"},{"ref":{"name":"_WebSocketConsumer","refId":"dart.io/_WebSocketConsumer"},"kind":"variable","name":"_consumer","id":"_consumer","isPrivate":true,"line":"771"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"_outCloseCode","id":"_outCloseCode","isPrivate":true,"line":"773"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"variable","name":"_outCloseReason","id":"_outCloseReason","isPrivate":true,"line":"774"},{"ref":{"name":"HttpClient","refId":"dart.io/HttpClient"},"isStatic":true,"isFinal":true,"kind":"variable","name":"_httpClient","id":"_httpClient","isPrivate":true,"line":"776"},{"kind":"constructor","name":"_fromSocket","id":"_fromSocket3()","children":[{"ref":{"name":"Socket","refId":"dart.io/Socket"},"initializedField":{"name":"_socket","refId":"dart.io/_WebSocketImpl/_socket"},"kind":"param","name":"_socket","id":"_socket","isPrivate":true},{"ref":{"name":"String","refId":"dart.core/String"},"initializedField":{"name":"protocol","refId":"dart.io/_WebSocketImpl/protocol"},"kind":"param","name":"protocol","id":"protocol","line":"853"},{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"false","isOptional":true,"initializedField":{"name":"_serverSide","refId":"dart.io/_WebSocketImpl/_serverSide"},"kind":"param","name":"_serverSide","id":"_serverSide","isPrivate":true,"line":"854"}],"isPrivate":true,"line":"852"}],"isPrivate":true,"uri":"dart-sdk/lib/io/websocket_impl.dart","line":"756"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"interfaces":[{"name":"StreamConsumer","refId":"dart.async/StreamConsumer"}],"kind":"class","name":"_WebSocketConsumer","id":"_WebSocketConsumer","children":[{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_onListen","id":"_onListen0()","isPrivate":true,"line":"645"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_onPause","id":"_onPause0()","isPrivate":true,"line":"651"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_onResume","id":"_onResume0()","isPrivate":true,"line":"659"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_cancel","id":"_cancel0()","isPrivate":true,"line":"667"},{"kind":"method","name":"_ensureController","id":"_ensureController0()","isPrivate":true,"line":"675"},{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"method","name":"_done","id":"_done2()","children":[{"isOptional":true,"kind":"param","name":"error","id":"error"},{"ref":{"name":"StackTrace","refId":"dart.core/StackTrace"},"isOptional":true,"kind":"param","name":"stackTrace","id":"stackTrace"}],"isPrivate":true,"line":"701"},{"returnType":{"name":"Future","refId":"dart.async/Future"},"kind":"method","name":"addStream","id":"addStream1()","children":[{"kind":"param","name":"stream","id":"stream"}],"line":"712"},{"returnType":{"name":"Future","refId":"dart.async/Future"},"kind":"method","name":"close","id":"close0()","line":"733"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"add","id":"add1()","children":[{"kind":"param","name":"data","id":"data"}],"line":"742"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"closeSocket","id":"closeSocket0()","line":"748"},{"ref":{"name":"_WebSocketImpl","refId":"dart.io/_WebSocketImpl"},"isFinal":true,"kind":"variable","name":"webSocket","id":"webSocket","line":"634"},{"ref":{"name":"Socket","refId":"dart.io/Socket"},"isFinal":true,"kind":"variable","name":"socket","id":"socket","line":"635"},{"ref":{"name":"StreamController","refId":"dart.async/StreamController"},"kind":"variable","name":"_controller","id":"_controller","isPrivate":true,"line":"636"},{"ref":{"name":"StreamSubscription","refId":"dart.async/StreamSubscription"},"kind":"variable","name":"_subscription","id":"_subscription","isPrivate":true,"line":"637"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"variable","name":"_issuedPause","id":"_issuedPause","isPrivate":true,"line":"638"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"variable","name":"_closed","id":"_closed","isPrivate":true,"line":"639"},{"ref":{"name":"Completer","refId":"dart.async/Completer"},"kind":"variable","name":"_closeCompleter","id":"_closeCompleter","isPrivate":true,"line":"640"},{"ref":{"name":"Completer","refId":"dart.async/Completer"},"kind":"variable","name":"_completer","id":"_completer","isPrivate":true,"line":"641"},{"kind":"constructor","name":"","id":"2()","children":[{"ref":{"name":"_WebSocketImpl","refId":"dart.io/_WebSocketImpl"},"initializedField":{"name":"webSocket","refId":"dart.io/_WebSocketConsumer/webSocket"},"kind":"param","name":"webSocket","id":"webSocket"},{"ref":{"name":"Socket","refId":"dart.io/Socket"},"initializedField":{"name":"socket","refId":"dart.io/_WebSocketConsumer/socket"},"kind":"param","name":"socket","id":"socket"}],"line":"643"}],"isPrivate":true,"uri":"dart-sdk/lib/io/websocket_impl.dart","line":"633"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"interfaces":[{"name":"EventSink","refId":"dart.async/EventSink"},{"name":"StreamTransformer","refId":"dart.async/StreamTransformer"}],"kind":"class","name":"_WebSocketOutgoingTransformer","id":"_WebSocketOutgoingTransformer","children":[{"returnType":{"name":"Stream","refId":"dart.async/Stream"},"kind":"method","name":"bind","id":"bind1()","children":[{"ref":{"name":"Stream","refId":"dart.async/Stream"},"kind":"param","name":"stream","id":"stream"}],"line":"500"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"add","id":"add1()","children":[{"kind":"param","name":"message","id":"message"}],"line":"512"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"addError","id":"addError2()","children":[{"ref":{"name":"Object","refId":"dart.core/Object"},"kind":"param","name":"error","id":"error"},{"ref":{"name":"StackTrace","refId":"dart.core/StackTrace"},"isOptional":true,"kind":"param","name":"stackTrace","id":"stackTrace"}],"line":"540"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"close","id":"close0()","line":"544"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"addFrame","id":"addFrame2()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"opcode","id":"opcode"},{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"param","name":"data","id":"data"}],"line":"560"},{"returnType":{"name":"Iterable","refId":"dart.core/Iterable"},"isStatic":true,"kind":"method","name":"createFrame","id":"createFrame3()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"opcode","id":"opcode"},{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"param","name":"data","id":"data"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"param","name":"serverSide","id":"serverSide"}],"line":"564"},{"ref":{"name":"_WebSocketImpl","refId":"dart.io/_WebSocketImpl"},"isFinal":true,"kind":"variable","name":"webSocket","id":"webSocket","line":"495"},{"ref":{"name":"EventSink","refId":"dart.async/EventSink"},"kind":"variable","name":"_eventSink","id":"_eventSink","isPrivate":true,"line":"496"},{"kind":"constructor","name":"","id":"1()","children":[{"ref":{"name":"_WebSocketImpl","refId":"dart.io/_WebSocketImpl"},"initializedField":{"name":"webSocket","refId":"dart.io/_WebSocketOutgoingTransformer/webSocket"},"kind":"param","name":"webSocket","id":"webSocket"}],"line":"498"}],"isPrivate":true,"uri":"dart-sdk/lib/io/websocket_impl.dart","line":"494"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"interfaces":[{"name":"WebSocketTransformer","refId":"dart.io/WebSocketTransformer"}],"kind":"class","name":"_WebSocketTransformerImpl","id":"_WebSocketTransformerImpl","children":[{"returnType":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"WebSocket","refId":"dart.io/WebSocket"}]},"kind":"method","name":"bind","id":"bind1()","children":[{"ref":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"HttpRequest","refId":"dart.io/HttpRequest"}]},"kind":"param","name":"stream","id":"stream"}],"line":"400"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"WebSocket","refId":"dart.io/WebSocket"}]},"isStatic":true,"kind":"method","name":"_upgrade","id":"_upgrade2()","children":[{"ref":{"name":"HttpRequest","refId":"dart.io/HttpRequest"},"kind":"param","name":"request","id":"request"},{"kind":"param","name":"_protocolSelector","id":"_protocolSelector","isPrivate":true}],"isPrivate":true,"line":"410"},{"returnType":{"name":"bool","refId":"dart.core/bool"},"isStatic":true,"kind":"method","name":"_isUpgradeRequest","id":"_isUpgradeRequest1()","children":[{"ref":{"name":"HttpRequest","refId":"dart.io/HttpRequest"},"kind":"param","name":"request","id":"request"}],"isPrivate":true,"line":"464"},{"ref":{"name":"StreamController","refId":"dart.async/StreamController","arguments":[{"name":"WebSocket","refId":"dart.io/WebSocket"}]},"isFinal":true,"kind":"variable","name":"_controller","id":"_controller","isPrivate":true,"line":"394"},{"ref":{"name":"Function","refId":"dart.core/Function"},"isFinal":true,"kind":"variable","name":"_protocolSelector","id":"_protocolSelector","isPrivate":true,"line":"396"},{"kind":"constructor","name":"","id":"1()","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"initializedField":{"name":"_protocolSelector","refId":"dart.io/_WebSocketTransformerImpl/_protocolSelector"},"kind":"param","name":"_protocolSelector","id":"_protocolSelector","isPrivate":true}],"line":"398"}],"isPrivate":true,"uri":"dart-sdk/lib/io/websocket_impl.dart","line":"393"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"kind":"class","name":"_WebSocketPong","id":"_WebSocketPong","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"isFinal":true,"kind":"variable","name":"payload","id":"payload","line":"388"},{"kind":"constructor","name":"","id":"1()","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"defaultValue":"null","isOptional":true,"initializedField":{"name":"payload","refId":"dart.io/_WebSocketPong/payload"},"kind":"param","name":"payload","id":"payload"}],"line":"389"}],"isPrivate":true,"uri":"dart-sdk/lib/io/websocket_impl.dart","line":"387"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"kind":"class","name":"_WebSocketPing","id":"_WebSocketPing","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"isFinal":true,"kind":"variable","name":"payload","id":"payload","line":"382"},{"kind":"constructor","name":"","id":"1()","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"defaultValue":"null","isOptional":true,"initializedField":{"name":"payload","refId":"dart.io/_WebSocketPing/payload"},"kind":"param","name":"payload","id":"payload"}],"line":"383"}],"isPrivate":true,"uri":"dart-sdk/lib/io/websocket_impl.dart","line":"381"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"interfaces":[{"name":"EventSink","refId":"dart.async/EventSink"},{"name":"StreamTransformer","refId":"dart.async/StreamTransformer"}],"kind":"class","name":"_WebSocketProtocolTransformer","id":"_WebSocketProtocolTransformer","comment":"\nThe web socket protocol transformer handles the protocol byte stream\nwhich is supplied through the [:handleData:]. As the protocol is processed,\nit'll output frame data as either a List<int> or String.\n\nImportant infomation about usage: Be sure you use cancelOnError, so the\nsocket will be closed when the processer encounter an error. Not using it\nwill lead to undefined behaviour.\n","children":[{"returnType":{"name":"Stream","refId":"dart.async/Stream"},"kind":"method","name":"bind","id":"bind1()","children":[{"ref":{"name":"Stream","refId":"dart.async/Stream"},"kind":"param","name":"stream","id":"stream"}],"line":"62"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"addError","id":"addError2()","children":[{"ref":{"name":"Object","refId":"dart.core/Object"},"kind":"param","name":"error","id":"error"},{"ref":{"name":"StackTrace","refId":"dart.core/StackTrace"},"isOptional":true,"kind":"param","name":"stackTrace","id":"stackTrace"}],"line":"74"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"close","id":"close0()","line":"78"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"add","id":"add1()","comment":"\nProcess data received from the underlying communication channel.\n","children":[{"ref":{"name":"Uint8List","refId":"dart.typed_data/Uint8List"},"kind":"param","name":"buffer","id":"buffer"}],"line":"83"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_lengthDone","id":"_lengthDone0()","isPrivate":true,"line":"247"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_maskDone","id":"_maskDone0()","isPrivate":true,"line":"263"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_startPayload","id":"_startPayload0()","isPrivate":true,"line":"268"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_messageFrameEnd","id":"_messageFrameEnd0()","isPrivate":true,"line":"294"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_controlFrameEnd","id":"_controlFrameEnd0()","isPrivate":true,"line":"310"},{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"method","name":"_isControlFrame","id":"_isControlFrame0()","isPrivate":true,"line":"341"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_prepareForNextFrame","id":"_prepareForNextFrame0()","isPrivate":true,"line":"347"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"START","id":"START","line":"46"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"LEN_FIRST","id":"LEN_FIRST","line":"47"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"LEN_REST","id":"LEN_REST","line":"48"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"MASK","id":"MASK","line":"49"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"PAYLOAD","id":"PAYLOAD","line":"50"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"CLOSED","id":"CLOSED","line":"51"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"FAILURE","id":"FAILURE","line":"52"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"variable","name":"_serverSide","id":"_serverSide","isPrivate":true,"line":"54"},{"ref":{"name":"EventSink","refId":"dart.async/EventSink"},"kind":"variable","name":"_eventSink","id":"_eventSink","isPrivate":true,"line":"55"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"_state","id":"_state","isPrivate":true,"line":"361"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"variable","name":"_fin","id":"_fin","isPrivate":true,"line":"362"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"_opcode","id":"_opcode","isPrivate":true,"line":"363"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"_len","id":"_len","isPrivate":true,"line":"364"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"variable","name":"_masked","id":"_masked","isPrivate":true,"line":"365"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"_maskingKey","id":"_maskingKey","isPrivate":true,"line":"366"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"_remainingLenBytes","id":"_remainingLenBytes","isPrivate":true,"line":"367"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"_remainingMaskingKeyBytes","id":"_remainingMaskingKeyBytes","isPrivate":true,"line":"368"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"_remainingPayloadBytes","id":"_remainingPayloadBytes","isPrivate":true,"line":"369"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"_unmaskingIndex","id":"_unmaskingIndex","isPrivate":true,"line":"370"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"_currentMessageType","id":"_currentMessageType","isPrivate":true,"line":"372"},{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"variable","name":"_controlPayload","id":"_controlPayload","isPrivate":true,"line":"373"},{"ref":{"name":"StreamController","refId":"dart.async/StreamController"},"kind":"variable","name":"_controller","id":"_controller","isPrivate":true,"line":"374"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"closeCode","id":"closeCode","line":"376"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"variable","name":"closeReason","id":"closeReason","line":"377"},{"kind":"constructor","name":"","id":"1()","children":[{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"false","isOptional":true,"initializedField":{"name":"_serverSide","refId":"dart.io/_WebSocketProtocolTransformer/_serverSide"},"kind":"param","name":"_serverSide","id":"_serverSide","isPrivate":true}],"line":"57"}],"isPrivate":true,"uri":"dart-sdk/lib/io/websocket_impl.dart","line":"45"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"kind":"class","name":"_WebSocketOpcode","id":"_WebSocketOpcode","children":[{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"CONTINUATION","id":"CONTINUATION","line":"17"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"TEXT","id":"TEXT","line":"18"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"BINARY","id":"BINARY","line":"19"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"RESERVED_3","id":"RESERVED_3","line":"20"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"RESERVED_4","id":"RESERVED_4","line":"21"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"RESERVED_5","id":"RESERVED_5","line":"22"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"RESERVED_6","id":"RESERVED_6","line":"23"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"RESERVED_7","id":"RESERVED_7","line":"24"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"CLOSE","id":"CLOSE","line":"25"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"PING","id":"PING","line":"26"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"PONG","id":"PONG","line":"27"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"RESERVED_B","id":"RESERVED_B","line":"28"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"RESERVED_C","id":"RESERVED_C","line":"29"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"RESERVED_D","id":"RESERVED_D","line":"30"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"RESERVED_E","id":"RESERVED_E","line":"31"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"RESERVED_F","id":"RESERVED_F","line":"32"}],"isPrivate":true,"uri":"dart-sdk/lib/io/websocket_impl.dart","line":"16"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"kind":"class","name":"_WebSocketMessageType","id":"_WebSocketMessageType","children":[{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"NONE","id":"NONE","line":"10"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"BINARY","id":"BINARY","line":"11"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"TEXT","id":"TEXT","line":"12"}],"isPrivate":true,"uri":"dart-sdk/lib/io/websocket_impl.dart","line":"9"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"interfaces":[{"name":"IOException","refId":"dart.io/IOException"}],"isThrowable":true,"kind":"class","name":"WebSocketException","id":"WebSocketException","children":[{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"method","name":"toString","id":"toString0()","line":"193"},{"ref":{"name":"String","refId":"dart.core/String"},"isFinal":true,"kind":"variable","name":"message","id":"message","line":"194"},{"kind":"constructor","name":"","id":"1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"defaultValue":"\"\"","isOptional":true,"initializedField":{"name":"message","refId":"dart.io/WebSocketException/message"},"kind":"param","name":"message","id":"message"}],"line":"192"}],"uri":"dart-sdk/lib/io/websocket.dart","line":"191"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"interfaces":[{"name":"StreamSink","refId":"dart.async/StreamSink"},{"name":"Stream","refId":"dart.async/Stream"}],"kind":"class","name":"WebSocket","id":"WebSocket","comment":"\nA two-way HTTP communication object for client or server applications.\n\nThe stream exposes the messages received. A text message will be of type\n[:String:] and a binary message will be of type [:List<int>:].\n","children":[{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"WebSocket","refId":"dart.io/WebSocket"}]},"isStatic":true,"kind":"method","name":"connect","id":"connect2()","comment":"\nCreate a new web socket connection. The URL supplied in [url]\nmust use the scheme [:ws:] or [:wss:]. The [protocols] argument is\nspecifying the subprotocols the client is willing to speak.\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"url","id":"url"},{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"String","refId":"dart.core/String"}]},"defaultValue":"const[] ","isOptional":true,"isNamed":true,"kind":"param","name":"protocols","id":"protocols","line":"117"}],"line":"116"},{"returnType":{"name":"Future","refId":"dart.async/Future"},"kind":"method","name":"close","id":"close2()","comment":"\nCloses the web socket connection. Set the optional [code] and [reason]\narguments to send close information to the remote peer. If they are\nomitted, the peer will see [WebSocketStatus.NO_STATUS_RECEIVED] code\nwith no reason.\n","children":[{"ref":{"name":"int","refId":"dart.core/int"},"isOptional":true,"kind":"param","name":"code","id":"code"},{"ref":{"name":"String","refId":"dart.core/String"},"isOptional":true,"kind":"param","name":"reason","id":"reason"}],"line":"174"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"add","id":"add1()","comment":"\nSends data on the web socket connection. The data in [data] must\nbe either a [:String:], or a [:List<int>:] holding bytes.\n","children":[{"kind":"param","name":"data","id":"data"}],"line":"180"},{"returnType":{"name":"Future","refId":"dart.async/Future"},"kind":"method","name":"addStream","id":"addStream1()","comment":"\nSends data from a stream on web socket connection. Each data event from\n[stream] will be send as a single WebSocket frame. The data from [stream]\nmust be either [:String:]s, or [:List<int>:]s holding bytes.\n","children":[{"ref":{"name":"Stream","refId":"dart.async/Stream"},"kind":"param","name":"stream","id":"stream"}],"line":"187"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"property","name":"readyState","id":"readyState","comment":"\nReturns the current state of the connection.\n","line":"123"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"property","name":"extensions","id":"extensions","comment":"\nThe extensions property is initially the empty string. After the\nweb socket connection is established this string reflects the\nextensions used by the server.\n","line":"130"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"property","name":"protocol","id":"protocol","comment":"\nThe protocol property is initially the empty string. After the\nweb socket connection is established the value is the subprotocol\nselected by the server. If no subprotocol is negotiated the\nvalue will remain [:null:].\n","line":"138"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"property","name":"closeCode","id":"closeCode","comment":"\nThe close code set when the web socket connection is closed. If\nthere is no close code available this property will be [:null:]\n","line":"144"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"property","name":"closeReason","id":"closeReason","comment":"\nThe close reason set when the web socket connection is closed. If\nthere is no close reason available this property will be [:null:]\n","line":"150"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"CONNECTING","id":"CONNECTING","comment":"\nPossible states of the connection.\n","line":"106"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"OPEN","id":"OPEN","line":"107"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"CLOSING","id":"CLOSING","line":"108"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"CLOSED","id":"CLOSED","line":"109"},{"ref":{"name":"Duration","refId":"dart.core/Duration"},"kind":"variable","name":"pingInterval","id":"pingInterval","comment":"\nSet and get the interval for sending ping signals. If a ping message is not\nanswered by a pong message from the peer, the `WebSocket` is assumed\ndisconnected and the connection is closed with a\n[WebSocketStatus.GOING_AWAY] close code. When a ping signal is sent, the\npong message must be received within [pingInterval].\n\nThere are never two outstanding pings at any given time, and the next ping\ntimer starts when the pong is received.\n\nSet the [pingInterval] to `null` to disable sending ping messages.\n\nThe default value is `null`.\n","line":"166"}],"uri":"dart-sdk/lib/io/websocket.dart","line":"102"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"interfaces":[{"name":"StreamTransformer","refId":"dart.async/StreamTransformer","arguments":[{"name":"HttpRequest","refId":"dart.io/HttpRequest"},{"name":"WebSocket","refId":"dart.io/WebSocket"}]}],"kind":"class","name":"WebSocketTransformer","id":"WebSocketTransformer","comment":"\nThe [WebSocketTransformer] provides the ability to upgrade a\n[HttpRequest] to a [WebSocket] connection. It supports both\nupgrading a single [HttpRequest] and upgrading a stream of\n[HttpRequest]s.\n\nTo upgrade a single [HttpRequest] use the static [upgrade] method.\n\n    HttpServer server;\n    server.listen((request) {\n      if (...) {\n        WebSocketTransformer.upgrade(request).then((websocket) {\n          ...\n        });\n      } else {\n        // Do normal HTTP request processing.\n      }\n    });\n\nTo transform a stream of [HttpRequest] events as it implements a\nstream transformer that transforms a stream of HttpRequest into a\nstream of WebSockets by upgrading each HttpRequest from the HTTP or\nHTTPS server, to the WebSocket protocol.\n\n    server.transform(new WebSocketTransformer()).listen((webSocket) => ...);\n\nThis transformer strives to implement web sockets as specified by RFC6455.\n","children":[{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"WebSocket","refId":"dart.io/WebSocket"}]},"isStatic":true,"kind":"method","name":"upgrade","id":"upgrade2()","comment":"\nUpgrades a [HttpRequest] to a [WebSocket] connection. If the\nrequest is not a valid web socket upgrade request a HTTP response\nwith status code 500 will be returned. Otherwise the returned\nfuture will complete with the [WebSocket] when the upgrade pocess\nis complete.\n\nIf [protocolSelector] is provided, [protocolSelector] will be called to\nselect what protocol to use, if any were provided by the client.\n[protocolSelector] is should return either a [String] or a [Future]\ncompleting with a [String]. The [String] must exist in the list of\nprotocols.\n","children":[{"ref":{"name":"HttpRequest","refId":"dart.io/HttpRequest"},"kind":"param","name":"request","id":"request"},{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"isNamed":true,"kind":"param","name":"protocolSelector","id":"protocolSelector","children":[{"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"String","refId":"dart.core/String"}]},"kind":"param","name":"protocols","id":"protocols","uri":"dart-sdk/lib/io/websocket.dart","line":"83"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}],"line":"83"}],"line":"82"},{"returnType":{"name":"bool","refId":"dart.core/bool"},"isStatic":true,"kind":"method","name":"isUpgradeRequest","id":"isUpgradeRequest1()","comment":"\nChecks whether the request is a valid WebSocket upgrade request.\n","children":[{"ref":{"name":"HttpRequest","refId":"dart.io/HttpRequest"},"kind":"param","name":"request","id":"request"}],"line":"90"},{"returnType":{"name":"WebSocketTransformer","refId":"dart.io/WebSocketTransformer"},"kind":"constructor","name":"","id":"1()","comment":"\nCreate a new [WebSocketTransformer].\n\nIf [protocolSelector] is provided, [protocolSelector] will be called to\nselect what protocol to use, if any were provided by the client.\n[protocolSelector] is should return either a [String] or a [Future]\ncompleting with a [String]. The [String] must exist in the list of\nprotocols.\n","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"isNamed":true,"kind":"param","name":"protocolSelector","id":"protocolSelector","children":[{"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"String","refId":"dart.core/String"}]},"kind":"param","name":"protocols","id":"protocols","uri":"dart-sdk/lib/io/websocket.dart","line":"66"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"66"}],"uri":"dart-sdk/lib/io/websocket.dart","line":"54"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"kind":"class","name":"WebSocketStatus","id":"WebSocketStatus","comment":"\nWeb socket status codes used when closing a web socket connection.\n","children":[{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"NORMAL_CLOSURE","id":"NORMAL_CLOSURE","line":"11"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"GOING_AWAY","id":"GOING_AWAY","line":"12"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"PROTOCOL_ERROR","id":"PROTOCOL_ERROR","line":"13"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"UNSUPPORTED_DATA","id":"UNSUPPORTED_DATA","line":"14"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"RESERVED_1004","id":"RESERVED_1004","line":"15"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"NO_STATUS_RECEIVED","id":"NO_STATUS_RECEIVED","line":"16"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"ABNORMAL_CLOSURE","id":"ABNORMAL_CLOSURE","line":"17"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"INVALID_FRAME_PAYLOAD_DATA","id":"INVALID_FRAME_PAYLOAD_DATA","line":"18"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"POLICY_VIOLATION","id":"POLICY_VIOLATION","line":"19"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"MESSAGE_TOO_BIG","id":"MESSAGE_TOO_BIG","line":"20"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"MISSING_MANDATORY_EXTENSION","id":"MISSING_MANDATORY_EXTENSION","line":"21"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"INTERNAL_SERVER_ERROR","id":"INTERNAL_SERVER_ERROR","line":"22"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"RESERVED_1015","id":"RESERVED_1015","line":"23"}],"uri":"dart-sdk/lib/io/websocket.dart","line":"10"},{"superclass":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"RawSecureSocket","refId":"dart.io/RawSecureSocket"}]},"kind":"class","name":"RawSecureServerSocket","id":"RawSecureServerSocket","comment":"\nThe RawSecureServerSocket is a server socket, providing a stream of low-level\n[RawSecureSocket]s.\n\nSee [RawSecureSocket] for more info.\n","children":[{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"RawSecureServerSocket","refId":"dart.io/RawSecureServerSocket"}]},"isStatic":true,"kind":"method","name":"bind","id":"bind7()","comment":"\nReturns a future for a [RawSecureServerSocket]. When the future\ncompletes the server socket is bound to the given [address] and\n[port] and has started listening on it.\n\nThe [address] can either be a [String] or an\n[InternetAddress]. If [address] is a [String], [bind] will\nperform a [InternetAddress.lookup] and use the first value in the\nlist. To listen on the loopback adapter, which will allow only\nincoming connections from the local host, use the value\n[InternetAddress.LOOPBACK_IP_V4] or\n[InternetAddress.LOOPBACK_IP_V6]. To allow for incoming\nconnection from the network use either one of the values\n[InternetAddress.ANY_IP_V4] or [InternetAddress.ANY_IP_V6] to\nbind to all interfaces or the IP address of a specific interface.\n\nIf [port] has the value [:0:] an ephemeral port will be chosen by\nthe system. The actual port used can be retrieved using the\n[port] getter.\n\nThe optional argument [backlog] can be used to specify the listen\nbacklog for the underlying OS listen setup. If [backlog] has the\nvalue of [:0:] (the default) a reasonable value will be chosen by\nthe system.\n\nIncoming client connections are promoted to secure connections,\nusing the server certificate given by [certificateName].\n\n[address] must be given as a numeric address, not a host name.\n\n[certificateName] is the nickname or the distinguished name (DN) of\nthe certificate in the certificate database. It is looked up in the\nNSS certificate database set by SecureSocket.setCertificateDatabase.\nIf [certificateName] contains \"CN=\", it is assumed to be a distinguished\nname.  Otherwise, it is looked up as a nickname.\n\nTo request or require that clients authenticate by providing an SSL (TLS)\nclient certificate, set the optional parameters requestClientCertificate or\nrequireClientCertificate to true.  Require implies request, so one doesn't\nneed to specify both.  To check whether a client certificate was received,\ncheck SecureSocket.peerCertificate after connecting.  If no certificate\nwas received, the result will be null.\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"address","id":"address","line":"182"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"port","id":"port","line":"183"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"certificateName","id":"certificateName","line":"184"},{"ref":{"name":"int","refId":"dart.core/int"},"defaultValue":"0","isOptional":true,"isNamed":true,"kind":"param","name":"backlog","id":"backlog","line":"185"},{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"false","isOptional":true,"isNamed":true,"kind":"param","name":"v6Only","id":"v6Only","line":"186"},{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"false","isOptional":true,"isNamed":true,"kind":"param","name":"requestClientCertificate","id":"requestClientCertificate","line":"187"},{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"false","isOptional":true,"isNamed":true,"kind":"param","name":"requireClientCertificate","id":"requireClientCertificate","line":"188"}],"line":"181"},{"returnType":{"name":"StreamSubscription","refId":"dart.async/StreamSubscription","arguments":[{"name":"RawSecureSocket","refId":"dart.io/RawSecureSocket"}]},"kind":"method","name":"listen","id":"listen4()","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"onData","id":"onData","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"RawSecureSocket","refId":"dart.io/RawSecureSocket"},"kind":"param","name":"s","id":"s","uri":"dart-sdk/lib/io/secure_server_socket.dart","line":"197"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]},{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"isNamed":true,"kind":"param","name":"onError","id":"onError","line":"198"},{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"isNamed":true,"kind":"param","name":"onDone","id":"onDone","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","uri":"dart-sdk/lib/core/function.dart","line":"13"}],"line":"199"},{"ref":{"name":"bool","refId":"dart.core/bool"},"isOptional":true,"isNamed":true,"kind":"param","name":"cancelOnError","id":"cancelOnError","line":"200"}],"line":"197"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"RawSecureServerSocket","refId":"dart.io/RawSecureServerSocket"}]},"kind":"method","name":"close","id":"close0()","comment":"\nCloses the socket. The returned future completes when the socket\nis fully closed and is no longer bound.\n","line":"221"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_onData","id":"_onData1()","children":[{"ref":{"name":"RawSocket","refId":"dart.io/RawSocket"},"kind":"param","name":"connection","id":"connection"}],"isPrivate":true,"line":"226"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_onError","id":"_onError2()","children":[{"kind":"param","name":"e","id":"e"},{"ref":{"name":"StackTrace","refId":"dart.core/StackTrace"},"isOptional":true,"kind":"param","name":"stackTrace","id":"stackTrace"}],"isPrivate":true,"line":"256"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_onDone","id":"_onDone0()","isPrivate":true,"line":"260"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_onPauseStateChange","id":"_onPauseStateChange0()","isPrivate":true,"line":"264"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_onSubscriptionStateChange","id":"_onSubscriptionStateChange0()","isPrivate":true,"line":"272"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"property","name":"port","id":"port","comment":"\nReturns the port used by this socket.\n","line":"210"},{"ref":{"name":"InternetAddress","refId":"dart.io/InternetAddress"},"kind":"property","name":"address","id":"address","comment":"\nReturns the address used by this socket.\n","line":"215"},{"ref":{"name":"RawServerSocket","refId":"dart.io/RawServerSocket"},"kind":"variable","name":"_socket","id":"_socket","isPrivate":true,"line":"117"},{"ref":{"name":"StreamController","refId":"dart.async/StreamController","arguments":[{"name":"RawSecureSocket","refId":"dart.io/RawSecureSocket"}]},"kind":"variable","name":"_controller","id":"_controller","isPrivate":true,"line":"118"},{"ref":{"name":"StreamSubscription","refId":"dart.async/StreamSubscription","arguments":[{"name":"RawSocket","refId":"dart.io/RawSocket"}]},"kind":"variable","name":"_subscription","id":"_subscription","isPrivate":true,"line":"119"},{"ref":{"name":"String","refId":"dart.core/String"},"isFinal":true,"kind":"variable","name":"certificateName","id":"certificateName","line":"120"},{"ref":{"name":"bool","refId":"dart.core/bool"},"isFinal":true,"kind":"variable","name":"requestClientCertificate","id":"requestClientCertificate","line":"121"},{"ref":{"name":"bool","refId":"dart.core/bool"},"isFinal":true,"kind":"variable","name":"requireClientCertificate","id":"requireClientCertificate","line":"122"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"variable","name":"_closed","id":"_closed","isPrivate":true,"line":"123"},{"kind":"constructor","name":"_","id":"_4()","children":[{"ref":{"name":"RawServerSocket","refId":"dart.io/RawServerSocket"},"kind":"param","name":"serverSocket","id":"serverSocket"},{"ref":{"name":"String","refId":"dart.core/String"},"initializedField":{"name":"certificateName","refId":"dart.io/RawSecureServerSocket/certificateName"},"kind":"param","name":"certificateName","id":"certificateName","line":"126"},{"ref":{"name":"bool","refId":"dart.core/bool"},"initializedField":{"name":"requestClientCertificate","refId":"dart.io/RawSecureServerSocket/requestClientCertificate"},"kind":"param","name":"requestClientCertificate","id":"requestClientCertificate","line":"127"},{"ref":{"name":"bool","refId":"dart.core/bool"},"initializedField":{"name":"requireClientCertificate","refId":"dart.io/RawSecureServerSocket/requireClientCertificate"},"kind":"param","name":"requireClientCertificate","id":"requireClientCertificate","line":"128"}],"isPrivate":true,"line":"125"}],"uri":"dart-sdk/lib/io/secure_server_socket.dart","line":"116"},{"superclass":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"SecureSocket","refId":"dart.io/SecureSocket"}]},"kind":"class","name":"SecureServerSocket","id":"SecureServerSocket","comment":"\nThe [SecureServerSocket] is a server socket, providing a stream of high-level\n[Socket]s.\n\nSee [SecureSocket] for more info.\n","children":[{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"SecureServerSocket","refId":"dart.io/SecureServerSocket"}]},"isStatic":true,"kind":"method","name":"bind","id":"bind7()","comment":"\nReturns a future for a [SecureServerSocket]. When the future\ncompletes the server socket is bound to the given [address] and\n[port] and has started listening on it.\n\nThe [address] can either be a [String] or an\n[InternetAddress]. If [address] is a [String], [bind] will\nperform a [InternetAddress.lookup] and use the first value in the\nlist. To listen on the loopback adapter, which will allow only\nincoming connections from the local host, use the value\n[InternetAddress.LOOPBACK_IP_V4] or\n[InternetAddress.LOOPBACK_IP_V6]. To allow for incoming\nconnection from the network use either one of the values\n[InternetAddress.ANY_IP_V4] or [InternetAddress.ANY_IP_V6] to\nbind to all interfaces or the IP address of a specific interface.\n\nIf [port] has the value [:0:] an ephemeral port will be chosen by\nthe system. The actual port used can be retrieved using the\n[port] getter.\n\nThe optional argument [backlog] can be used to specify the listen\nbacklog for the underlying OS listen setup. If [backlog] has the\nvalue of [:0:] (the default) a reasonable value will be chosen by\nthe system.\n\nIncoming client connections are promoted to secure connections, using\nthe server certificate given by [certificateName].\n\n[address] must be given as a numeric address, not a host name.\n\n[certificateName] is the nickname or the distinguished name (DN) of\nthe certificate in the certificate database. It is looked up in the\nNSS certificate database set by SecureSocket.setCertificateDatabase.\nIf [certificateName] contains \"CN=\", it is assumed to be a distinguished\nname.  Otherwise, it is looked up as a nickname.\n\nTo request or require that clients authenticate by providing an SSL (TLS)\nclient certificate, set the optional parameter [requestClientCertificate]\nor [requireClientCertificate] to true.  Requiring a certificate implies\nrequesting a certificate, so one doesn't need to set both to true.\nTo check whether a client certificate was received, check\nSecureSocket.peerCertificate after connecting.  If no certificate\nwas received, the result will be null.\n","children":[{"kind":"param","name":"address","id":"address","line":"63"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"port","id":"port","line":"64"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"certificateName","id":"certificateName","line":"65"},{"ref":{"name":"int","refId":"dart.core/int"},"defaultValue":"0","isOptional":true,"isNamed":true,"kind":"param","name":"backlog","id":"backlog","line":"66"},{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"false","isOptional":true,"isNamed":true,"kind":"param","name":"v6Only","id":"v6Only","line":"67"},{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"false","isOptional":true,"isNamed":true,"kind":"param","name":"requestClientCertificate","id":"requestClientCertificate","line":"68"},{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"false","isOptional":true,"isNamed":true,"kind":"param","name":"requireClientCertificate","id":"requireClientCertificate","line":"69"}],"line":"62"},{"returnType":{"name":"StreamSubscription","refId":"dart.async/StreamSubscription","arguments":[{"name":"SecureSocket","refId":"dart.io/SecureSocket"}]},"kind":"method","name":"listen","id":"listen4()","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"onData","id":"onData","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"SecureSocket","refId":"dart.io/SecureSocket"},"kind":"param","name":"socket","id":"socket","uri":"dart-sdk/lib/io/secure_server_socket.dart","line":"81"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]},{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"isNamed":true,"kind":"param","name":"onError","id":"onError","line":"82"},{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"isNamed":true,"kind":"param","name":"onDone","id":"onDone","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","uri":"dart-sdk/lib/core/function.dart","line":"13"}],"line":"83"},{"ref":{"name":"bool","refId":"dart.core/bool"},"isOptional":true,"isNamed":true,"kind":"param","name":"cancelOnError","id":"cancelOnError","line":"84"}],"line":"81"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"SecureServerSocket","refId":"dart.io/SecureServerSocket"}]},"kind":"method","name":"close","id":"close0()","comment":"\nCloses the socket. The returned future completes when the socket\nis fully closed and is no longer bound.\n","line":"106"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"property","name":"port","id":"port","comment":"\nReturns the port used by this socket.\n","line":"95"},{"ref":{"name":"InternetAddress","refId":"dart.io/InternetAddress"},"kind":"property","name":"address","id":"address","comment":"\nReturns the address used by this socket.\n","line":"100"},{"ref":{"name":"RawSecureServerSocket","refId":"dart.io/RawSecureServerSocket"},"isFinal":true,"kind":"variable","name":"_socket","id":"_socket","isPrivate":true,"line":"14"},{"kind":"constructor","name":"_","id":"_1()","children":[{"ref":{"name":"RawSecureServerSocket","refId":"dart.io/RawSecureServerSocket"},"initializedField":{"name":"_socket","refId":"dart.io/SecureServerSocket/_socket"},"kind":"param","name":"_socket","id":"_socket","isPrivate":true}],"isPrivate":true,"line":"16"}],"uri":"dart-sdk/lib/io/secure_server_socket.dart","line":"13"},{"superclass":{"name":"TlsException","refId":"dart.io/TlsException"},"isThrowable":true,"kind":"class","name":"CertificateException","id":"CertificateException","comment":"\nAn exception that happens in the handshake phase of establishing\na secure network connection, when looking up or verifying a\ncertificate.\n","children":[{"kind":"constructor","name":"","id":"2()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"defaultValue":"\"\"","isOptional":true,"kind":"param","name":"message","id":"message"},{"ref":{"name":"OSError","refId":"dart.io/OSError"},"defaultValue":"null","isOptional":true,"kind":"param","name":"osError","id":"osError","line":"1273"}],"line":"1272"}],"uri":"dart-sdk/lib/io/secure_socket.dart","line":"1271"},{"superclass":{"name":"TlsException","refId":"dart.io/TlsException"},"isThrowable":true,"kind":"class","name":"HandshakeException","id":"HandshakeException","comment":"\nAn exception that happens in the handshake phase of establishing\na secure network connection.\n","children":[{"kind":"constructor","name":"","id":"2()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"defaultValue":"\"\"","isOptional":true,"kind":"param","name":"message","id":"message"},{"ref":{"name":"OSError","refId":"dart.io/OSError"},"defaultValue":"null","isOptional":true,"kind":"param","name":"osError","id":"osError","line":"1261"}],"line":"1260"}],"uri":"dart-sdk/lib/io/secure_socket.dart","line":"1259"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"interfaces":[{"name":"IOException","refId":"dart.io/IOException"}],"isThrowable":true,"kind":"class","name":"TlsException","id":"TlsException","comment":"A secure networking exception caused by a failure in the\n TLS/SSL protocol.\n","children":[{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"method","name":"toString","id":"toString0()","line":"1239"},{"ref":{"name":"String","refId":"dart.core/String"},"isFinal":true,"kind":"variable","name":"type","id":"type","line":"1227"},{"ref":{"name":"String","refId":"dart.core/String"},"isFinal":true,"kind":"variable","name":"message","id":"message","line":"1228"},{"ref":{"name":"OSError","refId":"dart.io/OSError"},"isFinal":true,"kind":"variable","name":"osError","id":"osError","line":"1229"},{"kind":"constructor","name":"","id":"2()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"defaultValue":"\"\"","isOptional":true,"kind":"param","name":"message","id":"message"},{"ref":{"name":"OSError","refId":"dart.io/OSError"},"defaultValue":"null","isOptional":true,"kind":"param","name":"osError","id":"osError","line":"1232"}],"line":"1231"},{"kind":"constructor","name":"_","id":"_3()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"initializedField":{"name":"type","refId":"dart.io/TlsException/type"},"kind":"param","name":"type","id":"type"},{"ref":{"name":"String","refId":"dart.core/String"},"initializedField":{"name":"message","refId":"dart.io/TlsException/message"},"kind":"param","name":"message","id":"message","line":"1236"},{"ref":{"name":"OSError","refId":"dart.io/OSError"},"initializedField":{"name":"osError","refId":"dart.io/TlsException/osError"},"kind":"param","name":"osError","id":"osError","line":"1237"}],"isPrivate":true,"line":"1235"}],"uri":"dart-sdk/lib/io/secure_socket.dart","line":"1226"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"kind":"class","name":"_SecureFilter","id":"_SecureFilter","children":[{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"connect","id":"connect8()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"hostName","id":"hostName"},{"ref":{"name":"Uint8List","refId":"dart.typed_data/Uint8List"},"kind":"param","name":"addr","id":"addr","line":"1200"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"port","id":"port","line":"1201"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"param","name":"is_server","id":"is_server","line":"1202"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"certificateName","id":"certificateName","line":"1203"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"param","name":"requestClientCertificate","id":"requestClientCertificate","line":"1204"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"param","name":"requireClientCertificate","id":"requireClientCertificate","line":"1205"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"param","name":"sendClientCertificate","id":"sendClientCertificate","line":"1206"}],"line":"1199"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"destroy","id":"destroy0()","line":"1207"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"handshake","id":"handshake0()","line":"1208"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"rehandshake","id":"rehandshake0()","line":"1209"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"renegotiate","id":"renegotiate3()","children":[{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"param","name":"useSessionCache","id":"useSessionCache"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"param","name":"requestClientCertificate","id":"requestClientCertificate","line":"1211"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"param","name":"requireClientCertificate","id":"requireClientCertificate","line":"1212"}],"line":"1210"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"init","id":"init0()","line":"1213"},{"returnType":{"name":"int","refId":"dart.core/int"},"kind":"method","name":"processBuffer","id":"processBuffer1()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"bufferIndex","id":"bufferIndex"}],"line":"1215"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"registerBadCertificateCallback","id":"registerBadCertificateCallback1()","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"callback","id":"callback"}],"line":"1216"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"registerHandshakeCompleteCallback","id":"registerHandshakeCompleteCallback1()","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"handshakeCompleteHandler","id":"handshakeCompleteHandler"}],"line":"1217"},{"returnType":{"name":"int","refId":"dart.core/int"},"kind":"method","name":"_pointer","id":"_pointer0()","isPrivate":true,"line":"1218"},{"ref":{"name":"X509Certificate","refId":"dart.io/X509Certificate"},"kind":"property","name":"peerCertificate","id":"peerCertificate","line":"1214"},{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"_ExternalBuffer","refId":"dart.io/_ExternalBuffer"}]},"kind":"property","name":"buffers","id":"buffers","line":"1220"},{"returnType":{"name":"_SecureFilter","refId":"dart.io/_SecureFilter"},"kind":"constructor","name":"","id":"0()","line":"1197"}],"isPrivate":true,"uri":"dart-sdk/lib/io/secure_socket.dart","line":"1196"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"kind":"class","name":"_ExternalBuffer","id":"_ExternalBuffer","comment":"\nA circular buffer backed by an external byte array.  Accessed from\nboth C++ and Dart code in an unsynchronized way, with one reading\nand one writing.  All updates to start and end are done by Dart code.\n","children":[{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"advanceStart","id":"advanceStart1()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"bytes","id":"bytes"}],"line":"1076"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"advanceEnd","id":"advanceEnd1()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"bytes","id":"bytes"}],"line":"1086"},{"returnType":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"method","name":"read","id":"read1()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"bytes","id":"bytes"}],"line":"1119"},{"returnType":{"name":"int","refId":"dart.core/int"},"kind":"method","name":"write","id":"write3()","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"param","name":"inputData","id":"inputData"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"offset","id":"offset"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"bytes","id":"bytes"}],"line":"1141"},{"returnType":{"name":"int","refId":"dart.core/int"},"kind":"method","name":"writeFromSource","id":"writeFromSource1()","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"getData","id":"getData","children":[{"returnType":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"requested","id":"requested","uri":"dart-sdk/lib/io/secure_socket.dart","line":"1158"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"1158"},{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"method","name":"readToSocket","id":"readToSocket1()","children":[{"ref":{"name":"RawSocket","refId":"dart.io/RawSocket"},"kind":"param","name":"socket","id":"socket"}],"line":"1175"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"isEmpty","id":"isEmpty","line":"1096"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"property","name":"length","id":"length","line":"1098"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"property","name":"linearLength","id":"linearLength","line":"1103"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"property","name":"free","id":"free","line":"1108"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"property","name":"linearFree","id":"linearFree","line":"1113"},{"ref":{"name":"List","refId":"dart.core/List"},"kind":"variable","name":"data","id":"data","line":"1189"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"start","id":"start","line":"1190"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"end","id":"end","line":"1191"},{"isFinal":true,"kind":"variable","name":"size","id":"size","line":"1192"},{"kind":"constructor","name":"","id":"1()","children":[{"initializedField":{"name":"size","refId":"dart.io/_ExternalBuffer/size"},"kind":"param","name":"size","id":"size"}],"line":"1071"}],"isPrivate":true,"uri":"dart-sdk/lib/io/secure_socket.dart","line":"1070"},{"superclass":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"RawSocketEvent","refId":"dart.io/RawSocketEvent"}]},"interfaces":[{"name":"RawSecureSocket","refId":"dart.io/RawSecureSocket"}],"kind":"class","name":"_RawSecureSocket","id":"_RawSecureSocket","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"isStatic":true,"kind":"method","name":"_isBufferEncrypted","id":"_isBufferEncrypted1()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"identifier","id":"identifier"}],"isPrivate":true,"line":"415"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"_RawSecureSocket","refId":"dart.io/_RawSecureSocket"}]},"isStatic":true,"kind":"method","name":"connect","id":"connect11()","children":[{"kind":"param","name":"host","id":"host","line":"452"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"requestedPort","id":"requestedPort","line":"453"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"certificateName","id":"certificateName","line":"454"},{"ref":{"name":"bool","refId":"dart.core/bool"},"isOptional":true,"isNamed":true,"kind":"param","name":"is_server","id":"is_server","line":"455"},{"ref":{"name":"RawSocket","refId":"dart.io/RawSocket"},"isOptional":true,"isNamed":true,"kind":"param","name":"socket","id":"socket","line":"456"},{"ref":{"name":"StreamSubscription","refId":"dart.async/StreamSubscription"},"isOptional":true,"isNamed":true,"kind":"param","name":"subscription","id":"subscription","line":"457"},{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"isOptional":true,"isNamed":true,"kind":"param","name":"bufferedData","id":"bufferedData","line":"458"},{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"false","isOptional":true,"isNamed":true,"kind":"param","name":"requestClientCertificate","id":"requestClientCertificate","line":"459"},{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"false","isOptional":true,"isNamed":true,"kind":"param","name":"requireClientCertificate","id":"requireClientCertificate","line":"460"},{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"false","isOptional":true,"isNamed":true,"kind":"param","name":"sendClientCertificate","id":"sendClientCertificate","line":"461"},{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"isNamed":true,"kind":"param","name":"onBadCertificate","id":"onBadCertificate","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"X509Certificate","refId":"dart.io/X509Certificate"},"kind":"param","name":"certificate","id":"certificate","uri":"dart-sdk/lib/io/secure_socket.dart","line":"462"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}],"line":"462"}],"line":"451"},{"returnType":{"name":"StreamSubscription","refId":"dart.async/StreamSubscription"},"kind":"method","name":"listen","id":"listen4()","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"onData","id":"onData","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"RawSocketEvent","refId":"dart.io/RawSocketEvent"},"kind":"param","name":"data","id":"data","uri":"dart-sdk/lib/io/secure_socket.dart","line":"556"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]},{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"isNamed":true,"kind":"param","name":"onError","id":"onError","line":"557"},{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"isNamed":true,"kind":"param","name":"onDone","id":"onDone","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","uri":"dart-sdk/lib/core/function.dart","line":"13"}],"line":"558"},{"ref":{"name":"bool","refId":"dart.core/bool"},"isOptional":true,"isNamed":true,"kind":"param","name":"cancelOnError","id":"cancelOnError","line":"559"}],"line":"556"},{"returnType":{"name":"void","refId":"void"},"isStatic":true,"kind":"method","name":"_verifyFields","id":"_verifyFields8()","children":[{"kind":"param","name":"host","id":"host"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"requestedPort","id":"requestedPort","line":"568"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"certificateName","id":"certificateName","line":"569"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"param","name":"is_server","id":"is_server","line":"570"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"param","name":"requestClientCertificate","id":"requestClientCertificate","line":"571"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"param","name":"requireClientCertificate","id":"requireClientCertificate","line":"572"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"param","name":"sendClientCertificate","id":"sendClientCertificate","line":"573"},{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"onBadCertificate","id":"onBadCertificate","line":"574"}],"isPrivate":true,"line":"567"},{"returnType":{"name":"int","refId":"dart.core/int"},"kind":"method","name":"available","id":"available0()","line":"610"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"RawSecureSocket","refId":"dart.io/RawSecureSocket"}]},"kind":"method","name":"close","id":"close0()","line":"615"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_completeCloseCompleter","id":"_completeCloseCompleter1()","children":[{"isOptional":true,"kind":"param","name":"dummy","id":"dummy"}],"isPrivate":true,"line":"620"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_close","id":"_close0()","isPrivate":true,"line":"624"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"shutdown","id":"shutdown1()","children":[{"ref":{"name":"SocketDirection","refId":"dart.io/SocketDirection"},"kind":"param","name":"direction","id":"direction"}],"line":"645"},{"returnType":{"name":"void","refId":"void"},"isSetter":true,"kind":"method","name":"writeEventsEnabled=","id":"writeEventsEnabled=1()","children":[{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"param","name":"value","id":"value"}],"line":"670"},{"returnType":{"name":"void","refId":"void"},"isSetter":true,"kind":"method","name":"readEventsEnabled=","id":"readEventsEnabled=1()","children":[{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"param","name":"value","id":"value"}],"line":"679"},{"returnType":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"method","name":"read","id":"read1()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"isOptional":true,"kind":"param","name":"length","id":"length"}],"line":"684"},{"returnType":{"name":"int","refId":"dart.core/int"},"kind":"method","name":"write","id":"write3()","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"param","name":"data","id":"data"},{"ref":{"name":"int","refId":"dart.core/int"},"isOptional":true,"kind":"param","name":"offset","id":"offset"},{"ref":{"name":"int","refId":"dart.core/int"},"isOptional":true,"kind":"param","name":"bytes","id":"bytes"}],"line":"701"},{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"method","name":"_onBadCertificateWrapper","id":"_onBadCertificateWrapper1()","children":[{"ref":{"name":"X509Certificate","refId":"dart.io/X509Certificate"},"kind":"param","name":"certificate","id":"certificate"}],"isPrivate":true,"line":"729"},{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"method","name":"setOption","id":"setOption2()","children":[{"ref":{"name":"SocketOption","refId":"dart.io/SocketOption"},"kind":"param","name":"option","id":"option"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"param","name":"enabled","id":"enabled"}],"line":"737"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_eventDispatcher","id":"_eventDispatcher1()","children":[{"ref":{"name":"RawSocketEvent","refId":"dart.io/RawSocketEvent"},"kind":"param","name":"event","id":"event"}],"isPrivate":true,"line":"742"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_readHandler","id":"_readHandler0()","isPrivate":true,"line":"756"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_writeHandler","id":"_writeHandler0()","isPrivate":true,"line":"761"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_doneHandler","id":"_doneHandler0()","isPrivate":true,"line":"766"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_reportError","id":"_reportError2()","children":[{"kind":"param","name":"e","id":"e"},{"ref":{"name":"StackTrace","refId":"dart.core/StackTrace"},"isOptional":true,"kind":"param","name":"stackTrace","id":"stackTrace"}],"isPrivate":true,"line":"772"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_closeHandler","id":"_closeHandler0()","isPrivate":true,"line":"786"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_secureHandshake","id":"_secureHandshake0()","isPrivate":true,"line":"811"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"renegotiate","id":"renegotiate3()","children":[{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"true","isOptional":true,"isNamed":true,"kind":"param","name":"useSessionCache","id":"useSessionCache"},{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"false","isOptional":true,"isNamed":true,"kind":"param","name":"requestClientCertificate","id":"requestClientCertificate","line":"824"},{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"false","isOptional":true,"isNamed":true,"kind":"param","name":"requireClientCertificate","id":"requireClientCertificate","line":"825"}],"line":"823"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_secureHandshakeCompleteHandler","id":"_secureHandshakeCompleteHandler0()","isPrivate":true,"line":"838"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_onPauseStateChange","id":"_onPauseStateChange0()","isPrivate":true,"line":"847"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_onSubscriptionStateChange","id":"_onSubscriptionStateChange0()","isPrivate":true,"line":"867"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_scheduleFilter","id":"_scheduleFilter0()","isPrivate":true,"line":"873"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_tryFilter","id":"_tryFilter0()","isPrivate":true,"line":"878"},{"returnType":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"method","name":"_readSocketOrBufferedData","id":"_readSocketOrBufferedData1()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"bytes","id":"bytes"}],"isPrivate":true,"line":"920"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_readSocket","id":"_readSocket0()","isPrivate":true,"line":"939"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_writeSocket","id":"_writeSocket0()","isPrivate":true,"line":"947"},{"kind":"method","name":"_scheduleReadEvent","id":"_scheduleReadEvent0()","isPrivate":true,"line":"956"},{"kind":"method","name":"_sendReadEvent","id":"_sendReadEvent0()","isPrivate":true,"line":"967"},{"kind":"method","name":"_sendWriteEvent","id":"_sendWriteEvent0()","isPrivate":true,"line":"979"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"_FilterStatus","refId":"dart.io/_FilterStatus"}]},"kind":"method","name":"_pushAllFilterStages","id":"_pushAllFilterStages0()","isPrivate":true,"line":"990"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"property","name":"port","id":"port","line":"604"},{"ref":{"name":"InternetAddress","refId":"dart.io/InternetAddress"},"kind":"property","name":"remoteAddress","id":"remoteAddress","line":"606"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"property","name":"remotePort","id":"remotePort","line":"608"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"writeEventsEnabled","id":"writeEventsEnabled","line":"668"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"readEventsEnabled","id":"readEventsEnabled","line":"677"},{"ref":{"name":"X509Certificate","refId":"dart.io/X509Certificate"},"kind":"property","name":"peerCertificate","id":"peerCertificate","line":"727"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"isFinal":true,"kind":"variable","name":"HANDSHAKE","id":"HANDSHAKE","line":"402"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"isFinal":true,"kind":"variable","name":"CONNECTED","id":"CONNECTED","line":"403"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"isFinal":true,"kind":"variable","name":"CLOSED","id":"CLOSED","line":"404"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"isFinal":true,"kind":"variable","name":"READ_PLAINTEXT","id":"READ_PLAINTEXT","line":"408"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"isFinal":true,"kind":"variable","name":"WRITE_PLAINTEXT","id":"WRITE_PLAINTEXT","line":"409"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"isFinal":true,"kind":"variable","name":"READ_ENCRYPTED","id":"READ_ENCRYPTED","line":"410"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"isFinal":true,"kind":"variable","name":"WRITE_ENCRYPTED","id":"WRITE_ENCRYPTED","line":"411"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"isFinal":true,"kind":"variable","name":"NUM_BUFFERS","id":"NUM_BUFFERS","line":"412"},{"ref":{"name":"RawSocket","refId":"dart.io/RawSocket"},"kind":"variable","name":"_socket","id":"_socket","isPrivate":true,"line":"417"},{"ref":{"name":"Completer","refId":"dart.async/Completer","arguments":[{"name":"_RawSecureSocket","refId":"dart.io/_RawSecureSocket"}]},"isFinal":true,"kind":"variable","name":"_handshakeComplete","id":"_handshakeComplete","isPrivate":true,"line":"418"},{"ref":{"name":"StreamController","refId":"dart.async/StreamController","arguments":[{"name":"RawSocketEvent","refId":"dart.io/RawSocketEvent"}]},"kind":"variable","name":"_controller","id":"_controller","isPrivate":true,"line":"420"},{"ref":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"RawSocketEvent","refId":"dart.io/RawSocketEvent"}]},"kind":"variable","name":"_stream","id":"_stream","isPrivate":true,"line":"421"},{"ref":{"name":"StreamSubscription","refId":"dart.async/StreamSubscription","arguments":[{"name":"RawSocketEvent","refId":"dart.io/RawSocketEvent"}]},"kind":"variable","name":"_socketSubscription","id":"_socketSubscription","isPrivate":true,"line":"422"},{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"variable","name":"_bufferedData","id":"_bufferedData","isPrivate":true,"line":"423"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"_bufferedDataIndex","id":"_bufferedDataIndex","isPrivate":true,"line":"424"},{"ref":{"name":"InternetAddress","refId":"dart.io/InternetAddress"},"isFinal":true,"kind":"variable","name":"address","id":"address","line":"425"},{"ref":{"name":"bool","refId":"dart.core/bool"},"isFinal":true,"kind":"variable","name":"is_server","id":"is_server","line":"426"},{"ref":{"name":"String","refId":"dart.core/String"},"isFinal":true,"kind":"variable","name":"certificateName","id":"certificateName","line":"427"},{"ref":{"name":"bool","refId":"dart.core/bool"},"isFinal":true,"kind":"variable","name":"requestClientCertificate","id":"requestClientCertificate","line":"428"},{"ref":{"name":"bool","refId":"dart.core/bool"},"isFinal":true,"kind":"variable","name":"requireClientCertificate","id":"requireClientCertificate","line":"429"},{"ref":{"name":"bool","refId":"dart.core/bool"},"isFinal":true,"kind":"variable","name":"sendClientCertificate","id":"sendClientCertificate","line":"430"},{"ref":{"name":"Function","refId":"dart.core/Function"},"isFinal":true,"kind":"variable","name":"onBadCertificate","id":"onBadCertificate","line":"431"},{"kind":"variable","name":"_status","id":"_status","isPrivate":true,"line":"433"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"variable","name":"_writeEventsEnabled","id":"_writeEventsEnabled","isPrivate":true,"line":"434"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"variable","name":"_readEventsEnabled","id":"_readEventsEnabled","isPrivate":true,"line":"435"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"_pauseCount","id":"_pauseCount","isPrivate":true,"line":"436"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"variable","name":"_pendingReadEvent","id":"_pendingReadEvent","isPrivate":true,"line":"437"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"variable","name":"_socketClosedRead","id":"_socketClosedRead","isPrivate":true,"line":"438"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"variable","name":"_socketClosedWrite","id":"_socketClosedWrite","isPrivate":true,"line":"439"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"variable","name":"_closedRead","id":"_closedRead","isPrivate":true,"line":"440"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"variable","name":"_closedWrite","id":"_closedWrite","isPrivate":true,"line":"441"},{"ref":{"name":"Completer","refId":"dart.async/Completer"},"kind":"variable","name":"_closeCompleter","id":"_closeCompleter","isPrivate":true,"line":"442"},{"ref":{"name":"_FilterStatus","refId":"dart.io/_FilterStatus"},"kind":"variable","name":"_filterStatus","id":"_filterStatus","isPrivate":true,"line":"443"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"variable","name":"_connectPending","id":"_connectPending","isPrivate":true,"line":"444"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"variable","name":"_filterPending","id":"_filterPending","isPrivate":true,"line":"445"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"variable","name":"_filterActive","id":"_filterActive","isPrivate":true,"line":"446"},{"ref":{"name":"_SecureFilter","refId":"dart.io/_SecureFilter"},"kind":"variable","name":"_secureFilter","id":"_secureFilter","isPrivate":true,"line":"448"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"_filterPointer","id":"_filterPointer","isPrivate":true,"line":"449"},{"kind":"constructor","name":"","id":"11()","children":[{"ref":{"name":"InternetAddress","refId":"dart.io/InternetAddress"},"initializedField":{"name":"address","refId":"dart.io/_RawSecureSocket/address"},"kind":"param","name":"address","id":"address","line":"494"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"requestedPort","id":"requestedPort","line":"495"},{"ref":{"name":"String","refId":"dart.core/String"},"initializedField":{"name":"certificateName","refId":"dart.io/_RawSecureSocket/certificateName"},"kind":"param","name":"certificateName","id":"certificateName","line":"496"},{"ref":{"name":"bool","refId":"dart.core/bool"},"initializedField":{"name":"is_server","refId":"dart.io/_RawSecureSocket/is_server"},"kind":"param","name":"is_server","id":"is_server","line":"497"},{"ref":{"name":"RawSocket","refId":"dart.io/RawSocket"},"kind":"param","name":"socket","id":"socket","line":"498"},{"ref":{"name":"StreamSubscription","refId":"dart.async/StreamSubscription"},"initializedField":{"name":"_socketSubscription","refId":"dart.io/_RawSecureSocket/_socketSubscription"},"kind":"param","name":"_socketSubscription","id":"_socketSubscription","isPrivate":true,"line":"499"},{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"initializedField":{"name":"_bufferedData","refId":"dart.io/_RawSecureSocket/_bufferedData"},"kind":"param","name":"_bufferedData","id":"_bufferedData","isPrivate":true,"line":"500"},{"ref":{"name":"bool","refId":"dart.core/bool"},"initializedField":{"name":"requestClientCertificate","refId":"dart.io/_RawSecureSocket/requestClientCertificate"},"kind":"param","name":"requestClientCertificate","id":"requestClientCertificate","line":"501"},{"ref":{"name":"bool","refId":"dart.core/bool"},"initializedField":{"name":"requireClientCertificate","refId":"dart.io/_RawSecureSocket/requireClientCertificate"},"kind":"param","name":"requireClientCertificate","id":"requireClientCertificate","line":"502"},{"ref":{"name":"bool","refId":"dart.core/bool"},"initializedField":{"name":"sendClientCertificate","refId":"dart.io/_RawSecureSocket/sendClientCertificate"},"kind":"param","name":"sendClientCertificate","id":"sendClientCertificate","line":"503"},{"ref":{"name":"Function","refId":"dart.core/Function"},"initializedField":{"name":"onBadCertificate","refId":"dart.io/_RawSecureSocket/onBadCertificate"},"kind":"param","name":"onBadCertificate","id":"onBadCertificate","line":"504"}],"line":"493"}],"isPrivate":true,"uri":"dart-sdk/lib/io/secure_socket.dart","line":"399"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"kind":"class","name":"_FilterStatus","id":"_FilterStatus","children":[{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"variable","name":"progress","id":"progress","line":"386"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"variable","name":"readEmpty","id":"readEmpty","line":"387"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"variable","name":"writeEmpty","id":"writeEmpty","line":"388"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"variable","name":"readPlaintextNoLongerEmpty","id":"readPlaintextNoLongerEmpty","line":"390"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"variable","name":"writePlaintextNoLongerFull","id":"writePlaintextNoLongerFull","line":"391"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"variable","name":"readEncryptedNoLongerFull","id":"readEncryptedNoLongerFull","line":"392"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"variable","name":"writeEncryptedNoLongerEmpty","id":"writeEncryptedNoLongerEmpty","line":"393"},{"kind":"constructor","name":"","id":"0()","line":"395"}],"isPrivate":true,"uri":"dart-sdk/lib/io/secure_socket.dart","line":"385"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"kind":"class","name":"X509Certificate","id":"X509Certificate","comment":"\nX509Certificate represents an SSL certificate, with accessors to\nget the fields of the certificate.\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"isFinal":true,"kind":"variable","name":"subject","id":"subject","line":"378"},{"ref":{"name":"String","refId":"dart.core/String"},"isFinal":true,"kind":"variable","name":"issuer","id":"issuer","line":"379"},{"ref":{"name":"DateTime","refId":"dart.core/DateTime"},"isFinal":true,"kind":"variable","name":"startValidity","id":"startValidity","line":"380"},{"ref":{"name":"DateTime","refId":"dart.core/DateTime"},"isFinal":true,"kind":"variable","name":"endValidity","id":"endValidity","line":"381"},{"kind":"constructor","name":"","id":"4()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"initializedField":{"name":"subject","refId":"dart.io/X509Certificate/subject"},"kind":"param","name":"subject","id":"subject"},{"ref":{"name":"String","refId":"dart.core/String"},"initializedField":{"name":"issuer","refId":"dart.io/X509Certificate/issuer"},"kind":"param","name":"issuer","id":"issuer","line":"375"},{"ref":{"name":"DateTime","refId":"dart.core/DateTime"},"initializedField":{"name":"startValidity","refId":"dart.io/X509Certificate/startValidity"},"kind":"param","name":"startValidity","id":"startValidity","line":"376"},{"ref":{"name":"DateTime","refId":"dart.core/DateTime"},"initializedField":{"name":"endValidity","refId":"dart.io/X509Certificate/endValidity"},"kind":"param","name":"endValidity","id":"endValidity","line":"377"}],"line":"374"}],"uri":"dart-sdk/lib/io/secure_socket.dart","line":"373"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"interfaces":[{"name":"RawSocket","refId":"dart.io/RawSocket"}],"kind":"class","name":"RawSecureSocket","id":"RawSecureSocket","comment":"\nRawSecureSocket provides a secure (SSL or TLS) network connection.\nClient connections to a server are provided by calling\nRawSecureSocket.connect.  A secure server, created with\nRawSecureServerSocket, also returns RawSecureSocket objects representing\nthe server end of a secure connection.\nThe certificate provided by the server is checked\nusing the certificate database provided in SecureSocket.initialize, and/or\nthe default built-in root certificates.\n","children":[{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"RawSecureSocket","refId":"dart.io/RawSecureSocket"}]},"isStatic":true,"kind":"method","name":"connect","id":"connect5()","comment":"\nConstructs a new secure client socket and connect it to the given\nhost on the given port. The returned Future is completed with the\nRawSecureSocket when it is connected and ready for subscription.\n\nThe certificate provided by the server is checked using the certificate\ndatabase provided in [SecureSocket.initialize], and/or the default built-in\nroot certificates. If [sendClientCertificate] is\nset to true, the socket will send a client certificate if one is\nrequested by the server. If [certificateName] is the nickname of\na certificate in the certificate database, that certificate will be sent.\nIf [certificateName] is null, which is the usual use case, an\nappropriate certificate will be searched for in the database and\nsent automatically, based on what the server says it will accept.\n\n[onBadCertificate] is an optional handler for unverifiable certificates.\nThe handler receives the [X509Certificate], and can inspect it and\ndecide (or let the user decide) whether to accept\nthe connection or not.  The handler should return true\nto continue the [RawSecureSocket] connection.\n","children":[{"kind":"param","name":"host","id":"host","line":"244"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"port","id":"port","line":"245"},{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"false","isOptional":true,"isNamed":true,"kind":"param","name":"sendClientCertificate","id":"sendClientCertificate","line":"246"},{"ref":{"name":"String","refId":"dart.core/String"},"isOptional":true,"isNamed":true,"kind":"param","name":"certificateName","id":"certificateName","line":"247"},{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"isNamed":true,"kind":"param","name":"onBadCertificate","id":"onBadCertificate","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"X509Certificate","refId":"dart.io/X509Certificate"},"kind":"param","name":"certificate","id":"certificate","uri":"dart-sdk/lib/io/secure_socket.dart","line":"248"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}],"line":"248"}],"line":"243"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"RawSecureSocket","refId":"dart.io/RawSecureSocket"}]},"isStatic":true,"kind":"method","name":"secure","id":"secure6()","comment":"\nTakes an already connected [socket] and starts client side TLS\nhandshake to make the communication secure. When the returned\nfuture completes the [RawSecureSocket] has completed the TLS\nhandshake. Using this function requires that the other end of the\nconnection is prepared for TLS handshake.\n\nIf the [socket] already has a subscription, pass the existing\nsubscription in the [subscription] parameter. The secure socket\nwill take over the subscription and process any subsequent\nevents. In most cases calling `pause` on this subscription before\nstarting TLS handshake is the right thing to do.\n\nIf the [host] argument is passed it will be used as the host name\nfor the TLS handshake. If [host] is not passed the host name from\nthe [socket] will be used. The [host] can be either a [String] or\nan [InternetAddress].\n\nCalling this function will _not_ cause a DNS host lookup. If the\n[host] passed is a [String] the [InternetAddress] for the\nresulting [SecureSocket] will have this passed in [host] as its\nhost value and the internet address of the already connected\nsocket as its address value.\n\nSee [connect] for more information on the arguments.\n\n","children":[{"ref":{"name":"RawSocket","refId":"dart.io/RawSocket"},"kind":"param","name":"socket","id":"socket","line":"286"},{"ref":{"name":"StreamSubscription","refId":"dart.async/StreamSubscription"},"isOptional":true,"isNamed":true,"kind":"param","name":"subscription","id":"subscription","line":"287"},{"isOptional":true,"isNamed":true,"kind":"param","name":"host","id":"host","line":"288"},{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"false","isOptional":true,"isNamed":true,"kind":"param","name":"sendClientCertificate","id":"sendClientCertificate","line":"289"},{"ref":{"name":"String","refId":"dart.core/String"},"isOptional":true,"isNamed":true,"kind":"param","name":"certificateName","id":"certificateName","line":"290"},{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"isNamed":true,"kind":"param","name":"onBadCertificate","id":"onBadCertificate","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"X509Certificate","refId":"dart.io/X509Certificate"},"kind":"param","name":"certificate","id":"certificate","uri":"dart-sdk/lib/io/secure_socket.dart","line":"291"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}],"line":"291"}],"line":"285"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"RawSecureSocket","refId":"dart.io/RawSecureSocket"}]},"isStatic":true,"kind":"method","name":"secureServer","id":"secureServer6()","comment":"\nTakes an already connected [socket] and starts server side TLS\nhandshake to make the communication secure. When the returned\nfuture completes the [RawSecureSocket] has completed the TLS\nhandshake. Using this function requires that the other end of the\nconnection is going to start the TLS handshake.\n\nIf the [socket] already has a subscription, pass the existing\nsubscription in the [subscription] parameter. The secure socket\nwill take over the subscription and process any subsequent\nevents.\n\nIf some of the data of the TLS handshake has already been read\nfrom the socket this data can be passed in the [bufferedData]\nparameter. This data will be processed before any other data\navailable on the socket.\n\nSee [RawSecureServerSocket.bind] for more information on the\narguments.\n\n","children":[{"ref":{"name":"RawSocket","refId":"dart.io/RawSocket"},"kind":"param","name":"socket","id":"socket","line":"327"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"certificateName","id":"certificateName","line":"328"},{"ref":{"name":"StreamSubscription","refId":"dart.async/StreamSubscription"},"isOptional":true,"isNamed":true,"kind":"param","name":"subscription","id":"subscription","line":"329"},{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"isOptional":true,"isNamed":true,"kind":"param","name":"bufferedData","id":"bufferedData","line":"330"},{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"false","isOptional":true,"isNamed":true,"kind":"param","name":"requestClientCertificate","id":"requestClientCertificate","line":"331"},{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"false","isOptional":true,"isNamed":true,"kind":"param","name":"requireClientCertificate","id":"requireClientCertificate","line":"332"}],"line":"326"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"renegotiate","id":"renegotiate3()","comment":"\nRenegotiate an existing secure connection, renewing the session keys\nand possibly changing the connection properties.\n\nThis repeats the SSL or TLS handshake, with options that allow clearing\nthe session cache and requesting a client certificate.\n","children":[{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"true","isOptional":true,"isNamed":true,"kind":"param","name":"useSessionCache","id":"useSessionCache"},{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"false","isOptional":true,"isNamed":true,"kind":"param","name":"requestClientCertificate","id":"requestClientCertificate","line":"355"},{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"false","isOptional":true,"isNamed":true,"kind":"param","name":"requireClientCertificate","id":"requireClientCertificate","line":"356"}],"line":"354"},{"ref":{"name":"X509Certificate","refId":"dart.io/X509Certificate"},"kind":"property","name":"peerCertificate","id":"peerCertificate","comment":"\nGet the peer certificate for a connected RawSecureSocket.  If this\nRawSecureSocket is the server end of a secure socket connection,\n[peerCertificate] will return the client certificate, or null, if no\nclient certificate was received.  If it is the client end,\n[peerCertificate] will return the server's certificate.\n","line":"365"}],"uri":"dart-sdk/lib/io/secure_socket.dart","line":"221"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"interfaces":[{"name":"Socket","refId":"dart.io/Socket"}],"kind":"class","name":"SecureSocket","id":"SecureSocket","comment":"\nA high-level class for communicating securely over a TCP socket, using\nTLS and SSL. The [SecureSocket] exposes both a [Stream] and an\n[IOSink] interface, making it ideal for using together with\nother [Stream]s.\n","children":[{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"SecureSocket","refId":"dart.io/SecureSocket"}]},"isStatic":true,"kind":"method","name":"connect","id":"connect5()","comment":"\nConstructs a new secure client socket and connect it to the given\n[host] on port [port]. The returned Future will complete with a\n[SecureSocket] that is connected and ready for subscription.\n\nIf [sendClientCertificate] is set to true, the socket will send a client\ncertificate if one is requested by the server.\n\nIf [certificateName] is the nickname of a certificate in the certificate\ndatabase, that certificate will be sent.\n\nIf [certificateName] is null, which is the usual use case, an\nappropriate certificate will be searched for in the database and\nsent automatically, based on what the server says it will accept.\n\n[onBadCertificate] is an optional handler for unverifiable certificates.\nThe handler receives the [X509Certificate], and can inspect it and\ndecide (or let the user decide) whether to accept\nthe connection or not.  The handler should return true\nto continue the [SecureSocket] connection.\n","children":[{"kind":"param","name":"host","id":"host","line":"38"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"port","id":"port","line":"39"},{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"false","isOptional":true,"isNamed":true,"kind":"param","name":"sendClientCertificate","id":"sendClientCertificate","line":"40"},{"ref":{"name":"String","refId":"dart.core/String"},"isOptional":true,"isNamed":true,"kind":"param","name":"certificateName","id":"certificateName","line":"41"},{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"isNamed":true,"kind":"param","name":"onBadCertificate","id":"onBadCertificate","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"X509Certificate","refId":"dart.io/X509Certificate"},"kind":"param","name":"certificate","id":"certificate","uri":"dart-sdk/lib/io/secure_socket.dart","line":"42"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}],"line":"42"}],"line":"37"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"SecureSocket","refId":"dart.io/SecureSocket"}]},"isStatic":true,"kind":"method","name":"secure","id":"secure5()","comment":"\nTakes an already connected [socket] and starts client side TLS\nhandshake to make the communication secure. When the returned\nfuture completes the [SecureSocket] has completed the TLS\nhandshake. Using this function requires that the other end of the\nconnection is prepared for TLS handshake.\n\nIf the [socket] already has a subscription, this subscription\nwill no longer receive and events. In most cases calling\n`pause` on this subscription before starting TLS handshake is\nthe right thing to do.\n\nIf the [host] argument is passed it will be used as the host name\nfor the TLS handshake. If [host] is not passed the host name from\nthe [socket] will be used. The [host] can be either a [String] or\nan [InternetAddress].\n\nCalling this function will _not_ cause a DNS host lookup. If the\n[host] passed is a [String] the [InternetAddress] for the\nresulting [SecureSocket] will have the passed in [host] as its\nhost value and the internet address of the already connected\nsocket as its address value.\n\nSee [connect] for more information on the arguments.\n\n","children":[{"ref":{"name":"Socket","refId":"dart.io/Socket"},"kind":"param","name":"socket","id":"socket","line":"78"},{"isOptional":true,"isNamed":true,"kind":"param","name":"host","id":"host","line":"79"},{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"false","isOptional":true,"isNamed":true,"kind":"param","name":"sendClientCertificate","id":"sendClientCertificate","line":"80"},{"ref":{"name":"String","refId":"dart.core/String"},"isOptional":true,"isNamed":true,"kind":"param","name":"certificateName","id":"certificateName","line":"81"},{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"isNamed":true,"kind":"param","name":"onBadCertificate","id":"onBadCertificate","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"X509Certificate","refId":"dart.io/X509Certificate"},"kind":"param","name":"certificate","id":"certificate","uri":"dart-sdk/lib/io/secure_socket.dart","line":"82"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}],"line":"82"}],"line":"77"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"SecureSocket","refId":"dart.io/SecureSocket"}]},"isStatic":true,"kind":"method","name":"secureServer","id":"secureServer5()","comment":"\nTakes an already connected [socket] and starts server side TLS\nhandshake to make the communication secure. When the returned\nfuture completes the [SecureSocket] has completed the TLS\nhandshake. Using this function requires that the other end of the\nconnection is going to start the TLS handshake.\n\nIf the [socket] already has a subscription, this subscription\nwill no longer receive and events. In most cases calling\n[:pause:] on this subscription before starting TLS handshake is\nthe right thing to do.\n\nIf some of the data of the TLS handshake has already been read\nfrom the socket this data can be passed in the [bufferedData]\nparameter. This data will be processed before any other data\navailable on the socket.\n\nSee [SecureServerSocket.bind] for more information on the\narguments.\n\n","children":[{"ref":{"name":"Socket","refId":"dart.io/Socket"},"kind":"param","name":"socket","id":"socket","line":"121"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"certificateName","id":"certificateName","line":"122"},{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"isOptional":true,"isNamed":true,"kind":"param","name":"bufferedData","id":"bufferedData","line":"123"},{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"false","isOptional":true,"isNamed":true,"kind":"param","name":"requestClientCertificate","id":"requestClientCertificate","line":"124"},{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"false","isOptional":true,"isNamed":true,"kind":"param","name":"requireClientCertificate","id":"requireClientCertificate","line":"125"}],"line":"120"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"renegotiate","id":"renegotiate3()","comment":"\nRenegotiate an existing secure connection, renewing the session keys\nand possibly changing the connection properties.\n\nThis repeats the SSL or TLS handshake, with options that allow clearing\nthe session cache and requesting a client certificate.\n","children":[{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"true","isOptional":true,"isNamed":true,"kind":"param","name":"useSessionCache","id":"useSessionCache"},{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"false","isOptional":true,"isNamed":true,"kind":"param","name":"requestClientCertificate","id":"requestClientCertificate","line":"160"},{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"false","isOptional":true,"isNamed":true,"kind":"param","name":"requireClientCertificate","id":"requireClientCertificate","line":"161"}],"line":"159"},{"returnType":{"name":"void","refId":"void"},"isStatic":true,"kind":"method","name":"initialize","id":"initialize3()","comment":"\nInitializes the NSS library. If [initialize] is not called, the library\nis automatically initialized as if [initialize] were called with no\narguments. If [initialize] is called more than once, or called after\nautomatic initialization has happened (when a secure connection is made),\nthen a TlsException is thrown.\n\nThe optional argument [database] is the path to a certificate database\ndirectory containing root certificates for verifying certificate paths on\nclient connections, and server certificates to provide on server\nconnections. The argument [password] should be used when creating\nsecure server sockets, to allow the private key of the server\ncertificate to be fetched. If [useBuiltinRoots] is true (the default),\nthen a built-in set of root certificates for trusted certificate\nauthorities is merged with the certificates in the database.\nThe list of built-in root certificates, and documentation about this\ndefault database, is available at\nhttp://www.mozilla.org/projects/security/certs/included/ .\n\nIf the [database] argument is omitted, then only the\nbuiltin root certificates are used. If [useBuiltinRoots] is also false,\nthen no certificates are available.\n\nExamples:\n  1) Use only the builtin root certificates:\n    SecureSocket.initialize(); or\n\n  2) Use a specified database directory and the builtin roots:\n    SecureSocket.initialize(database: 'path/to/my/database',\n                            password: 'my_password');\n\n  3) Use a specified database directory, without builtin roots:\n    SecureSocket.initialize(database: 'path/to/my/database',\n                            password: 'my_password'.\n                            useBuiltinRoots: false);\n\nThe database should be an NSS certificate database directory\ncontaining a cert9.db file, not a cert8.db file.  This version of\nthe database can be created using the NSS certutil tool with \"sql:\" in\nfront of the absolute path of the database directory, or setting the\nenvironment variable [[NSS_DEFAULT_DB_TYPE]] to \"sql\".\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"isOptional":true,"isNamed":true,"kind":"param","name":"database","id":"database"},{"ref":{"name":"String","refId":"dart.core/String"},"isOptional":true,"isNamed":true,"kind":"param","name":"password","id":"password","line":"206"},{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"true","isOptional":true,"isNamed":true,"kind":"param","name":"useBuiltinRoots","id":"useBuiltinRoots","line":"207"}],"line":"205"},{"ref":{"name":"X509Certificate","refId":"dart.io/X509Certificate"},"kind":"property","name":"peerCertificate","id":"peerCertificate","comment":"\nGet the peer certificate for a connected SecureSocket.  If this\nSecureSocket is the server end of a secure socket connection,\n[peerCertificate] will return the client certificate, or null, if no\nclient certificate was received.  If it is the client end,\n[peerCertificate] will return the server's certificate.\n","line":"150"},{"returnType":{"name":"SecureSocket","refId":"dart.io/SecureSocket"},"kind":"constructor","name":"_","id":"_1()","children":[{"ref":{"name":"RawSecureSocket","refId":"dart.io/RawSecureSocket"},"kind":"param","name":"rawSocket","id":"rawSocket"}],"isPrivate":true,"line":"14"}],"uri":"dart-sdk/lib/io/secure_socket.dart","line":"13"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"interfaces":[{"name":"Timer","refId":"dart.async/Timer"}],"kind":"class","name":"_Timer","id":"_Timer","children":[{"returnType":{"name":"Timer","refId":"dart.async/Timer"},"isStatic":true,"kind":"method","name":"_createTimer","id":"_createTimer3()","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"callback","id":"callback","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"Timer","refId":"dart.async/Timer"},"kind":"param","name":"timer","id":"timer","uri":"dart-sdk/lib/io/timer_impl.dart","line":"139"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"milliSeconds","id":"milliSeconds","line":"140"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"param","name":"repeating","id":"repeating","line":"141"}],"isPrivate":true,"line":"139"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_clear","id":"_clear0()","isPrivate":true,"line":"172"},{"returnType":{"name":"int","refId":"dart.core/int"},"kind":"method","name":"_compareTo","id":"_compareTo1()","children":[{"ref":{"name":"_Timer","refId":"dart.io/_Timer"},"kind":"param","name":"other","id":"other"}],"isPrivate":true,"line":"176"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"cancel","id":"cancel0()","line":"188"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_advanceWakeupTime","id":"_advanceWakeupTime0()","isPrivate":true,"line":"199"},{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"method","name":"_addTimerToHeap","id":"_addTimerToHeap0()","isPrivate":true,"line":"206"},{"returnType":{"name":"void","refId":"void"},"isStatic":true,"kind":"method","name":"_notifyEventHandler","id":"_notifyEventHandler0()","isPrivate":true,"line":"223"},{"returnType":{"name":"void","refId":"void"},"isStatic":true,"kind":"method","name":"_handleTimeout","id":"_handleTimeout1()","children":[{"kind":"param","name":"_","id":"_","isPrivate":true}],"isPrivate":true,"line":"251"},{"returnType":{"name":"void","refId":"void"},"isStatic":true,"kind":"method","name":"_createTimerHandler","id":"_createTimerHandler0()","isPrivate":true,"line":"300"},{"returnType":{"name":"void","refId":"void"},"isStatic":true,"kind":"method","name":"_shutdownTimerHandler","id":"_shutdownTimerHandler0()","isPrivate":true,"line":"306"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"_isInHeap","id":"_isInHeap","isPrivate":true,"line":"170"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"_repeating","id":"_repeating","isPrivate":true,"line":"182"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"isActive","id":"isActive","line":"184"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"_NO_TIMER","id":"_NO_TIMER","isPrivate":true,"line":"122"},{"ref":{"name":"_TimerHeap","refId":"dart.io/_TimerHeap"},"isStatic":true,"kind":"variable","name":"_heap","id":"_heap","isPrivate":true,"line":"125"},{"ref":{"name":"_Timer","refId":"dart.io/_Timer"},"isStatic":true,"kind":"variable","name":"_firstZeroTimer","id":"_firstZeroTimer","isPrivate":true,"line":"126"},{"ref":{"name":"_Timer","refId":"dart.io/_Timer"},"isStatic":true,"kind":"variable","name":"_lastZeroTimer","id":"_lastZeroTimer","isPrivate":true,"line":"127"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"_idCount","id":"_idCount","isPrivate":true,"line":"128"},{"ref":{"name":"RawReceivePort","refId":"dart.isolate/RawReceivePort"},"isStatic":true,"kind":"variable","name":"_receivePort","id":"_receivePort","isPrivate":true,"line":"130"},{"ref":{"name":"bool","refId":"dart.core/bool"},"isStatic":true,"kind":"variable","name":"_handlingCallbacks","id":"_handlingCallbacks","isPrivate":true,"line":"131"},{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"variable","name":"_callback","id":"_callback","isPrivate":true,"line":"133"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"_milliSeconds","id":"_milliSeconds","isPrivate":true,"line":"134"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"_wakeupTime","id":"_wakeupTime","isPrivate":true,"line":"135"},{"kind":"variable","name":"_indexOrNext","id":"_indexOrNext","isPrivate":true,"line":"136"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"_id","id":"_id","isPrivate":true,"line":"137"},{"returnType":{"name":"_Timer","refId":"dart.io/_Timer"},"kind":"constructor","name":"","id":"2()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"milliSeconds","id":"milliSeconds"},{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"callback","id":"callback","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"Timer","refId":"dart.async/Timer"},"kind":"param","name":"timer","id":"timer","uri":"dart-sdk/lib/io/timer_impl.dart","line":"160"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"160"},{"returnType":{"name":"_Timer","refId":"dart.io/_Timer"},"kind":"constructor","name":"periodic","id":"periodic2()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"milliSeconds","id":"milliSeconds"},{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"callback","id":"callback","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"Timer","refId":"dart.async/Timer"},"kind":"param","name":"timer","id":"timer","uri":"dart-sdk/lib/io/timer_impl.dart","line":"164"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"164"},{"kind":"constructor","name":"_internal","id":"_internal0()","isPrivate":true,"line":"168"}],"isPrivate":true,"uri":"dart-sdk/lib/io/timer_impl.dart","line":"120"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"kind":"class","name":"_TimerHeap","id":"_TimerHeap","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"method","name":"isFirst","id":"isFirst1()","children":[{"ref":{"name":"_Timer","refId":"dart.io/_Timer"},"kind":"param","name":"timer","id":"timer"}],"line":"27"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"add","id":"add1()","children":[{"ref":{"name":"_Timer","refId":"dart.io/_Timer"},"kind":"param","name":"timer","id":"timer"}],"line":"29"},{"returnType":{"name":"_Timer","refId":"dart.io/_Timer"},"kind":"method","name":"removeFirst","id":"removeFirst0()","line":"38"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"remove","id":"remove1()","children":[{"ref":{"name":"_Timer","refId":"dart.io/_Timer"},"kind":"param","name":"timer","id":"timer"}],"line":"44"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_resize","id":"_resize0()","isPrivate":true,"line":"66"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_bubbleUp","id":"_bubbleUp1()","children":[{"ref":{"name":"_Timer","refId":"dart.io/_Timer"},"kind":"param","name":"timer","id":"timer"}],"isPrivate":true,"line":"72"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_bubbleDown","id":"_bubbleDown1()","children":[{"ref":{"name":"_Timer","refId":"dart.io/_Timer"},"kind":"param","name":"timer","id":"timer"}],"isPrivate":true,"line":"83"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_swap","id":"_swap2()","children":[{"ref":{"name":"_Timer","refId":"dart.io/_Timer"},"kind":"param","name":"first","id":"first"},{"ref":{"name":"_Timer","refId":"dart.io/_Timer"},"kind":"param","name":"second","id":"second"}],"isPrivate":true,"line":"102"},{"returnType":{"name":"Timer","refId":"dart.async/Timer"},"kind":"method","name":"_parent","id":"_parent1()","children":[{"ref":{"name":"_Timer","refId":"dart.io/_Timer"},"kind":"param","name":"timer","id":"timer"}],"isPrivate":true,"line":"110"},{"returnType":{"name":"Timer","refId":"dart.async/Timer"},"kind":"method","name":"_leftChild","id":"_leftChild1()","children":[{"ref":{"name":"_Timer","refId":"dart.io/_Timer"},"kind":"param","name":"timer","id":"timer"}],"isPrivate":true,"line":"111"},{"returnType":{"name":"Timer","refId":"dart.async/Timer"},"kind":"method","name":"_rightChild","id":"_rightChild1()","children":[{"ref":{"name":"_Timer","refId":"dart.io/_Timer"},"kind":"param","name":"timer","id":"timer"}],"isPrivate":true,"line":"112"},{"returnType":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"method","name":"_parentIndex","id":"_parentIndex1()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"index","id":"index"}],"isPrivate":true,"line":"115"},{"returnType":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"method","name":"_leftChildIndex","id":"_leftChildIndex1()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"index","id":"index"}],"isPrivate":true,"line":"116"},{"returnType":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"method","name":"_rightChildIndex","id":"_rightChildIndex1()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"index","id":"index"}],"isPrivate":true,"line":"117"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"isEmpty","id":"isEmpty","line":"22"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"isNotEmpty","id":"isNotEmpty","line":"23"},{"ref":{"name":"_Timer","refId":"dart.io/_Timer"},"kind":"property","name":"first","id":"first","line":"25"},{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"_Timer","refId":"dart.io/_Timer"}]},"kind":"variable","name":"_list","id":"_list","isPrivate":true,"line":"16"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"_used","id":"_used","isPrivate":true,"line":"17"},{"kind":"constructor","name":"","id":"1()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"defaultValue":"7","isOptional":true,"kind":"param","name":"initSize","id":"initSize"}],"line":"19"}],"isPrivate":true,"uri":"dart-sdk/lib/io/timer_impl.dart"},{"superclass":{"name":"ByteConversionSinkBase","refId":"dart.convert/ByteConversionSinkBase"},"kind":"class","name":"_WindowsCodePageDecoderSink","id":"_WindowsCodePageDecoderSink","children":[{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"close","id":"close0()","line":"125"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"add","id":"add1()","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"param","name":"bytes","id":"bytes"}],"line":"129"},{"ref":{"name":"ChunkedConversionSink","refId":"dart.convert/ChunkedConversionSink","arguments":[{"name":"String","refId":"dart.core/String"}]},"isFinal":true,"kind":"variable","name":"_sink","id":"_sink","isPrivate":true,"line":"121"},{"kind":"constructor","name":"","id":"1()","children":[{"ref":{"name":"ChunkedConversionSink","refId":"dart.convert/ChunkedConversionSink","arguments":[{"name":"String","refId":"dart.core/String"}]},"initializedField":{"name":"_sink","refId":"dart.io/_WindowsCodePageDecoderSink/_sink"},"kind":"param","name":"_sink","id":"_sink","isPrivate":true}],"line":"123"}],"isPrivate":true,"uri":"dart-sdk/lib/io/string_transformer.dart","line":"117"},{"superclass":{"name":"Converter","refId":"dart.convert/Converter","arguments":[{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},{"name":"String","refId":"dart.core/String"}]},"kind":"class","name":"_WindowsCodePageDecoder","id":"_WindowsCodePageDecoder","children":[{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"method","name":"convert","id":"convert1()","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"param","name":"input","id":"input"}],"line":"99"},{"returnType":{"name":"ByteConversionSink","refId":"dart.convert/ByteConversionSink"},"kind":"method","name":"startChunkedConversion","id":"startChunkedConversion1()","comment":"\nStarts a chunked conversion.\n","children":[{"ref":{"name":"ChunkedConversionSink","refId":"dart.convert/ChunkedConversionSink","arguments":[{"name":"String","refId":"dart.core/String"}]},"kind":"param","name":"sink","id":"sink","line":"107"}],"line":"106"},{"returnType":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"String","refId":"dart.core/String"}]},"kind":"method","name":"bind","id":"bind1()","children":[{"ref":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]}]},"kind":"param","name":"stream","id":"stream"}],"line":"112"},{"returnType":{"name":"String","refId":"dart.core/String"},"isStatic":true,"kind":"method","name":"_decodeBytes","id":"_decodeBytes1()","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"param","name":"bytes","id":"bytes"}],"isPrivate":true,"line":"114"},{"kind":"constructor","name":"","id":"0()","line":"97"}],"isPrivate":true,"uri":"dart-sdk/lib/io/string_transformer.dart","line":"95"},{"superclass":{"name":"StringConversionSinkBase","refId":"dart.convert/StringConversionSinkBase"},"kind":"class","name":"_WindowsCodePageEncoderSink","id":"_WindowsCodePageEncoderSink","children":[{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"close","id":"close0()","line":"73"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"add","id":"add1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"string","id":"string"}],"line":"77"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"addSlice","id":"addSlice4()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"source","id":"source"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"start","id":"start"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"end","id":"end"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"param","name":"isLast","id":"isLast"}],"line":"85"},{"ref":{"name":"ChunkedConversionSink","refId":"dart.convert/ChunkedConversionSink","arguments":[{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]}]},"isFinal":true,"kind":"variable","name":"_sink","id":"_sink","isPrivate":true,"line":"69"},{"kind":"constructor","name":"","id":"1()","children":[{"ref":{"name":"ChunkedConversionSink","refId":"dart.convert/ChunkedConversionSink","arguments":[{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]}]},"initializedField":{"name":"_sink","refId":"dart.io/_WindowsCodePageEncoderSink/_sink"},"kind":"param","name":"_sink","id":"_sink","isPrivate":true}],"line":"71"}],"isPrivate":true,"uri":"dart-sdk/lib/io/string_transformer.dart","line":"65"},{"superclass":{"name":"Converter","refId":"dart.convert/Converter","arguments":[{"name":"String","refId":"dart.core/String"},{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]}]},"kind":"class","name":"_WindowsCodePageEncoder","id":"_WindowsCodePageEncoder","children":[{"returnType":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"method","name":"convert","id":"convert1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"input","id":"input"}],"line":"43"},{"returnType":{"name":"StringConversionSink","refId":"dart.convert/StringConversionSink"},"kind":"method","name":"startChunkedConversion","id":"startChunkedConversion1()","comment":"\nStarts a chunked conversion.\n","children":[{"ref":{"name":"ChunkedConversionSink","refId":"dart.convert/ChunkedConversionSink","arguments":[{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]}]},"kind":"param","name":"sink","id":"sink","line":"55"}],"line":"54"},{"returnType":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]}]},"kind":"method","name":"bind","id":"bind1()","children":[{"ref":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"String","refId":"dart.core/String"}]},"kind":"param","name":"stream","id":"stream"}],"line":"60"},{"returnType":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"isStatic":true,"kind":"method","name":"_encodeString","id":"_encodeString1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"string","id":"string"}],"isPrivate":true,"line":"62"},{"kind":"constructor","name":"","id":"0()","line":"41"}],"isPrivate":true,"uri":"dart-sdk/lib/io/string_transformer.dart","line":"39"},{"superclass":{"name":"Encoding","refId":"dart.convert/Encoding"},"kind":"class","name":"SystemEncoding","id":"SystemEncoding","comment":"\nThe system encoding is the current code page on Windows and UTF-8 on\nLinux and Mac.\n","children":[{"returnType":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"method","name":"encode","id":"encode1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"input","id":"input"}],"line":"19"},{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"method","name":"decode","id":"decode1()","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"param","name":"encoded","id":"encoded"}],"line":"20"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"property","name":"name","id":"name","line":"17"},{"ref":{"name":"Converter","refId":"dart.convert/Converter","arguments":[{"name":"String","refId":"dart.core/String"},{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]}]},"kind":"property","name":"encoder","id":"encoder","line":"22"},{"ref":{"name":"Converter","refId":"dart.convert/Converter","arguments":[{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},{"name":"String","refId":"dart.core/String"}]},"kind":"property","name":"decoder","id":"decoder","line":"30"},{"kind":"constructor","name":"","id":"0()","line":"15"}],"uri":"dart-sdk/lib/io/string_transformer.dart","line":"14"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"kind":"class","name":"_StdIOUtils","id":"_StdIOUtils","children":[{"isStatic":true,"kind":"method","name":"_getStdioOutputStream","id":"_getStdioOutputStream1()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"fd","id":"fd"}],"isPrivate":true,"line":"303"},{"returnType":{"name":"Stdin","refId":"dart.io/Stdin"},"isStatic":true,"kind":"method","name":"_getStdioInputStream","id":"_getStdioInputStream0()","isPrivate":true,"line":"304"},{"returnType":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"method","name":"_socketType","id":"_socketType1()","children":[{"kind":"param","name":"nativeSocket","id":"nativeSocket"}],"isPrivate":true,"line":"305"}],"isPrivate":true,"uri":"dart-sdk/lib/io/stdio.dart","line":"302"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"kind":"class","name":"StdioType","id":"StdioType","comment":"The type of object a standard IO stream is attached to.","children":[{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"method","name":"toString","id":"toString0()","line":"235"},{"ref":{"name":"StdioType","refId":"dart.io/StdioType"},"isStatic":true,"kind":"variable","name":"TERMINAL","id":"TERMINAL","line":"229"},{"ref":{"name":"StdioType","refId":"dart.io/StdioType"},"isStatic":true,"kind":"variable","name":"PIPE","id":"PIPE","line":"230"},{"ref":{"name":"StdioType","refId":"dart.io/StdioType"},"isStatic":true,"kind":"variable","name":"FILE","id":"FILE","line":"231"},{"ref":{"name":"StdioType","refId":"dart.io/StdioType"},"isStatic":true,"kind":"variable","name":"OTHER","id":"OTHER","line":"232"},{"ref":{"name":"String","refId":"dart.core/String"},"isFinal":true,"kind":"variable","name":"name","id":"name","line":"233"},{"kind":"constructor","name":"_","id":"_1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"initializedField":{"name":"name","refId":"dart.io/StdioType/name"},"kind":"param","name":"name","id":"name"}],"isPrivate":true,"line":"234"}],"uri":"dart-sdk/lib/io/stdio.dart","line":"228"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"interfaces":[{"name":"IOSink","refId":"dart.io/IOSink"}],"kind":"class","name":"_StdSink","id":"_StdSink","children":[{"returnType":{"name":"void","refId":"void"},"isSetter":true,"kind":"method","name":"encoding=","id":"encoding=1()","children":[{"ref":{"name":"Encoding","refId":"dart.convert/Encoding"},"kind":"param","name":"encoding","id":"encoding"}],"line":"211"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"write","id":"write1()","children":[{"kind":"param","name":"object","id":"object"}],"line":"214"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"writeln","id":"writeln1()","children":[{"defaultValue":"\"\"","isOptional":true,"kind":"param","name":"object","id":"object"}],"line":"215"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"writeAll","id":"writeAll2()","children":[{"kind":"param","name":"objects","id":"objects"},{"defaultValue":"\"\"","isOptional":true,"kind":"param","name":"sep","id":"sep"}],"line":"216"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"add","id":"add1()","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"param","name":"data","id":"data"}],"line":"217"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"addError","id":"addError2()","children":[{"kind":"param","name":"error","id":"error"},{"ref":{"name":"StackTrace","refId":"dart.core/StackTrace"},"isOptional":true,"kind":"param","name":"stackTrace","id":"stackTrace"}],"line":"218"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"writeCharCode","id":"writeCharCode1()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"charCode","id":"charCode"}],"line":"220"},{"returnType":{"name":"Future","refId":"dart.async/Future"},"kind":"method","name":"addStream","id":"addStream1()","children":[{"ref":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]}]},"kind":"param","name":"stream","id":"stream"}],"line":"221"},{"returnType":{"name":"Future","refId":"dart.async/Future"},"kind":"method","name":"flush","id":"flush0()","line":"222"},{"returnType":{"name":"Future","refId":"dart.async/Future"},"kind":"method","name":"close","id":"close0()","line":"223"},{"ref":{"name":"Encoding","refId":"dart.convert/Encoding"},"kind":"property","name":"encoding","id":"encoding","line":"210"},{"ref":{"name":"Future","refId":"dart.async/Future"},"kind":"property","name":"done","id":"done","line":"224"},{"ref":{"name":"IOSink","refId":"dart.io/IOSink"},"isFinal":true,"kind":"variable","name":"_sink","id":"_sink","isPrivate":true,"line":"206"},{"kind":"constructor","name":"","id":"1()","children":[{"ref":{"name":"IOSink","refId":"dart.io/IOSink"},"initializedField":{"name":"_sink","refId":"dart.io/_StdSink/_sink"},"kind":"param","name":"_sink","id":"_sink","isPrivate":true}],"line":"208"}],"isPrivate":true,"uri":"dart-sdk/lib/io/stdio.dart","line":"205"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"interfaces":[{"name":"IOException","refId":"dart.io/IOException"}],"isThrowable":true,"kind":"class","name":"StdoutException","id":"StdoutException","children":[{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"method","name":"toString","id":"toString0()","line":"199"},{"ref":{"name":"String","refId":"dart.core/String"},"isFinal":true,"kind":"variable","name":"message","id":"message","line":"194"},{"ref":{"name":"OSError","refId":"dart.io/OSError"},"isFinal":true,"kind":"variable","name":"osError","id":"osError","line":"195"},{"kind":"constructor","name":"","id":"2()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"initializedField":{"name":"message","refId":"dart.io/StdoutException/message"},"kind":"param","name":"message","id":"message"},{"ref":{"name":"OSError","refId":"dart.io/OSError"},"isOptional":true,"initializedField":{"name":"osError","refId":"dart.io/StdoutException/osError"},"kind":"param","name":"osError","id":"osError"}],"line":"197"}],"uri":"dart-sdk/lib/io/stdio.dart","line":"193"},{"superclass":{"name":"_StdSink","refId":"dart.io/_StdSink"},"interfaces":[{"name":"IOSink","refId":"dart.io/IOSink"}],"kind":"class","name":"Stdout","id":"Stdout","comment":"\n[Stdout] exposes methods to query the terminal for properties.\n\nUse [hasTerminal] to test if there is a terminal associated to stdout.\n","children":[{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"hasTerminal","id":"hasTerminal","comment":"\nReturns true if there is a terminal attached to stdout.\n","line":"173"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"property","name":"terminalColumns","id":"terminalColumns","comment":"\nGet the number of columns of the terminal.\n\nIf no terminal is attached to stdout, a [StdoutException] is thrown. See\n[hasTerminal] for more info.\n","line":"181"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"property","name":"terminalLines","id":"terminalLines","comment":"\nGet the number of lines of the terminal.\n\nIf no terminal is attached to stdout, a [StdoutException] is thrown. See\n[hasTerminal] for more info.\n","line":"189"},{"kind":"constructor","name":"_","id":"_1()","children":[{"ref":{"name":"IOSink","refId":"dart.io/IOSink"},"kind":"param","name":"sink","id":"sink"}],"isPrivate":true,"line":"168"}],"uri":"dart-sdk/lib/io/stdio.dart","line":"167"},{"superclass":{"name":"_StdStream","refId":"dart.io/_StdStream"},"interfaces":[{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]}]}],"kind":"class","name":"Stdin","id":"Stdin","comment":"\n[Stdin] allows both synchronous and asynchronous reads from the standard\ninput stream.\n\nMixing synchronous and asynchronous reads is undefined.\n","children":[{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"method","name":"readLineSync","id":"readLineSync2()","comment":"\nSynchronously read a line from stdin. This call will block until a full\nline is available. The line will contain the newline character(s).\n\nIf end-of-file is reached, `null` is returned.\n\nIf end-of-file is reached after some data has already been read, that data\nis returned.\n","children":[{"ref":{"name":"Encoding","refId":"dart.convert/Encoding"},"defaultValue":"SYSTEM_ENCODING","isOptional":true,"isNamed":true,"kind":"param","name":"encoding","id":"encoding"},{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"false","isOptional":true,"isNamed":true,"kind":"param","name":"retainNewlines","id":"retainNewlines","line":"51"}],"line":"50"},{"returnType":{"name":"void","refId":"void"},"isSetter":true,"kind":"method","name":"echoMode=","id":"echoMode=1()","comment":"\nEnable or disable echo mode on [stdin].\n\nIf disabled, input from to console will not be echoed.\n\nDefault depends on the parent process, but usually enabled.\n","children":[{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"param","name":"enabled","id":"enabled"}],"line":"135"},{"returnType":{"name":"void","refId":"void"},"isSetter":true,"kind":"method","name":"lineMode=","id":"lineMode=1()","comment":"\nEnable or disable line mode on [stdin].\n\nIf enabled, characters are delayed until a new-line character is entered.\nIf disabled, characters will be available as typed.\n\nDefault depends on the parent process, but usually enabled.\n","children":[{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"param","name":"enabled","id":"enabled"}],"line":"150"},{"returnType":{"name":"int","refId":"dart.core/int"},"kind":"method","name":"readByteSync","id":"readByteSync0()","comment":"\nSynchronously read a byte from stdin. This call will block until a byte is\navailable.\n\nIf at end of file, -1 is returned.\n","line":"158"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"echoMode","id":"echoMode","comment":"\nCheck if echo mode is enabled on [stdin].\n","line":"126"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"lineMode","id":"lineMode","comment":"\nCheck if line mode is enabled on [stdin].\n","line":"140"},{"kind":"constructor","name":"_","id":"_1()","children":[{"ref":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]}]},"kind":"param","name":"stream","id":"stream"}],"isPrivate":true,"line":"39"}],"uri":"dart-sdk/lib/io/stdio.dart","line":"38"},{"superclass":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]}]},"kind":"class","name":"_StdStream","id":"_StdStream","children":[{"returnType":{"name":"StreamSubscription","refId":"dart.async/StreamSubscription","arguments":[{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]}]},"kind":"method","name":"listen","id":"listen4()","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"onData","id":"onData","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"param","name":"event","id":"event","uri":"dart-sdk/lib/io/stdio.dart","line":"19"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]},{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"isNamed":true,"kind":"param","name":"onError","id":"onError","line":"20"},{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"isNamed":true,"kind":"param","name":"onDone","id":"onDone","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","uri":"dart-sdk/lib/core/function.dart","line":"13"}],"line":"21"},{"ref":{"name":"bool","refId":"dart.core/bool"},"isOptional":true,"isNamed":true,"kind":"param","name":"cancelOnError","id":"cancelOnError","line":"22"}],"line":"19"},{"ref":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]}]},"isFinal":true,"kind":"variable","name":"_stream","id":"_stream","isPrivate":true,"line":"15"},{"kind":"constructor","name":"","id":"1()","children":[{"ref":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]}]},"initializedField":{"name":"_stream","refId":"dart.io/_StdStream/_stream"},"kind":"param","name":"_stream","id":"_stream","isPrivate":true}],"line":"17"}],"isPrivate":true,"uri":"dart-sdk/lib/io/stdio.dart","line":"14"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"interfaces":[{"name":"IOException","refId":"dart.io/IOException"}],"isThrowable":true,"kind":"class","name":"SocketException","id":"SocketException","children":[{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"method","name":"toString","id":"toString0()","line":"655"},{"ref":{"name":"String","refId":"dart.core/String"},"isFinal":true,"kind":"variable","name":"message","id":"message","line":"645"},{"ref":{"name":"OSError","refId":"dart.io/OSError"},"isFinal":true,"kind":"variable","name":"osError","id":"osError","line":"646"},{"ref":{"name":"InternetAddress","refId":"dart.io/InternetAddress"},"isFinal":true,"kind":"variable","name":"address","id":"address","line":"647"},{"ref":{"name":"int","refId":"dart.core/int"},"isFinal":true,"kind":"variable","name":"port","id":"port","line":"648"},{"kind":"constructor","name":"","id":"4()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"initializedField":{"name":"message","refId":"dart.io/SocketException/message"},"kind":"param","name":"message","id":"message"},{"ref":{"name":"OSError","refId":"dart.io/OSError"},"isOptional":true,"isNamed":true,"initializedField":{"name":"osError","refId":"dart.io/SocketException/osError"},"kind":"param","name":"osError","id":"osError","line":"651"},{"ref":{"name":"InternetAddress","refId":"dart.io/InternetAddress"},"isOptional":true,"isNamed":true,"initializedField":{"name":"address","refId":"dart.io/SocketException/address"},"kind":"param","name":"address","id":"address","line":"652"},{"ref":{"name":"int","refId":"dart.core/int"},"isOptional":true,"isNamed":true,"initializedField":{"name":"port","refId":"dart.io/SocketException/port"},"kind":"param","name":"port","id":"port","line":"653"}],"line":"650"}],"uri":"dart-sdk/lib/io/socket.dart","line":"644"},{"superclass":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"RawSocketEvent","refId":"dart.io/RawSocketEvent"}]},"isAbstract":true,"kind":"class","name":"RawDatagramSocket","id":"RawDatagramSocket","comment":"\nThe [RawDatagramSocket] is a low-level interface to an UDP socket,\nexposing the raw events signaled by the system. It's a [Stream] of\n[RawSocketEvent]s.\n\nNote that the event [RawSocketEvent.READ_CLOSED] will never be\nreceived as an UDP socket cannot be closed by a remote peer.\n","children":[{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"RawDatagramSocket","refId":"dart.io/RawDatagramSocket"}]},"isStatic":true,"kind":"method","name":"bind","id":"bind3()","comment":"\nCreates a new raw datagram socket binding it to an address and\nport.\n","children":[{"kind":"param","name":"host","id":"host","line":"542"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"port","id":"port","line":"542"},{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"true","isOptional":true,"isNamed":true,"kind":"param","name":"reuseAddress","id":"reuseAddress","line":"542"}],"line":"541"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"close","id":"close0()","comment":"\nClose the datagram socket.\n","line":"557"},{"returnType":{"name":"int","refId":"dart.core/int"},"kind":"method","name":"send","id":"send3()","comment":"\nSend a datagram.\n\nReturns the number of bytes written. This will always be either\nthe size of [buffer] or `0`.\n","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"param","name":"buffer","id":"buffer"},{"ref":{"name":"InternetAddress","refId":"dart.io/InternetAddress"},"kind":"param","name":"address","id":"address"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"port","id":"port"}],"line":"565"},{"returnType":{"name":"Datagram","refId":"dart.io/Datagram"},"kind":"method","name":"receive","id":"receive0()","comment":"\nReceive a datagram. If there are no datagrams available `null` is\nreturned.\n","line":"571"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"joinMulticast","id":"joinMulticast2()","comment":"\nJoin a multicast group.\n\nIf an error occur when trying to join the multicast group an\nexception is thrown.\n","children":[{"ref":{"name":"InternetAddress","refId":"dart.io/InternetAddress"},"kind":"param","name":"group","id":"group"},{"ref":{"name":"NetworkInterface","refId":"dart.io/NetworkInterface"},"isOptional":true,"isNamed":true,"kind":"param","name":"interface","id":"interface"}],"line":"579"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"leaveMulticast","id":"leaveMulticast2()","comment":"\nLeave a multicast group.\n\nIf an error occur when trying to join the multicase group an\nexception is thrown.\n","children":[{"ref":{"name":"InternetAddress","refId":"dart.io/InternetAddress"},"kind":"param","name":"group","id":"group"},{"ref":{"name":"NetworkInterface","refId":"dart.io/NetworkInterface"},"isOptional":true,"isNamed":true,"kind":"param","name":"interface","id":"interface"}],"line":"587"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"property","name":"port","id":"port","comment":"\nReturns the port used by this socket.\n","line":"547"},{"ref":{"name":"InternetAddress","refId":"dart.io/InternetAddress"},"kind":"property","name":"address","id":"address","comment":"\nReturns the address used by this socket.\n","line":"552"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"variable","name":"readEventsEnabled","id":"readEventsEnabled","comment":"\nSet or get, if the [RawDatagramSocket] should listen for\n[RawSocketEvent.READ] events. Default is [true].\n","line":"593"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"variable","name":"writeEventsEnabled","id":"writeEventsEnabled","comment":"\nSet or get, if the [RawDatagramSocket] should listen for\n[RawSocketEvent.WRITE] events. Default is [true].  This is a\none-shot listener, and writeEventsEnabled must be set to true\nagain to receive another write event.\n","line":"601"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"variable","name":"multicastLoopback","id":"multicastLoopback","comment":"\nSet or get, whether multicast traffic is looped back to the host.\n\nBy default multicast loopback is enabled.\n","line":"608"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"multicastHops","id":"multicastHops","comment":"\nSet or get, the maximum network hops for multicast packages\noriginating from this socket.\n\nFor IPv4 this is referred to as TTL (time to live).\n\nBy default this value is 1 causing multicast traffic to stay on\nthe local network.\n","line":"619"},{"ref":{"name":"NetworkInterface","refId":"dart.io/NetworkInterface"},"kind":"variable","name":"multicastInterface","id":"multicastInterface","comment":"\nSet or get, the network interface used for outgoing multicast packages.\n\nA value of `null`indicate that the system chooses the network\ninterface to use.\n\nBy default this value is `null`\n","line":"629"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"variable","name":"broadcastEnabled","id":"broadcastEnabled","comment":"\nSet or get, whether IPv4 broadcast is enabled.\n\nIPv4 broadcast needs to be enabled by the sender for sending IPv4\nbroadcast packages. By default IPv4 broadcast is disabled.\n\nFor IPv6 there is no general broadcast mechanism. Use multicast\ninstead.\n","line":"640"}],"uri":"dart-sdk/lib/io/socket.dart","line":"536"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"kind":"class","name":"Datagram","id":"Datagram","comment":"\nDatagram package. Data send to and received from datagram sockets\ncontains the internet address and port of the destination or source\ntogeter with the data.\n","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"variable","name":"data","id":"data","line":"520"},{"ref":{"name":"InternetAddress","refId":"dart.io/InternetAddress"},"kind":"variable","name":"address","id":"address","line":"521"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"port","id":"port","line":"522"},{"kind":"constructor","name":"","id":"3()","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"initializedField":{"name":"data","refId":"dart.io/Datagram/data"},"kind":"param","name":"data","id":"data"},{"ref":{"name":"InternetAddress","refId":"dart.io/InternetAddress"},"initializedField":{"name":"address","refId":"dart.io/Datagram/address"},"kind":"param","name":"address","id":"address"},{"ref":{"name":"int","refId":"dart.core/int"},"initializedField":{"name":"port","refId":"dart.io/Datagram/port"},"kind":"param","name":"port","id":"port"}],"line":"524"}],"uri":"dart-sdk/lib/io/socket.dart","line":"519"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"interfaces":[{"name":"IOSink","refId":"dart.io/IOSink"},{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]}]}],"kind":"class","name":"Socket","id":"Socket","comment":"\nA high-level class for communicating over a TCP socket.\n\nThe [Socket] exposes both a [Stream] and a [IOSink] interface, making it\nideal for using together with other [Stream]s.\n","children":[{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"Socket","refId":"dart.io/Socket"}]},"isStatic":true,"kind":"method","name":"connect","id":"connect2()","comment":"\nCreats a new socket connection to the host and port and returns a [Future]\nthat will complete with either a [Socket] once connected or an error\nif the host-lookup or connection failed.\n\n[host] can either be a [String] or an [InternetAddress]. If [host] is a\n[String], [connect] will perform a [InternetAddress.lookup] and use\nthe first value in the list.\n","children":[{"kind":"param","name":"host","id":"host"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"port","id":"port"}],"line":"472"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"destroy","id":"destroy0()","comment":"\nDestroy the socket in both directions. Calling [destroy] will make the\nsend a close event on the stream and will no longer react on data being\npiped to it.\n\nCall [close](inherited from [IOSink]) to only close the [Socket]\nfor sending data.\n","line":"482"},{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"method","name":"setOption","id":"setOption2()","comment":"\nUse [setOption] to customize the [RawSocket]. See [SocketOption] for\navailable options.\n\nReturns [true] if the option was set successfully, false otherwise.\n","children":[{"ref":{"name":"SocketOption","refId":"dart.io/SocketOption"},"kind":"param","name":"option","id":"option"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"param","name":"enabled","id":"enabled"}],"line":"490"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"property","name":"port","id":"port","comment":"\nReturns the port used by this socket.\n","line":"495"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"property","name":"remotePort","id":"remotePort","comment":"\nReturns the remote port connected to by this socket.\n","line":"500"},{"ref":{"name":"InternetAddress","refId":"dart.io/InternetAddress"},"kind":"property","name":"address","id":"address","comment":"\nReturns the [InternetAddress] used to connect this socket.\n","line":"505"},{"ref":{"name":"InternetAddress","refId":"dart.io/InternetAddress"},"kind":"property","name":"remoteAddress","id":"remoteAddress","comment":"\nReturns the remote [InternetAddress] connected to by this socket.\n","line":"510"}],"uri":"dart-sdk/lib/io/socket.dart","line":"462"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"interfaces":[{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"RawSocketEvent","refId":"dart.io/RawSocketEvent"}]}],"kind":"class","name":"RawSocket","id":"RawSocket","comment":"\nThe [RawSocket] is a low-level interface to a socket, exposing the raw\nevents signaled by the system. It's a [Stream] of [RawSocketEvent]s.\n","children":[{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"RawSocket","refId":"dart.io/RawSocket"}]},"isStatic":true,"kind":"method","name":"connect","id":"connect2()","comment":"\nCreates a new socket connection to the host and port and returns a [Future]\nthat will complete with either a [RawSocket] once connected or an error\nif the host-lookup or connection failed.\n\n[host] can either be a [String] or an [InternetAddress]. If [host] is a\n[String], [connect] will perform a [InternetAddress.lookup] and use\nthe first value in the list.\n","children":[{"kind":"param","name":"host","id":"host"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"port","id":"port"}],"line":"367"},{"returnType":{"name":"int","refId":"dart.core/int"},"kind":"method","name":"available","id":"available0()","comment":"\nReturns the number of received and non-read bytes in the socket that\ncan be read.\n","line":"373"},{"returnType":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"method","name":"read","id":"read1()","comment":"\nRead up to [len] bytes from the socket. This function is\nnon-blocking and will only return data if data is available. The\nnumber of bytes read can be less then [len] if fewer bytes are\navailable for immediate reading. If no data is available [null]\nis returned.\n","children":[{"ref":{"name":"int","refId":"dart.core/int"},"isOptional":true,"kind":"param","name":"len","id":"len"}],"line":"382"},{"returnType":{"name":"int","refId":"dart.core/int"},"kind":"method","name":"write","id":"write3()","comment":"\nWrites up to [count] bytes of the buffer from [offset] buffer offset to\nthe socket. The number of successfully written bytes is returned. This\nfunction is non-blocking and will only write data if buffer space is\navailable in the socket.\n\nThe default value for [offset] is 0, and the default value for [count] is\n[:buffer.length - offset:].\n","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"param","name":"buffer","id":"buffer"},{"ref":{"name":"int","refId":"dart.core/int"},"isOptional":true,"kind":"param","name":"offset","id":"offset"},{"ref":{"name":"int","refId":"dart.core/int"},"isOptional":true,"kind":"param","name":"count","id":"count"}],"line":"393"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"RawSocket","refId":"dart.io/RawSocket"}]},"kind":"method","name":"close","id":"close0()","comment":"\nCloses the socket. Returns a Future that completes with [this] when the\nunderlying connection is completely destroyed.\n\nCalling [close] will never throw an exception\nand calling it several times is supported. Calling [close] can result in\na [RawSocketEvent.READ_CLOSED] event.\n","line":"423"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"shutdown","id":"shutdown1()","comment":"\nShutdown the socket in the [direction]. Calling [shutdown] will never\nthrow an exception and calling it several times is supported. Calling\nshutdown with either [SocketDirection.BOTH] or [SocketDirection.RECEIVE]\ncan result in a [RawSocketEvent.READ_CLOSED] event.\n","children":[{"ref":{"name":"SocketDirection","refId":"dart.io/SocketDirection"},"kind":"param","name":"direction","id":"direction"}],"line":"431"},{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"method","name":"setOption","id":"setOption2()","comment":"\nUse [setOption] to customize the [RawSocket]. See [SocketOption] for\navailable options.\n\nReturns [true] if the option was set successfully, false otherwise.\n","children":[{"ref":{"name":"SocketOption","refId":"dart.io/SocketOption"},"kind":"param","name":"option","id":"option"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"param","name":"enabled","id":"enabled"}],"line":"453"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"property","name":"port","id":"port","comment":"\nReturns the port used by this socket.\n","line":"398"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"property","name":"remotePort","id":"remotePort","comment":"\nReturns the remote port connected to by this socket.\n","line":"403"},{"ref":{"name":"InternetAddress","refId":"dart.io/InternetAddress"},"kind":"property","name":"address","id":"address","comment":"\nReturns the [InternetAddress] used to connect this socket.\n","line":"408"},{"ref":{"name":"InternetAddress","refId":"dart.io/InternetAddress"},"kind":"property","name":"remoteAddress","id":"remoteAddress","comment":"\nReturns the remote [InternetAddress] connected to by this socket.\n","line":"413"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"variable","name":"readEventsEnabled","id":"readEventsEnabled","comment":"\nSet or get, if the [RawSocket] should listen for [RawSocketEvent.READ]\nevents. Default is [true].\n","line":"437"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"variable","name":"writeEventsEnabled","id":"writeEventsEnabled","comment":"\nSet or get, if the [RawSocket] should listen for [RawSocketEvent.WRITE]\nevents. Default is [true].\nThis is a one-shot listener, and writeEventsEnabled must be set\nto true again to receive another write event.\n","line":"445"}],"uri":"dart-sdk/lib/io/socket.dart","line":"357"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"kind":"class","name":"RawSocketEvent","id":"RawSocketEvent","comment":"\nEvents for the [RawSocket].\n","children":[{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"method","name":"toString","id":"toString0()","line":"345"},{"ref":{"name":"RawSocketEvent","refId":"dart.io/RawSocketEvent"},"isStatic":true,"kind":"variable","name":"READ","id":"READ","line":"339"},{"ref":{"name":"RawSocketEvent","refId":"dart.io/RawSocketEvent"},"isStatic":true,"kind":"variable","name":"WRITE","id":"WRITE","line":"340"},{"ref":{"name":"RawSocketEvent","refId":"dart.io/RawSocketEvent"},"isStatic":true,"kind":"variable","name":"READ_CLOSED","id":"READ_CLOSED","line":"341"},{"ref":{"name":"RawSocketEvent","refId":"dart.io/RawSocketEvent"},"isStatic":true,"kind":"variable","name":"CLOSED","id":"CLOSED","line":"342"},{"ref":{"name":"int","refId":"dart.core/int"},"isFinal":true,"kind":"variable","name":"_value","id":"_value","isPrivate":true,"line":"344"},{"kind":"constructor","name":"_","id":"_1()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"initializedField":{"name":"_value","refId":"dart.io/RawSocketEvent/_value"},"kind":"param","name":"_value","id":"_value","isPrivate":true}],"isPrivate":true,"line":"343"}],"uri":"dart-sdk/lib/io/socket.dart","line":"338"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"kind":"class","name":"SocketOption","id":"SocketOption","comment":"\nThe [SocketOption] is used as a parameter to [Socket.setOption] and\n[RawSocket.setOption] to set customize the behaviour of the underlying\nsocket.\n","children":[{"ref":{"name":"SocketOption","refId":"dart.io/SocketOption"},"isStatic":true,"kind":"variable","name":"TCP_NODELAY","id":"TCP_NODELAY","comment":"\nEnable or disable no-delay on the socket. If TCP_NODELAY is enabled, the\nsocket will not buffer data internally, but instead write each data chunk\nas an invidual TCP packet.\n\nTCP_NODELAY is disabled by default.\n","line":"324"},{"ref":{"name":"SocketOption","refId":"dart.io/SocketOption"},"isStatic":true,"kind":"variable","name":"_IP_MULTICAST_LOOP","id":"_IP_MULTICAST_LOOP","isPrivate":true,"line":"326"},{"ref":{"name":"SocketOption","refId":"dart.io/SocketOption"},"isStatic":true,"kind":"variable","name":"_IP_MULTICAST_HOPS","id":"_IP_MULTICAST_HOPS","isPrivate":true,"line":"327"},{"ref":{"name":"SocketOption","refId":"dart.io/SocketOption"},"isStatic":true,"kind":"variable","name":"_IP_MULTICAST_IF","id":"_IP_MULTICAST_IF","isPrivate":true,"line":"328"},{"ref":{"name":"SocketOption","refId":"dart.io/SocketOption"},"isStatic":true,"kind":"variable","name":"_IP_BROADCAST","id":"_IP_BROADCAST","isPrivate":true,"line":"329"},{"isFinal":true,"kind":"variable","name":"_value","id":"_value","isPrivate":true,"line":"332"},{"kind":"constructor","name":"_","id":"_1()","children":[{"initializedField":{"name":"_value","refId":"dart.io/SocketOption/_value"},"kind":"param","name":"_value","id":"_value","isPrivate":true}],"isPrivate":true,"line":"331"}],"uri":"dart-sdk/lib/io/socket.dart","line":"316"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"kind":"class","name":"SocketDirection","id":"SocketDirection","comment":"\nThe [SocketDirection] is used as a parameter to [Socket.close] and\n[RawSocket.close] to close a socket in the specified direction(s).\n","children":[{"ref":{"name":"SocketDirection","refId":"dart.io/SocketDirection"},"isStatic":true,"kind":"variable","name":"RECEIVE","id":"RECEIVE","line":"304"},{"ref":{"name":"SocketDirection","refId":"dart.io/SocketDirection"},"isStatic":true,"kind":"variable","name":"SEND","id":"SEND","line":"305"},{"ref":{"name":"SocketDirection","refId":"dart.io/SocketDirection"},"isStatic":true,"kind":"variable","name":"BOTH","id":"BOTH","line":"306"},{"isFinal":true,"kind":"variable","name":"_value","id":"_value","isPrivate":true,"line":"308"},{"kind":"constructor","name":"_","id":"_1()","children":[{"initializedField":{"name":"_value","refId":"dart.io/SocketDirection/_value"},"kind":"param","name":"_value","id":"_value","isPrivate":true}],"isPrivate":true,"line":"307"}],"uri":"dart-sdk/lib/io/socket.dart","line":"303"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"interfaces":[{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"Socket","refId":"dart.io/Socket"}]}],"kind":"class","name":"ServerSocket","id":"ServerSocket","comment":"\nA [ServerSocket] represents a listening socket, and provides a\nstream of [Socket] objects, one for each connection made to the\nlistening socket.\n\nSee [Socket] for more info.\n","children":[{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"ServerSocket","refId":"dart.io/ServerSocket"}]},"isStatic":true,"kind":"method","name":"bind","id":"bind4()","comment":"\nReturns a future for a [:ServerSocket:]. When the future\ncompletes the server socket is bound to the given [address] and\n[port] and has started listening on it.\n\nThe [address] can either be a [String] or an\n[InternetAddress]. If [address] is a [String], [bind] will\nperform a [InternetAddress.lookup] and use the first value in the\nlist. To listen on the loopback adapter, which will allow only\nincoming connections from the local host, use the value\n[InternetAddress.LOOPBACK_IP_V4] or\n[InternetAddress.LOOPBACK_IP_V6]. To allow for incoming\nconnection from the network use either one of the values\n[InternetAddress.ANY_IP_V4] or [InternetAddress.ANY_IP_V6] to\nbind to all interfaces or the IP address of a specific interface.\n\nIf an IP version 6 (IPv6) address is used, both IP version 6\n(IPv6) and version 4 (IPv4) connections will be accepted. To\nrestrict this to version 6 (IPv6) only, use [v6Only] to set\nversion 6 only.\n\nIf [port] has the value [:0:] an ephemeral port will be chosen by\nthe system. The actual port used can be retrieved using the\n[port] getter.\n\nThe optional argument [backlog] can be used to specify the listen\nbacklog for the underlying OS listen setup. If [backlog] has the\nvalue of [:0:] (the default) a reasonable value will be chosen by\nthe system.\n","children":[{"kind":"param","name":"address","id":"address"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"port","id":"port","line":"278"},{"ref":{"name":"int","refId":"dart.core/int"},"defaultValue":"0","isOptional":true,"isNamed":true,"kind":"param","name":"backlog","id":"backlog","line":"279"},{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"false","isOptional":true,"isNamed":true,"kind":"param","name":"v6Only","id":"v6Only","line":"280"}],"line":"277"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"ServerSocket","refId":"dart.io/ServerSocket"}]},"kind":"method","name":"close","id":"close0()","comment":"\nCloses the socket. The returned future completes when the socket\nis fully closed and is no longer bound.\n","line":"296"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"property","name":"port","id":"port","comment":"\nReturns the port used by this socket.\n","line":"285"},{"ref":{"name":"InternetAddress","refId":"dart.io/InternetAddress"},"kind":"property","name":"address","id":"address","comment":"\nReturns the address used by this socket.\n","line":"290"}],"uri":"dart-sdk/lib/io/socket.dart","line":"246"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"interfaces":[{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"RawSocket","refId":"dart.io/RawSocket"}]}],"kind":"class","name":"RawServerSocket","id":"RawServerSocket","comment":"\nA [RawServerSocket] represents a listening socket, and provides a\nstream of low-level [RawSocket] objects, one for each connection\nmade to the listening socket.\n\nSee [RawSocket] for more info.\n","children":[{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"RawServerSocket","refId":"dart.io/RawServerSocket"}]},"isStatic":true,"kind":"method","name":"bind","id":"bind4()","comment":"\nReturns a future for a [:RawServerSocket:]. When the future\ncompletes the server socket is bound to the given [address] and\n[port] and has started listening on it.\n\nThe [address] can either be a [String] or an\n[InternetAddress]. If [address] is a [String], [bind] will\nperform a [InternetAddress.lookup] and use the first value in the\nlist. To listen on the loopback adapter, which will allow only\nincoming connections from the local host, use the value\n[InternetAddress.LOOPBACK_IP_V4] or\n[InternetAddress.LOOPBACK_IP_V6]. To allow for incoming\nconnection from the network use either one of the values\n[InternetAddress.ANY_IP_V4] or [InternetAddress.ANY_IP_V6] to\nbind to all interfaces or the IP address of a specific interface.\n\nIf an IP version 6 (IPv6) address is used, both IP version 6\n(IPv6) and version 4 (IPv4) connections will be accepted. To\nrestrict this to version 6 (IPv6) only, use [v6Only] to set\nversion 6 only.\n\nIf [port] has the value [:0:] an ephemeral port will\nbe chosen by the system. The actual port used can be retrieved\nusing the [:port:] getter.\n\nThe optional argument [backlog] can be used to specify the listen\nbacklog for the underlying OS listen setup. If [backlog] has the\nvalue of [:0:] (the default) a reasonable value will be chosen by\nthe system.\n","children":[{"kind":"param","name":"address","id":"address"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"port","id":"port","line":"217"},{"ref":{"name":"int","refId":"dart.core/int"},"defaultValue":"0","isOptional":true,"isNamed":true,"kind":"param","name":"backlog","id":"backlog","line":"218"},{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"false","isOptional":true,"isNamed":true,"kind":"param","name":"v6Only","id":"v6Only","line":"219"}],"line":"216"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"RawServerSocket","refId":"dart.io/RawServerSocket"}]},"kind":"method","name":"close","id":"close0()","comment":"\nCloses the socket. The returned future completes when the socket\nis fully closed and is no longer bound.\n","line":"235"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"property","name":"port","id":"port","comment":"\nReturns the port used by this socket.\n","line":"224"},{"ref":{"name":"InternetAddress","refId":"dart.io/InternetAddress"},"kind":"property","name":"address","id":"address","comment":"\nReturns the address used by this socket.\n","line":"229"}],"uri":"dart-sdk/lib/io/socket.dart","line":"185"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"kind":"class","name":"NetworkInterface","id":"NetworkInterface","comment":"\nA [NetworkInterface] represent an active network interface on the current\nsystem. It contains a list of [InternetAddress]s, that's bound to the\ninterface.\n","children":[{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"List","refId":"dart.core/List","arguments":[{"name":"NetworkInterface","refId":"dart.io/NetworkInterface"}]}]},"isStatic":true,"kind":"method","name":"list","id":"list3()","comment":"\nQuery the system for [NetworkInterface]s.\n\nIf [includeLoopback] is `true`, the returned list will include the\nloopback device. Default is `false`.\n\nIf [includeLinkLocal] is `true`, the list of addresses of the returned\n[NetworkInterface]s, may include link local addresses. Default is `false`.\n\nIf [type] is either [InternetAddressType.IP_V4] or\n[InternetAddressType.IP_V6] it will only lookup addresses of the\nspecified type. Default is [InternetAddressType.ANY].\n","children":[{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"false","isOptional":true,"isNamed":true,"kind":"param","name":"includeLoopback","id":"includeLoopback","line":"172"},{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"false","isOptional":true,"isNamed":true,"kind":"param","name":"includeLinkLocal","id":"includeLinkLocal","line":"173"},{"ref":{"name":"InternetAddressType","refId":"dart.io/InternetAddressType"},"defaultValue":"InternetAddressType.ANY","isOptional":true,"isNamed":true,"kind":"param","name":"type","id":"type","line":"174"}],"line":"171"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"property","name":"name","id":"name","comment":"\nGet the name of the [NetworkInterface].\n","line":"145"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"property","name":"index","id":"index","comment":"\nGet the index of the [NetworkInterface].\n","line":"150"},{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"InternetAddress","refId":"dart.io/InternetAddress"}]},"kind":"property","name":"addresses","id":"addresses","comment":"\nGet a list of [InternetAddress]s currently bound to this\n[NetworkInterface].\n","line":"156"}],"uri":"dart-sdk/lib/io/socket.dart","line":"141"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"kind":"class","name":"InternetAddress","id":"InternetAddress","comment":"\nThe [InternetAddress] is an object reflecting either a remote or a\nlocal address. When combined with a port number, this represents a\nendpoint that a socket can connect to or a listening socket can\nbind to.\n","children":[{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"InternetAddress","refId":"dart.io/InternetAddress"}]},"kind":"method","name":"reverse","id":"reverse0()","comment":"\nPerform a reverse dns lookup on the [address], creating a new\n[InternetAddress] where the host field set to the result.\n","line":"120"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"List","refId":"dart.core/List","arguments":[{"name":"InternetAddress","refId":"dart.io/InternetAddress"}]}]},"isStatic":true,"kind":"method","name":"lookup","id":"lookup2()","comment":"\nLookup a host, returning a Future of a list of\n[InternetAddress]s. If [type] is [InternetAddressType.ANY], it\nwill lookup both IP version 4 (IPv4) and IP version 6 (IPv6)\naddresses. If [type] is either [InternetAddressType.IP_V4] or\n[InternetAddressType.IP_V6] it will only lookup addresses of the\nspecified type. The order of the list can, and most likely will,\nchange over time.\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"host","id":"host","line":"132"},{"ref":{"name":"InternetAddressType","refId":"dart.io/InternetAddressType"},"defaultValue":"InternetAddressType.ANY","isOptional":true,"isNamed":true,"kind":"param","name":"type","id":"type","line":"132"}],"line":"131"},{"ref":{"name":"InternetAddress","refId":"dart.io/InternetAddress"},"isStatic":true,"kind":"property","name":"LOOPBACK_IP_V4","id":"LOOPBACK_IP_V4","comment":"\nIP version 4 loopback address. Use this address when listening on\nor connecting to the loopback adapter using IP version 4 (IPv4).\n","line":"54"},{"ref":{"name":"InternetAddress","refId":"dart.io/InternetAddress"},"isStatic":true,"kind":"property","name":"LOOPBACK_IP_V6","id":"LOOPBACK_IP_V6","comment":"\nIP version 6 loopback address. Use this address when listening on\nor connecting to the loopback adapter using IP version 6 (IPv6).\n","line":"60"},{"ref":{"name":"InternetAddress","refId":"dart.io/InternetAddress"},"isStatic":true,"kind":"property","name":"ANY_IP_V4","id":"ANY_IP_V4","comment":"\nIP version 4 any address. Use this address when listening on\nall adapters IP addresses using IP version 4 (IPv4).\n","line":"66"},{"ref":{"name":"InternetAddress","refId":"dart.io/InternetAddress"},"isStatic":true,"kind":"property","name":"ANY_IP_V6","id":"ANY_IP_V6","comment":"\nIP version 6 any address. Use this address when listening on\nall adapters IP addresses using IP version 6 (IPv6).\n","line":"72"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"property","name":"address","id":"address","comment":"\nThe numeric address of the host. For IPv4 addresses this is using\nthe dotted-decimal notation. For IPv6 it is using the\nhexadecimal representation.\n","line":"84"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"property","name":"host","id":"host","comment":"\nThe host used to lookup the address. If there is no host\nassociated with the address this returns the numeric address.\n","line":"90"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"isLoopback","id":"isLoopback","comment":"\nReturns true if the [InternetAddress] is a loopback address.\n","line":"95"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"isLinkLocal","id":"isLinkLocal","comment":"\nReturns true if the [InternetAddress]s scope is a link-local.\n","line":"100"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"isMulticast","id":"isMulticast","comment":"\nReturns true if the [InternetAddress]s scope is multicast.\n","line":"105"},{"ref":{"name":"InternetAddressType","refId":"dart.io/InternetAddressType"},"kind":"variable","name":"type","id":"type","comment":"\nThe [type] of the [InternetAddress] specified what IP protocol.\n","line":"77"},{"returnType":{"name":"InternetAddress","refId":"dart.io/InternetAddress"},"kind":"constructor","name":"","id":"1()","comment":"\nCreates a new [InternetAddress] from a numeric address.\n\nIf the address in [address] is not a numeric IPv4\n(dotted-decimal notation) or IPv6 (hexadecimal representation).\naddress [ArgumentError] is thrown.\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"address","id":"address"}],"line":"114"}],"uri":"dart-sdk/lib/io/socket.dart","line":"49"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"kind":"class","name":"InternetAddressType","id":"InternetAddressType","comment":"\n[InternetAddressType] is the type an [InternetAddress]. Currently,\nIP version 4 (IPv4) and IP version 6 (IPv6) are supported.\n","children":[{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"method","name":"toString","id":"toString0()","line":"39"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"property","name":"name","id":"name","comment":"\nGet the name of the type, e.g. \"IP_V4\" or \"IP_V6\".\n","line":"30"},{"ref":{"name":"InternetAddressType","refId":"dart.io/InternetAddressType"},"isStatic":true,"kind":"variable","name":"IP_V4","id":"IP_V4","line":"13"},{"ref":{"name":"InternetAddressType","refId":"dart.io/InternetAddressType"},"isStatic":true,"kind":"variable","name":"IP_V6","id":"IP_V6","line":"14"},{"ref":{"name":"InternetAddressType","refId":"dart.io/InternetAddressType"},"isStatic":true,"kind":"variable","name":"ANY","id":"ANY","line":"15"},{"ref":{"name":"int","refId":"dart.core/int"},"isFinal":true,"kind":"variable","name":"_value","id":"_value","isPrivate":true,"line":"17"},{"kind":"constructor","name":"_","id":"_1()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"initializedField":{"name":"_value","refId":"dart.io/InternetAddressType/_value"},"kind":"param","name":"_value","id":"_value","isPrivate":true}],"isPrivate":true,"line":"19"},{"returnType":{"name":"InternetAddressType","refId":"dart.io/InternetAddressType"},"kind":"constructor","name":"_from","id":"_from1()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"value","id":"value"}],"isPrivate":true,"line":"21"}],"uri":"dart-sdk/lib/io/socket.dart","line":"12"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"interfaces":[{"name":"IOException","refId":"dart.io/IOException"}],"isThrowable":true,"kind":"class","name":"ProcessException","id":"ProcessException","children":[{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"method","name":"toString","id":"toString0()","line":"376"},{"ref":{"name":"String","refId":"dart.core/String"},"isFinal":true,"kind":"variable","name":"executable","id":"executable","comment":"\nContains the executable provided for the process.\n","line":"385"},{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"String","refId":"dart.core/String"}]},"isFinal":true,"kind":"variable","name":"arguments","id":"arguments","comment":"\nContains the arguments provided for the process.\n","line":"390"},{"ref":{"name":"String","refId":"dart.core/String"},"isFinal":true,"kind":"variable","name":"message","id":"message","comment":"\nContains the system message for the process exception if any.\n","line":"395"},{"ref":{"name":"int","refId":"dart.core/int"},"isFinal":true,"kind":"variable","name":"errorCode","id":"errorCode","comment":"\nContains the OS error code for the process exception if any.\n","line":"400"},{"kind":"constructor","name":"","id":"4()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"initializedField":{"name":"executable","refId":"dart.io/ProcessException/executable"},"kind":"param","name":"executable","id":"executable"},{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"String","refId":"dart.core/String"}]},"initializedField":{"name":"arguments","refId":"dart.io/ProcessException/arguments"},"kind":"param","name":"arguments","id":"arguments","line":"373"},{"ref":{"name":"String","refId":"dart.core/String"},"defaultValue":"\"\"","isOptional":true,"initializedField":{"name":"message","refId":"dart.io/ProcessException/message"},"kind":"param","name":"message","id":"message","line":"374"},{"ref":{"name":"int","refId":"dart.core/int"},"defaultValue":"0","isOptional":true,"initializedField":{"name":"errorCode","refId":"dart.io/ProcessException/errorCode"},"kind":"param","name":"errorCode","id":"errorCode","line":"375"}],"line":"372"}],"uri":"dart-sdk/lib/io/process.dart","line":"371"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"interfaces":[{"name":"IOException","refId":"dart.io/IOException"}],"isThrowable":true,"kind":"class","name":"SignalException","id":"SignalException","children":[{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"method","name":"toString","id":"toString0()","line":"361"},{"ref":{"name":"String","refId":"dart.core/String"},"isFinal":true,"kind":"variable","name":"message","id":"message","line":"356"},{"isFinal":true,"kind":"variable","name":"osError","id":"osError","line":"357"},{"kind":"constructor","name":"","id":"2()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"initializedField":{"name":"message","refId":"dart.io/SignalException/message"},"kind":"param","name":"message","id":"message"},{"defaultValue":"null","isOptional":true,"initializedField":{"name":"osError","refId":"dart.io/SignalException/osError"},"kind":"param","name":"osError","id":"osError"}],"line":"359"}],"uri":"dart-sdk/lib/io/process.dart","line":"355"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"kind":"class","name":"ProcessSignal","id":"ProcessSignal","comment":"\nOn Posix systems, [ProcessSignal] is used to send a specific signal\nto a child process, see [:Process.kill:].\n","children":[{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"method","name":"toString","id":"toString0()","line":"349"},{"returnType":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"ProcessSignal","refId":"dart.io/ProcessSignal"}]},"kind":"method","name":"watch","id":"watch0()","line":"351"},{"ref":{"name":"ProcessSignal","refId":"dart.io/ProcessSignal"},"isStatic":true,"kind":"variable","name":"SIGHUP","id":"SIGHUP","line":"314"},{"ref":{"name":"ProcessSignal","refId":"dart.io/ProcessSignal"},"isStatic":true,"kind":"variable","name":"SIGINT","id":"SIGINT","line":"315"},{"ref":{"name":"ProcessSignal","refId":"dart.io/ProcessSignal"},"isStatic":true,"kind":"variable","name":"SIGQUIT","id":"SIGQUIT","line":"316"},{"ref":{"name":"ProcessSignal","refId":"dart.io/ProcessSignal"},"isStatic":true,"kind":"variable","name":"SIGILL","id":"SIGILL","line":"317"},{"ref":{"name":"ProcessSignal","refId":"dart.io/ProcessSignal"},"isStatic":true,"kind":"variable","name":"SIGTRAP","id":"SIGTRAP","line":"318"},{"ref":{"name":"ProcessSignal","refId":"dart.io/ProcessSignal"},"isStatic":true,"kind":"variable","name":"SIGABRT","id":"SIGABRT","line":"319"},{"ref":{"name":"ProcessSignal","refId":"dart.io/ProcessSignal"},"isStatic":true,"kind":"variable","name":"SIGBUS","id":"SIGBUS","line":"320"},{"ref":{"name":"ProcessSignal","refId":"dart.io/ProcessSignal"},"isStatic":true,"kind":"variable","name":"SIGFPE","id":"SIGFPE","line":"321"},{"ref":{"name":"ProcessSignal","refId":"dart.io/ProcessSignal"},"isStatic":true,"kind":"variable","name":"SIGKILL","id":"SIGKILL","line":"322"},{"ref":{"name":"ProcessSignal","refId":"dart.io/ProcessSignal"},"isStatic":true,"kind":"variable","name":"SIGUSR1","id":"SIGUSR1","line":"323"},{"ref":{"name":"ProcessSignal","refId":"dart.io/ProcessSignal"},"isStatic":true,"kind":"variable","name":"SIGSEGV","id":"SIGSEGV","line":"324"},{"ref":{"name":"ProcessSignal","refId":"dart.io/ProcessSignal"},"isStatic":true,"kind":"variable","name":"SIGUSR2","id":"SIGUSR2","line":"325"},{"ref":{"name":"ProcessSignal","refId":"dart.io/ProcessSignal"},"isStatic":true,"kind":"variable","name":"SIGPIPE","id":"SIGPIPE","line":"326"},{"ref":{"name":"ProcessSignal","refId":"dart.io/ProcessSignal"},"isStatic":true,"kind":"variable","name":"SIGALRM","id":"SIGALRM","line":"327"},{"ref":{"name":"ProcessSignal","refId":"dart.io/ProcessSignal"},"isStatic":true,"kind":"variable","name":"SIGTERM","id":"SIGTERM","line":"328"},{"ref":{"name":"ProcessSignal","refId":"dart.io/ProcessSignal"},"isStatic":true,"kind":"variable","name":"SIGCHLD","id":"SIGCHLD","line":"329"},{"ref":{"name":"ProcessSignal","refId":"dart.io/ProcessSignal"},"isStatic":true,"kind":"variable","name":"SIGCONT","id":"SIGCONT","line":"330"},{"ref":{"name":"ProcessSignal","refId":"dart.io/ProcessSignal"},"isStatic":true,"kind":"variable","name":"SIGSTOP","id":"SIGSTOP","line":"331"},{"ref":{"name":"ProcessSignal","refId":"dart.io/ProcessSignal"},"isStatic":true,"kind":"variable","name":"SIGTSTP","id":"SIGTSTP","line":"332"},{"ref":{"name":"ProcessSignal","refId":"dart.io/ProcessSignal"},"isStatic":true,"kind":"variable","name":"SIGTTIN","id":"SIGTTIN","line":"333"},{"ref":{"name":"ProcessSignal","refId":"dart.io/ProcessSignal"},"isStatic":true,"kind":"variable","name":"SIGTTOU","id":"SIGTTOU","line":"334"},{"ref":{"name":"ProcessSignal","refId":"dart.io/ProcessSignal"},"isStatic":true,"kind":"variable","name":"SIGURG","id":"SIGURG","line":"335"},{"ref":{"name":"ProcessSignal","refId":"dart.io/ProcessSignal"},"isStatic":true,"kind":"variable","name":"SIGXCPU","id":"SIGXCPU","line":"336"},{"ref":{"name":"ProcessSignal","refId":"dart.io/ProcessSignal"},"isStatic":true,"kind":"variable","name":"SIGXFSZ","id":"SIGXFSZ","line":"337"},{"ref":{"name":"ProcessSignal","refId":"dart.io/ProcessSignal"},"isStatic":true,"kind":"variable","name":"SIGVTALRM","id":"SIGVTALRM","line":"338"},{"ref":{"name":"ProcessSignal","refId":"dart.io/ProcessSignal"},"isStatic":true,"kind":"variable","name":"SIGPROF","id":"SIGPROF","line":"339"},{"ref":{"name":"ProcessSignal","refId":"dart.io/ProcessSignal"},"isStatic":true,"kind":"variable","name":"SIGWINCH","id":"SIGWINCH","line":"340"},{"ref":{"name":"ProcessSignal","refId":"dart.io/ProcessSignal"},"isStatic":true,"kind":"variable","name":"SIGPOLL","id":"SIGPOLL","line":"341"},{"ref":{"name":"ProcessSignal","refId":"dart.io/ProcessSignal"},"isStatic":true,"kind":"variable","name":"SIGSYS","id":"SIGSYS","line":"342"},{"ref":{"name":"int","refId":"dart.core/int"},"isFinal":true,"kind":"variable","name":"_signalNumber","id":"_signalNumber","isPrivate":true,"line":"344"},{"ref":{"name":"String","refId":"dart.core/String"},"isFinal":true,"kind":"variable","name":"_name","id":"_name","isPrivate":true,"line":"345"},{"kind":"constructor","name":"_","id":"_2()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"initializedField":{"name":"_signalNumber","refId":"dart.io/ProcessSignal/_signalNumber"},"kind":"param","name":"_signalNumber","id":"_signalNumber","isPrivate":true},{"ref":{"name":"String","refId":"dart.core/String"},"initializedField":{"name":"_name","refId":"dart.io/ProcessSignal/_name"},"kind":"param","name":"_name","id":"_name","isPrivate":true}],"isPrivate":true,"line":"347"}],"uri":"dart-sdk/lib/io/process.dart","line":"313"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"kind":"class","name":"ProcessResult","id":"ProcessResult","comment":"\n[ProcessResult] represents the result of running a non-interactive\nprocess started with [:Process.run:].\n","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"property","name":"exitCode","id":"exitCode","comment":"\nExit code for the process.\n\nSee [Process.exitCode] for more information in the exit code\nvalue.\n","line":"284"},{"kind":"property","name":"stdout","id":"stdout","comment":"\nStandard output from the process. The value used for the\n`stdoutEncoding` argument to `Process.run` determins the type. If\n`null` was used this value is of type `List<int> otherwise it is\nof type `String`.\n","line":"292"},{"kind":"property","name":"stderr","id":"stderr","comment":"\nStandard error from the process. The value used for the\n`stderrEncoding` argument to `Process.run` determins the type. If\n`null` was used this value is of type `List<int>\notherwise it is of type `String`.\n","line":"300"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"property","name":"pid","id":"pid","comment":"\nProcess id from the process.\n","line":"305"}],"uri":"dart-sdk/lib/io/process.dart","line":"277"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"kind":"class","name":"Process","id":"Process","comment":"\n[Process] is used to start new processes using the static\n[start] and [run] methods.\n","children":[{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"Process","refId":"dart.io/Process"}]},"isStatic":true,"kind":"method","name":"start","id":"start6()","comment":"\nStarts a process running the [executable] with the specified\n[arguments]. Returns a [:Future<Process>:] that completes with a\nProcess instance when the process has been successfully\nstarted. That [Process] object can be used to interact with the\nprocess. If the process cannot be started the returned [Future]\ncompletes with an exception.\n\nUse [workingDirectory] to set the working directory for the process. Note\nthat the change of directory occurs before executing the process on some\nplatforms, which may have impact when using relative paths for the\nexecutable and the arguments.\n\nUse [environment] to set the environment variables for the process. If not\nset the environment of the parent process is inherited. Currently, only\nUS-ASCII environment variables are supported and errors are likely to occur\nif an environment variable with code-points outside the US-ASCII range is\npassed in.\n\nIf [includeParentEnvironment] is `true`, the process's environment will\ninclude the parent process's environment, with [environment] taking\nprecedence. Default is `true`.\n\nIf [runInShell] is true, the process will be spawned through a system\nshell. On Linux and Mac OS, [:/bin/sh:] is used, while\n[:%WINDIR%\\system32\\cmd.exe:] is used on Windows.\n\nUsers must read all data coming on the [stdout] and [stderr]\nstreams of processes started with [:Process.start:]. If the user\ndoes not read all data on the streams the underlying system\nresources will not be freed since there is still pending data.\n\nThe following code uses `Process.start` to grep for `main` in the\nfile `test.dart` on Linux.\n\n    Process.start('grep', ['-i', 'main', 'test.dart']).then((process) {\n      stdout.addStream(process.stdout);\n      stderr.addStream(process.stderr);\n    });\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"executable","id":"executable","line":"133"},{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"String","refId":"dart.core/String"}]},"kind":"param","name":"arguments","id":"arguments","line":"134"},{"ref":{"name":"String","refId":"dart.core/String"},"isOptional":true,"isNamed":true,"kind":"param","name":"workingDirectory","id":"workingDirectory","line":"135"},{"ref":{"name":"Map","refId":"dart.core/Map","arguments":[{"name":"String","refId":"dart.core/String"},{"name":"String","refId":"dart.core/String"}]},"isOptional":true,"isNamed":true,"kind":"param","name":"environment","id":"environment","line":"136"},{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"true","isOptional":true,"isNamed":true,"kind":"param","name":"includeParentEnvironment","id":"includeParentEnvironment","line":"137"},{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"false","isOptional":true,"isNamed":true,"kind":"param","name":"runInShell","id":"runInShell","line":"138"}],"line":"132"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"ProcessResult","refId":"dart.io/ProcessResult"}]},"isStatic":true,"kind":"method","name":"run","id":"run8()","comment":"\nStarts a process and runs it non-interactively to completion. The\nprocess run is [executable] with the specified [arguments].\n\nUse [workingDirectory] to set the working directory for the process. Note\nthat the change of directory occurs before executing the process on some\nplatforms, which may have impact when using relative paths for the\nexecutable and the arguments.\n\nUse [environment] to set the environment variables for the process. If not\nset the environment of the parent process is inherited. Currently, only\nUS-ASCII environment variables are supported and errors are likely to occur\nif an environment variable with code-points outside the US-ASCII range is\npassed in.\n\nIf [includeParentEnvironment] is `true`, the process's environment will\ninclude the parent process's environment, with [environment] taking\nprecedence. Default is `true`.\n\nIf [runInShell] is true, the process will be spawned through a system\nshell. On Linux and Mac OS, `/bin/sh` is used, while\n`%WINDIR%\\system32\\cmd.exe` is used on Windows.\n\nThe encoding used for decoding `stdout` and `stderr` into text is\ncontrolled through [stdoutEncoding] and [stderrEncoding]. The\ndefault encoding is [SYSTEM_ENCODING]. If `null` is used no\ndecoding will happen and the [ProcessResult] will hold binary\ndata.\n\nReturns a `Future<ProcessResult>` that completes with the\nresult of running the process, i.e., exit code, standard out and\nstandard in.\n\nThe following code uses `Process.run` to grep for `main` in the\nfile `test.dart` on Linux.\n\n    Process.run('grep', ['-i', 'main', 'test.dart']).then((result) {\n      stdout.write(result.stdout);\n      stderr.write(result.stderr);\n    });\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"executable","id":"executable","line":"182"},{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"String","refId":"dart.core/String"}]},"kind":"param","name":"arguments","id":"arguments","line":"183"},{"ref":{"name":"String","refId":"dart.core/String"},"isOptional":true,"isNamed":true,"kind":"param","name":"workingDirectory","id":"workingDirectory","line":"184"},{"ref":{"name":"Map","refId":"dart.core/Map","arguments":[{"name":"String","refId":"dart.core/String"},{"name":"String","refId":"dart.core/String"}]},"isOptional":true,"isNamed":true,"kind":"param","name":"environment","id":"environment","line":"185"},{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"true","isOptional":true,"isNamed":true,"kind":"param","name":"includeParentEnvironment","id":"includeParentEnvironment","line":"186"},{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"false","isOptional":true,"isNamed":true,"kind":"param","name":"runInShell","id":"runInShell","line":"187"},{"ref":{"name":"Encoding","refId":"dart.convert/Encoding"},"defaultValue":"SYSTEM_ENCODING","isOptional":true,"isNamed":true,"kind":"param","name":"stdoutEncoding","id":"stdoutEncoding","line":"188"},{"ref":{"name":"Encoding","refId":"dart.convert/Encoding"},"defaultValue":"SYSTEM_ENCODING","isOptional":true,"isNamed":true,"kind":"param","name":"stderrEncoding","id":"stderrEncoding","line":"189"}],"line":"181"},{"returnType":{"name":"ProcessResult","refId":"dart.io/ProcessResult"},"isStatic":true,"kind":"method","name":"runSync","id":"runSync8()","comment":"\nStarts a process and runs it to completion. This is a synchronous\ncall and will block until the child process terminates.\n\nThe arguments are the same as for `Process.run`.\n\nReturns a `ProcessResult` with the result of running the process,\ni.e., exit code, standard out and standard in.\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"executable","id":"executable","line":"202"},{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"String","refId":"dart.core/String"}]},"kind":"param","name":"arguments","id":"arguments","line":"203"},{"ref":{"name":"String","refId":"dart.core/String"},"isOptional":true,"isNamed":true,"kind":"param","name":"workingDirectory","id":"workingDirectory","line":"204"},{"ref":{"name":"Map","refId":"dart.core/Map","arguments":[{"name":"String","refId":"dart.core/String"},{"name":"String","refId":"dart.core/String"}]},"isOptional":true,"isNamed":true,"kind":"param","name":"environment","id":"environment","line":"205"},{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"true","isOptional":true,"isNamed":true,"kind":"param","name":"includeParentEnvironment","id":"includeParentEnvironment","line":"206"},{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"false","isOptional":true,"isNamed":true,"kind":"param","name":"runInShell","id":"runInShell","line":"207"},{"ref":{"name":"Encoding","refId":"dart.convert/Encoding"},"defaultValue":"SYSTEM_ENCODING","isOptional":true,"isNamed":true,"kind":"param","name":"stdoutEncoding","id":"stdoutEncoding","line":"208"},{"ref":{"name":"Encoding","refId":"dart.convert/Encoding"},"defaultValue":"SYSTEM_ENCODING","isOptional":true,"isNamed":true,"kind":"param","name":"stderrEncoding","id":"stderrEncoding","line":"209"}],"line":"201"},{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"method","name":"kill","id":"kill1()","comment":"\nOn Windows, [kill] kills the process, ignoring the [signal]\nflag. On Posix systems, [kill] sends [signal] to the\nprocess. Depending on the signal giving, it'll have different\nmeanings. When the process terminates as a result of calling\n[kill] [onExit] is called.\n\nReturns [:true:] if the process is successfully killed (the\nsignal is successfully sent). Returns [:false:] if the process\ncould not be killed (the signal could not be sent). Usually,\na [:false:] return value from kill means that the process is\nalready dead.\n","children":[{"ref":{"name":"ProcessSignal","refId":"dart.io/ProcessSignal"},"defaultValue":"ProcessSignal.SIGTERM","isOptional":true,"kind":"param","name":"signal","id":"signal"}],"line":"269"},{"ref":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]}]},"kind":"property","name":"stdout","id":"stdout","comment":"\nReturns the standard output stream of the process as a [:Stream:].\n","line":"214"},{"ref":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]}]},"kind":"property","name":"stderr","id":"stderr","comment":"\nReturns the standard error stream of the process as a [:Stream:].\n","line":"219"},{"ref":{"name":"IOSink","refId":"dart.io/IOSink"},"kind":"property","name":"stdin","id":"stdin","comment":"\nReturns the standard input stream of the process as an [IOSink].\n","line":"224"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"property","name":"pid","id":"pid","comment":"\nReturns the process id of the process.\n","line":"229"},{"ref":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"variable","name":"exitCode","id":"exitCode","comment":"\nReturns a [:Future:] which completes with the exit code of the process\nwhen the process completes.\n\nThe handling of exit codes is platform specific.\n\nOn Linux and Mac a normal exit code will be a positive value in\nthe range [0..255]. If the process was terminated due to a signal\nthe exit code will be a negative value in the range [-255..0[,\nwhere the absolute value of the exit code is the signal\nnumber. For example, if a process crashes due to a segmentation\nviolation the exit code will be -11, as the signal SIGSEGV has the\nnumber 11.\n\nOn Windows a process can report any 32-bit value as an exit\ncode. When returning the exit code this exit code is turned into\na signed value. Some special values are used to report\ntermination due to some system event. E.g. if a process crashes\ndue to an access violation the 32-bit exit code is `0xc0000005`,\nwhich will be returned as the negative number `-1073741819`. To\nget the original 32-bit value use `(0x100000000 + exitCode) &\n0xffffffff`.\n","line":"254"}],"uri":"dart-sdk/lib/io/process.dart","line":"91"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"kind":"class","name":"_ProcessUtils","id":"_ProcessUtils","children":[{"returnType":{"name":"void","refId":"void"},"isStatic":true,"kind":"method","name":"_exit","id":"_exit1()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"status","id":"status"}],"isPrivate":true,"line":"10"},{"returnType":{"name":"void","refId":"void"},"isStatic":true,"kind":"method","name":"_setExitCode","id":"_setExitCode1()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"status","id":"status"}],"isPrivate":true,"line":"11"},{"returnType":{"name":"void","refId":"void"},"isStatic":true,"kind":"method","name":"_sleep","id":"_sleep1()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"millis","id":"millis"}],"isPrivate":true,"line":"12"},{"returnType":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"method","name":"_pid","id":"_pid1()","children":[{"ref":{"name":"Process","refId":"dart.io/Process"},"kind":"param","name":"process","id":"process"}],"isPrivate":true,"line":"13"},{"returnType":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"ProcessSignal","refId":"dart.io/ProcessSignal"}]},"isStatic":true,"kind":"method","name":"_watchSignal","id":"_watchSignal1()","children":[{"ref":{"name":"ProcessSignal","refId":"dart.io/ProcessSignal"},"kind":"param","name":"signal","id":"signal"}],"isPrivate":true,"line":"14"}],"isPrivate":true,"uri":"dart-sdk/lib/io/process.dart","line":"9"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"interfaces":[{"name":"Map","refId":"dart.core/Map","arguments":[{"name":"String","refId":"dart.core/String"},{"name":"V","refId":"dart.io/_CaseInsensitiveStringMap/V"}]}],"kind":"class","name":"_CaseInsensitiveStringMap","id":"_CaseInsensitiveStringMap","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"method","name":"containsKey","id":"containsKey1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"key","id":"key"}],"line":"88"},{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"method","name":"containsValue","id":"containsValue1()","children":[{"ref":{"name":"Object","refId":"dart.core/Object"},"kind":"param","name":"value","id":"value"}],"line":"89"},{"returnType":{"name":"V","refId":"dart.io/_CaseInsensitiveStringMap/V"},"isOperator":true,"kind":"method","name":"[]","id":"[]1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"key","id":"key"}],"line":"90"},{"returnType":{"name":"void","refId":"void"},"isOperator":true,"kind":"method","name":"[]=","id":"[]=2()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"key","id":"key"},{"ref":{"name":"V","refId":"dart.io/_CaseInsensitiveStringMap/V"},"kind":"param","name":"value","id":"value"}],"line":"91"},{"returnType":{"name":"V","refId":"dart.io/_CaseInsensitiveStringMap/V"},"kind":"method","name":"putIfAbsent","id":"putIfAbsent2()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"key","id":"key"},{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"ifAbsent","id":"ifAbsent","children":[{"returnType":{"name":"V","refId":"dart.io/_CaseInsensitiveStringMap/V"},"kind":"functiontype","name":"Function","id":"Function","uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"94"},{"kind":"method","name":"addAll","id":"addAll1()","children":[{"ref":{"name":"Map","refId":"dart.core/Map"},"kind":"param","name":"other","id":"other"}],"line":"97"},{"returnType":{"name":"V","refId":"dart.io/_CaseInsensitiveStringMap/V"},"kind":"method","name":"remove","id":"remove1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"key","id":"key"}],"line":"100"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"clear","id":"clear0()","line":"101"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"forEach","id":"forEach1()","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"f","id":"f","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"key","id":"key","uri":"dart-sdk/lib/io/platform_impl.dart","line":"102"},{"ref":{"name":"V","refId":"dart.io/_CaseInsensitiveStringMap/V"},"kind":"param","name":"value","id":"value","uri":"dart-sdk/lib/io/platform_impl.dart","line":"102"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"102"},{"ref":{"name":"Iterable","refId":"dart.core/Iterable","arguments":[{"name":"String","refId":"dart.core/String"}]},"kind":"property","name":"keys","id":"keys","line":"103"},{"ref":{"name":"Iterable","refId":"dart.core/Iterable","arguments":[{"name":"V","refId":"dart.io/_CaseInsensitiveStringMap/V"}]},"kind":"property","name":"values","id":"values","line":"104"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"property","name":"length","id":"length","line":"105"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"isEmpty","id":"isEmpty","line":"106"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"isNotEmpty","id":"isNotEmpty","line":"107"},{"ref":{"name":"Map","refId":"dart.core/Map","arguments":[{"name":"String","refId":"dart.core/String"},{"name":"V","refId":"dart.io/_CaseInsensitiveStringMap/V"}]},"kind":"variable","name":"_map","id":"_map","isPrivate":true,"line":"109"},{"kind":"constructor","name":"","id":"0()","line":"79"},{"kind":"constructor","name":"from","id":"from1()","children":[{"ref":{"name":"Map","refId":"dart.core/Map","arguments":[{"name":"String","refId":"dart.core/String"},{"name":"V","refId":"dart.io/_CaseInsensitiveStringMap/V"}]},"kind":"param","name":"other","id":"other"}],"line":"81"},{"kind":"typeparam","name":"V","id":"V"}],"isPrivate":true,"uri":"dart-sdk/lib/io/platform_impl.dart","line":"78"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"kind":"class","name":"_Platform","id":"_Platform","children":[{"returnType":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"method","name":"_numberOfProcessors","id":"_numberOfProcessors0()","isPrivate":true,"line":"8"},{"returnType":{"name":"String","refId":"dart.core/String"},"isStatic":true,"kind":"method","name":"_pathSeparator","id":"_pathSeparator0()","isPrivate":true,"line":"9"},{"returnType":{"name":"String","refId":"dart.core/String"},"isStatic":true,"kind":"method","name":"_operatingSystem","id":"_operatingSystem0()","isPrivate":true,"line":"10"},{"isStatic":true,"kind":"method","name":"_localHostname","id":"_localHostname0()","isPrivate":true,"line":"11"},{"isStatic":true,"kind":"method","name":"_executable","id":"_executable0()","isPrivate":true,"line":"12"},{"isStatic":true,"kind":"method","name":"_environment","id":"_environment0()","isPrivate":true,"line":"13"},{"returnType":{"name":"List","refId":"dart.core/List","arguments":[{"name":"String","refId":"dart.core/String"}]},"isStatic":true,"kind":"method","name":"_executableArguments","id":"_executableArguments0()","isPrivate":true,"line":"14"},{"returnType":{"name":"String","refId":"dart.core/String"},"isStatic":true,"kind":"method","name":"_packageRoot","id":"_packageRoot0()","isPrivate":true,"line":"15"},{"returnType":{"name":"String","refId":"dart.core/String"},"isStatic":true,"kind":"method","name":"_version","id":"_version0()","isPrivate":true,"line":"16"},{"returnType":{"name":"Uri","refId":"dart.core/Uri"},"isStatic":true,"kind":"method","name":"_script","id":"_script0()","isPrivate":true,"line":"22"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"property","name":"numberOfProcessors","id":"numberOfProcessors","line":"18"},{"ref":{"name":"String","refId":"dart.core/String"},"isStatic":true,"kind":"property","name":"pathSeparator","id":"pathSeparator","line":"19"},{"ref":{"name":"String","refId":"dart.core/String"},"isStatic":true,"kind":"property","name":"operatingSystem","id":"operatingSystem","line":"20"},{"ref":{"name":"String","refId":"dart.core/String"},"isStatic":true,"kind":"property","name":"localHostname","id":"localHostname","line":"34"},{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"String","refId":"dart.core/String"}]},"isStatic":true,"kind":"property","name":"executableArguments","id":"executableArguments","line":"45"},{"ref":{"name":"Map","refId":"dart.core/Map","arguments":[{"name":"String","refId":"dart.core/String"},{"name":"String","refId":"dart.core/String"}]},"isStatic":true,"kind":"property","name":"environment","id":"environment","line":"47"},{"ref":{"name":"String","refId":"dart.core/String"},"isStatic":true,"kind":"property","name":"version","id":"version","line":"73"},{"ref":{"name":"Uri","refId":"dart.core/Uri"},"isStatic":true,"kind":"variable","name":"script","id":"script","line":"21"},{"ref":{"name":"String","refId":"dart.core/String"},"isStatic":true,"kind":"variable","name":"executable","id":"executable","line":"43"},{"ref":{"name":"String","refId":"dart.core/String"},"isStatic":true,"kind":"variable","name":"packageRoot","id":"packageRoot","line":"44"}],"isPrivate":true,"uri":"dart-sdk/lib/io/platform_impl.dart","line":"7"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"kind":"class","name":"Platform","id":"Platform","comment":"\nThe [Platform] class exposes details of the machine and operating\nsystem.\n","children":[{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"property","name":"numberOfProcessors","id":"numberOfProcessors","comment":"\nGet the number of processors of the machine.\n","line":"24"},{"ref":{"name":"String","refId":"dart.core/String"},"isStatic":true,"kind":"property","name":"pathSeparator","id":"pathSeparator","comment":"\nGet the path separator used by the operating system to separate\ncomponents in file paths.\n","line":"30"},{"ref":{"name":"String","refId":"dart.core/String"},"isStatic":true,"kind":"property","name":"operatingSystem","id":"operatingSystem","comment":"\nGet a string (`linux`, `macos`, `windows` or `android`)\nrepresenting the operating system.\n","line":"36"},{"ref":{"name":"String","refId":"dart.core/String"},"isStatic":true,"kind":"property","name":"localHostname","id":"localHostname","comment":"\nGet the local hostname for the system.\n","line":"41"},{"ref":{"name":"bool","refId":"dart.core/bool"},"isStatic":true,"kind":"property","name":"isLinux","id":"isLinux","comment":"\nReturns true if the operating system is Linux.\n","line":"46"},{"ref":{"name":"bool","refId":"dart.core/bool"},"isStatic":true,"kind":"property","name":"isMacOS","id":"isMacOS","comment":"\nReturns true if the operating system is Mac OS.\n","line":"51"},{"ref":{"name":"bool","refId":"dart.core/bool"},"isStatic":true,"kind":"property","name":"isWindows","id":"isWindows","comment":"\nReturns true if the operating system is Windows.\n","line":"56"},{"ref":{"name":"bool","refId":"dart.core/bool"},"isStatic":true,"kind":"property","name":"isAndroid","id":"isAndroid","comment":"\nReturns true if the operating system is Android.\n","line":"61"},{"ref":{"name":"Map","refId":"dart.core/Map","arguments":[{"name":"String","refId":"dart.core/String"},{"name":"String","refId":"dart.core/String"}]},"isStatic":true,"kind":"property","name":"environment","id":"environment","comment":"\nGet the environment for this process.\n\nEnvironment variables on Windows are case-insensitive. The map\nreturned on Windows is therefore case-insensitive and will convert\nall keys to upper case. On other platforms the returned map is\na standard case-sensitive map.\n","line":"71"},{"ref":{"name":"String","refId":"dart.core/String"},"isStatic":true,"kind":"property","name":"executable","id":"executable","comment":"\nReturns the path of the executable used to run the script in this\nisolate.\n\nIf the execution environment does not support [executable] an empty\nstring is returned.\n","line":"80"},{"ref":{"name":"Uri","refId":"dart.core/Uri"},"isStatic":true,"kind":"property","name":"script","id":"script","comment":"\nReturns the absolute URI of the script being run in this\nisolate.\n\nIf the script argument on the command line is relative,\nit is resolved to an absolute URI before fetching the script, and\nthis absolute URI is returned.\n\nURI resolution only does string manipulation on the script path, and this\nmay be different from the file system's path resolution behavior. For\nexample, a symbolic link immediately followed by '..' will not be\nlooked up.\n\nIf the executable environment does not support [script] an empty\n[Uri] is returned.\n","line":"98"},{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"String","refId":"dart.core/String"}]},"isStatic":true,"kind":"property","name":"executableArguments","id":"executableArguments","comment":"\nReturns the flags passed to the executable used to run the script in this\nisolate. These are the command-line flags between the executable name\nand the script name. Each fetch of executableArguments returns a new\nList, containing the flags passed to the executable.\n","line":"106"},{"ref":{"name":"String","refId":"dart.core/String"},"isStatic":true,"kind":"property","name":"packageRoot","id":"packageRoot","comment":"\nReturns the value of the --package-root flag passed to the executable\nused to run the script in this isolate.  This is the directory in which\nDart packages are looked up.\n\nIf there is no --package-root flag, then the empty string is returned.\n","line":"115"},{"ref":{"name":"String","refId":"dart.core/String"},"isStatic":true,"kind":"property","name":"version","id":"version","comment":"\nReturns the version of the current Dart runtime.\n","line":"120"},{"isStatic":true,"isFinal":true,"kind":"variable","name":"_numberOfProcessors","id":"_numberOfProcessors","isPrivate":true,"line":"12"},{"isStatic":true,"isFinal":true,"kind":"variable","name":"_pathSeparator","id":"_pathSeparator","isPrivate":true,"line":"13"},{"isStatic":true,"isFinal":true,"kind":"variable","name":"_operatingSystem","id":"_operatingSystem","isPrivate":true,"line":"14"},{"isStatic":true,"isFinal":true,"kind":"variable","name":"_localHostname","id":"_localHostname","isPrivate":true,"line":"15"},{"isStatic":true,"isFinal":true,"kind":"variable","name":"_version","id":"_version","isPrivate":true,"line":"16"},{"ref":{"name":"String","refId":"dart.core/String"},"isStatic":true,"kind":"variable","name":"_nativeScript","id":"_nativeScript","isPrivate":true,"line":"19"}],"uri":"dart-sdk/lib/io/platform.dart","line":"11"},{"superclass":{"name":"FileSystemEntity","refId":"dart.io/FileSystemEntity"},"interfaces":[{"name":"Link","refId":"dart.io/Link"}],"kind":"class","name":"_Link","id":"_Link","children":[{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"method","name":"toString","id":"toString0()","line":"153"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"bool","refId":"dart.core/bool"}]},"kind":"method","name":"exists","id":"exists0()","line":"155"},{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"method","name":"existsSync","id":"existsSync0()","line":"157"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"FileStat","refId":"dart.io/FileStat"}]},"kind":"method","name":"stat","id":"stat0()","line":"161"},{"returnType":{"name":"FileStat","refId":"dart.io/FileStat"},"kind":"method","name":"statSync","id":"statSync0()","line":"163"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"Link","refId":"dart.io/Link"}]},"kind":"method","name":"create","id":"create2()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"target","id":"target"},{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"false","isOptional":true,"isNamed":true,"kind":"param","name":"recursive","id":"recursive"}],"line":"165"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"createSync","id":"createSync2()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"target","id":"target"},{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"false","isOptional":true,"isNamed":true,"kind":"param","name":"recursive","id":"recursive"}],"line":"182"},{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"method","name":"_makeWindowsLinkTarget","id":"_makeWindowsLinkTarget1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"target","id":"target"}],"isPrivate":true,"line":"194"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"updateSync","id":"updateSync1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"target","id":"target"}],"line":"208"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"Link","refId":"dart.io/Link"}]},"kind":"method","name":"update","id":"update1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"target","id":"target"}],"line":"217"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"Link","refId":"dart.io/Link"}]},"kind":"method","name":"_delete","id":"_delete1()","children":[{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"false","isOptional":true,"isNamed":true,"kind":"param","name":"recursive","id":"recursive"}],"isPrivate":true,"line":"225"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_deleteSync","id":"_deleteSync1()","children":[{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"false","isOptional":true,"isNamed":true,"kind":"param","name":"recursive","id":"recursive"}],"isPrivate":true,"line":"237"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"Link","refId":"dart.io/Link"}]},"kind":"method","name":"rename","id":"rename1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"newPath","id":"newPath"}],"line":"245"},{"returnType":{"name":"Link","refId":"dart.io/Link"},"kind":"method","name":"renameSync","id":"renameSync1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"newPath","id":"newPath"}],"line":"256"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"String","refId":"dart.core/String"}]},"kind":"method","name":"target","id":"target0()","line":"262"},{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"method","name":"targetSync","id":"targetSync0()","line":"272"},{"isStatic":true,"kind":"method","name":"throwIfError","id":"throwIfError3()","children":[{"ref":{"name":"Object","refId":"dart.core/Object"},"kind":"param","name":"result","id":"result"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"msg","id":"msg"},{"ref":{"name":"String","refId":"dart.core/String"},"defaultValue":"\"\"","isOptional":true,"kind":"param","name":"path","id":"path"}],"line":"278"},{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"method","name":"_isErrorResponse","id":"_isErrorResponse1()","children":[{"kind":"param","name":"response","id":"response"}],"isPrivate":true,"line":"284"},{"kind":"method","name":"_exceptionFromResponse","id":"_exceptionFromResponse3()","children":[{"kind":"param","name":"response","id":"response"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"message","id":"message"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"path","id":"path"}],"isPrivate":true,"line":"288"},{"ref":{"name":"Link","refId":"dart.io/Link"},"kind":"property","name":"absolute","id":"absolute","line":"159"},{"ref":{"name":"String","refId":"dart.core/String"},"isFinal":true,"kind":"variable","name":"path","id":"path","line":"144"},{"kind":"constructor","name":"","id":"1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"initializedField":{"name":"path","refId":"dart.io/_Link/path"},"kind":"param","name":"path","id":"path"}],"line":"146"}],"isPrivate":true,"uri":"dart-sdk/lib/io/link.dart","line":"143"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"interfaces":[{"name":"FileSystemEntity","refId":"dart.io/FileSystemEntity"}],"kind":"class","name":"Link","id":"Link","comment":"\n[Link] objects are references to filesystem links.\n\n","children":[{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"Link","refId":"dart.io/Link"}]},"kind":"method","name":"create","id":"create2()","comment":"\nCreates a symbolic link. Returns a [:Future<Link>:] that completes with\nthe link when it has been created. If the link exists,\nthe future will complete with an error.\n\nIf [recursive] is false, the default, the link is created\nonly if all directories in its path exist.\nIf [recursive] is true, all non-existing path\ncomponents are created. The directories in the path of [target] are\nnot affected, unless they are also in [path].\n\nOn the Windows platform, this will only work with directories, and the\ntarget directory must exist. The link will be created as a Junction.\nOnly absolute links will be created, and relative paths to the target\nwill be converted to absolute paths by joining them with the path of the\ndirectory the link is contained in.\n\nOn other platforms, the posix symlink() call is used to make a symbolic\nlink containing the string [target].  If [target] is a relative path,\nit will be interpreted relative to the directory containing the link.\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"target","id":"target"},{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"false","isOptional":true,"isNamed":true,"kind":"param","name":"recursive","id":"recursive"}],"line":"45"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"createSync","id":"createSync2()","comment":"\nSynchronously create the link. Calling [createSync] on an existing link\nwill throw an exception.\n\nIf [recursive] is false, the default, the link is created only if all\ndirectories in its path exist. If [recursive] is true, all\nnon-existing path components are created. The directories in\nthe path of [target] are not affected, unless they are also in [path].\n\nOn the Windows platform, this will only work with directories, and the\ntarget directory must exist. The link will be created as a Junction.\nOnly absolute links will be created, and relative paths to the target\nwill be converted to absolute paths.\n\nOn other platforms, the posix symlink() call is used to make a symbolic\nlink containing the string [target].  If [target] is a relative path,\nit will be interpreted relative to the directory containing the link.\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"target","id":"target"},{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"false","isOptional":true,"isNamed":true,"kind":"param","name":"recursive","id":"recursive"}],"line":"65"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"updateSync","id":"updateSync1()","comment":"\nSynchronously updates the link. Calling [updateSync] on a non-existing link\nwill throw an exception.\n\nOn the Windows platform, this will only work with directories, and the\ntarget directory must exist.\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"target","id":"target"}],"line":"74"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"Link","refId":"dart.io/Link"}]},"kind":"method","name":"update","id":"update1()","comment":"\nUpdates the link. Returns a [:Future<Link>:] that completes with the\nlink when it has been updated.  Calling [update] on a non-existing link\nwill complete its returned future with an exception.\n\nOn the Windows platform, this will only work with directories, and the\ntarget directory must exist.\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"target","id":"target"}],"line":"84"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"String","refId":"dart.core/String"}]},"kind":"method","name":"resolveSymbolicLinks","id":"resolveSymbolicLinks0()","line":"86"},{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"method","name":"resolveSymbolicLinksSync","id":"resolveSymbolicLinksSync0()","line":"88"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"Link","refId":"dart.io/Link"}]},"kind":"method","name":"rename","id":"rename1()","comment":"\nRenames this link. Returns a `Future<Link>` that completes\nwith a [Link] instance for the renamed link.\n\nIf [newPath] identifies an existing link, that link is\nreplaced. If [newPath] identifies an existing file or directory,\nthe operation fails and the future completes with an exception.\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"newPath","id":"newPath"}],"line":"98"},{"returnType":{"name":"Link","refId":"dart.io/Link"},"kind":"method","name":"renameSync","id":"renameSync1()","comment":"\nSynchronously renames this link. Returns a [Link]\ninstance for the renamed link.\n\nIf [newPath] identifies an existing link, that link is\nreplaced. If [newPath] identifies an existing file or directory\nthe operation fails and an exception is thrown.\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"newPath","id":"newPath"}],"line":"108"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"String","refId":"dart.core/String"}]},"kind":"method","name":"target","id":"target0()","comment":"\nGets the target of the link. Returns a future that completes with\nthe path to the target.\n\nIf the returned target is a relative path, it is relative to the\ndirectory containing the link.\n\nIf the link does not exist, or is not a link, the future completes with\na FileSystemException.\n","line":"129"},{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"method","name":"targetSync","id":"targetSync0()","comment":"\nSynchronously gets the target of the link. Returns the path to the target.\n\nIf the returned target is a relative path, it is relative to the\ndirectory containing the link.\n\nIf the link does not exist, or is not a link, throws a FileSystemException.\n","line":"139"},{"ref":{"name":"Link","refId":"dart.io/Link"},"kind":"property","name":"absolute","id":"absolute","comment":"\nReturns a [Link] instance whose path is the absolute path to [this].\n\nThe absolute path is computed by prefixing\na relative path with the current working directory, and returning\nan absolute path unchanged.\n","line":"117"},{"returnType":{"name":"Link","refId":"dart.io/Link"},"kind":"constructor","name":"","id":"1()","comment":"\nCreates a Link object.\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"path","id":"path"}],"line":"15"},{"returnType":{"name":"Link","refId":"dart.io/Link"},"kind":"constructor","name":"fromUri","id":"fromUri1()","comment":"\nCreate a Lint object from a URI.\n\nIf [uri] cannot reference a link this throws [UnsupportedError].\n","children":[{"ref":{"name":"Uri","refId":"dart.core/Uri"},"kind":"param","name":"uri","id":"uri"}],"line":"22"}],"uri":"dart-sdk/lib/io/link.dart","line":"11"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"kind":"class","name":"_IOService","id":"_IOService","children":[{"returnType":{"name":"Future","refId":"dart.async/Future"},"isStatic":true,"kind":"method","name":"dispatch","id":"dispatch2()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"request","id":"request"},{"ref":{"name":"List","refId":"dart.core/List"},"kind":"param","name":"data","id":"data"}],"line":"49"}],"isPrivate":true,"uri":"dart-sdk/lib/io/io_service.dart","line":"48"},{"superclass":{"name":"_StreamSinkImpl","refId":"dart.io/_StreamSinkImpl","arguments":[{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]}]},"interfaces":[{"name":"IOSink","refId":"dart.io/IOSink"}],"kind":"class","name":"_IOSinkImpl","id":"_IOSinkImpl","children":[{"returnType":{"name":"void","refId":"void"},"isSetter":true,"kind":"method","name":"encoding=","id":"encoding=1()","children":[{"ref":{"name":"Encoding","refId":"dart.convert/Encoding"},"kind":"param","name":"value","id":"value"}],"line":"204"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"write","id":"write1()","children":[{"ref":{"name":"Object","refId":"dart.core/Object"},"kind":"param","name":"obj","id":"obj"}],"line":"211"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"writeAll","id":"writeAll2()","children":[{"ref":{"name":"Iterable","refId":"dart.core/Iterable"},"kind":"param","name":"objects","id":"objects"},{"ref":{"name":"String","refId":"dart.core/String"},"defaultValue":"\"\"","isOptional":true,"kind":"param","name":"separator","id":"separator"}],"line":"228"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"writeln","id":"writeln1()","children":[{"ref":{"name":"Object","refId":"dart.core/Object"},"defaultValue":"\"\"","isOptional":true,"kind":"param","name":"obj","id":"obj"}],"line":"244"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"writeCharCode","id":"writeCharCode1()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"charCode","id":"charCode"}],"line":"249"},{"ref":{"name":"Encoding","refId":"dart.convert/Encoding"},"kind":"property","name":"encoding","id":"encoding","line":"202"},{"ref":{"name":"Encoding","refId":"dart.convert/Encoding"},"kind":"variable","name":"_encoding","id":"_encoding","isPrivate":true,"line":"196"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"variable","name":"_encodingMutable","id":"_encodingMutable","isPrivate":true,"line":"197"},{"kind":"constructor","name":"","id":"2()","children":[{"ref":{"name":"StreamConsumer","refId":"dart.async/StreamConsumer","arguments":[{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]}]},"kind":"param","name":"target","id":"target"},{"ref":{"name":"Encoding","refId":"dart.convert/Encoding"},"initializedField":{"name":"_encoding","refId":"dart.io/_IOSinkImpl/_encoding"},"kind":"param","name":"_encoding","id":"_encoding","isPrivate":true}],"line":"199"}],"isPrivate":true,"uri":"dart-sdk/lib/io/io_sink.dart","line":"195"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"interfaces":[{"name":"StreamSink","refId":"dart.async/StreamSink","arguments":[{"name":"T","refId":"dart.io/_StreamSinkImpl/T"}]}],"kind":"class","name":"_StreamSinkImpl","id":"_StreamSinkImpl","children":[{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"add","id":"add1()","children":[{"ref":{"name":"T","refId":"dart.io/_StreamSinkImpl/T"},"kind":"param","name":"data","id":"data"}],"line":"85"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"addError","id":"addError2()","children":[{"kind":"param","name":"error","id":"error"},{"ref":{"name":"StackTrace","refId":"dart.core/StackTrace"},"isOptional":true,"kind":"param","name":"stackTrace","id":"stackTrace"}],"line":"90"},{"returnType":{"name":"Future","refId":"dart.async/Future"},"kind":"method","name":"addStream","id":"addStream1()","children":[{"ref":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"T","refId":"dart.io/_StreamSinkImpl/T"}]},"kind":"param","name":"stream","id":"stream"}],"line":"94"},{"returnType":{"name":"Future","refId":"dart.async/Future"},"kind":"method","name":"flush","id":"flush0()","line":"113"},{"returnType":{"name":"Future","refId":"dart.async/Future"},"kind":"method","name":"close","id":"close0()","line":"120"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_closeTarget","id":"_closeTarget0()","isPrivate":true,"line":"135"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_completeDone","id":"_completeDone2()","children":[{"isOptional":true,"isNamed":true,"kind":"param","name":"value","id":"value"},{"isOptional":true,"isNamed":true,"kind":"param","name":"error","id":"error"}],"isPrivate":true,"line":"143"},{"ref":{"name":"Future","refId":"dart.async/Future"},"kind":"property","name":"done","id":"done","line":"141"},{"ref":{"name":"StreamController","refId":"dart.async/StreamController","arguments":[{"name":"T","refId":"dart.io/_StreamSinkImpl/T"}]},"kind":"property","name":"_controller","id":"_controller","isPrivate":true,"line":"154"},{"ref":{"name":"StreamConsumer","refId":"dart.async/StreamConsumer","arguments":[{"name":"T","refId":"dart.io/_StreamSinkImpl/T"}]},"isFinal":true,"kind":"variable","name":"_target","id":"_target","isPrivate":true,"line":"72"},{"ref":{"name":"Completer","refId":"dart.async/Completer"},"kind":"variable","name":"_doneCompleter","id":"_doneCompleter","isPrivate":true,"line":"73"},{"ref":{"name":"Future","refId":"dart.async/Future"},"kind":"variable","name":"_doneFuture","id":"_doneFuture","isPrivate":true,"line":"74"},{"ref":{"name":"StreamController","refId":"dart.async/StreamController","arguments":[{"name":"T","refId":"dart.io/_StreamSinkImpl/T"}]},"kind":"variable","name":"_controllerInstance","id":"_controllerInstance","isPrivate":true,"line":"75"},{"ref":{"name":"Completer","refId":"dart.async/Completer"},"kind":"variable","name":"_controllerCompleter","id":"_controllerCompleter","isPrivate":true,"line":"76"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"variable","name":"_isClosed","id":"_isClosed","isPrivate":true,"line":"77"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"variable","name":"_isBound","id":"_isBound","isPrivate":true,"line":"78"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"variable","name":"_hasError","id":"_hasError","isPrivate":true,"line":"79"},{"kind":"constructor","name":"","id":"1()","children":[{"ref":{"name":"StreamConsumer","refId":"dart.async/StreamConsumer","arguments":[{"name":"T","refId":"dart.io/_StreamSinkImpl/T"}]},"initializedField":{"name":"_target","refId":"dart.io/_StreamSinkImpl/_target"},"kind":"param","name":"_target","id":"_target","isPrivate":true}],"line":"81"},{"kind":"typeparam","name":"T","id":"T"}],"isPrivate":true,"uri":"dart-sdk/lib/io/io_sink.dart","line":"71"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"interfaces":[{"name":"StringSink","refId":"dart.core/StringSink"},{"name":"StreamSink","refId":"dart.async/StreamSink","arguments":[{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]}]}],"kind":"class","name":"IOSink","id":"IOSink","comment":"\nHelper class to wrap a [StreamConsumer<List<int>>] and provide\nutility functions for writing to the StreamConsumer directly. The\n[IOSink] buffers the input given by all [StringSink] methods and will delay\na [addStream] until the buffer is flushed.\n\nWhen the [IOSink] is bound to a stream (through [addStream]) any call\nto the [IOSink] will throw a [StateError]. When the [addStream] completes,\nthe [IOSink] will again be open for all calls.\n\nIf data is added to the [IOSink] after the sink is closed, the data will be\nignored. Use the [done] future to be notified when the [IOSink] is closed.\n","children":[{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"add","id":"add1()","comment":"\nWrites the bytes uninterpreted to the consumer. While the call is\nsynchronous, the data may be buffered until the underlying resource is\nready. The data should not be modified after a call to [add].\n","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"param","name":"data","id":"data"}],"line":"36"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"addError","id":"addError2()","comment":"\nWrites an error to the consumer.\n","children":[{"kind":"param","name":"error","id":"error"},{"ref":{"name":"StackTrace","refId":"dart.core/StackTrace"},"isOptional":true,"kind":"param","name":"stackTrace","id":"stackTrace"}],"line":"41"},{"returnType":{"name":"Future","refId":"dart.async/Future"},"kind":"method","name":"addStream","id":"addStream1()","comment":"\nAdds all elements of the given [stream] to `this`.\n","children":[{"ref":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]}]},"kind":"param","name":"stream","id":"stream"}],"line":"46"},{"returnType":{"name":"Future","refId":"dart.async/Future"},"kind":"method","name":"flush","id":"flush0()","comment":"\nReturns a [Future] that completes once all buffered data is accepted by the\nto underlying [StreamConsumer].\n\nIt's an error to call this method, while an [addStream] is incomplete.\n\nNOTE: This is not necessarily the same as the data being flushed by the\noperating system.\n","line":"57"},{"returnType":{"name":"Future","refId":"dart.async/Future"},"kind":"method","name":"close","id":"close0()","comment":"\nClose the target.\n","line":"62"},{"ref":{"name":"Future","refId":"dart.async/Future"},"kind":"property","name":"done","id":"done","comment":"\nGet a future that will complete when all synchronous have completed, or an\nerror happened. This future is identical to the future returned from close.\n","line":"68"},{"ref":{"name":"Encoding","refId":"dart.convert/Encoding"},"kind":"variable","name":"encoding","id":"encoding","comment":"\nThe [Encoding] used when writing strings. Depending on the\nunderlying consumer this property might be mutable.\n","line":"29"},{"returnType":{"name":"IOSink","refId":"dart.io/IOSink"},"kind":"constructor","name":"","id":"2()","children":[{"ref":{"name":"StreamConsumer","refId":"dart.async/StreamConsumer","arguments":[{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]}]},"kind":"param","name":"target","id":"target"},{"ref":{"name":"Encoding","refId":"dart.convert/Encoding"},"defaultValue":"UTF8","isOptional":true,"isNamed":true,"kind":"param","name":"encoding","id":"encoding","line":"22"}],"line":"21"}],"uri":"dart-sdk/lib/io/io_sink.dart","line":"20"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"kind":"class","name":"_HttpSessionManager","id":"_HttpSessionManager","children":[{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"method","name":"createSessionId","id":"createSessionId0()","line":"75"},{"returnType":{"name":"_HttpSession","refId":"dart.io/_HttpSession"},"kind":"method","name":"getSession","id":"getSession1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"id","id":"id"}],"line":"81"},{"returnType":{"name":"_HttpSession","refId":"dart.io/_HttpSession"},"kind":"method","name":"createSession","id":"createSession0()","line":"85"},{"returnType":{"name":"void","refId":"void"},"isSetter":true,"kind":"method","name":"sessionTimeout=","id":"sessionTimeout=1()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"timeout","id":"timeout"}],"line":"97"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"close","id":"close0()","line":"103"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_bumpToEnd","id":"_bumpToEnd1()","children":[{"ref":{"name":"_HttpSession","refId":"dart.io/_HttpSession"},"kind":"param","name":"session","id":"session"}],"isPrivate":true,"line":"107"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_addToTimeoutQueue","id":"_addToTimeoutQueue1()","children":[{"ref":{"name":"_HttpSession","refId":"dart.io/_HttpSession"},"kind":"param","name":"session","id":"session"}],"isPrivate":true,"line":"112"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_removeFromTimeoutQueue","id":"_removeFromTimeoutQueue1()","children":[{"ref":{"name":"_HttpSession","refId":"dart.io/_HttpSession"},"kind":"param","name":"session","id":"session"}],"isPrivate":true,"line":"127"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_timerTimeout","id":"_timerTimeout0()","isPrivate":true,"line":"146"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_startTimer","id":"_startTimer0()","isPrivate":true,"line":"156"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_stopTimer","id":"_stopTimer0()","isPrivate":true,"line":"165"},{"ref":{"name":"Map","refId":"dart.core/Map","arguments":[{"name":"String","refId":"dart.core/String"},{"name":"_HttpSession","refId":"dart.io/_HttpSession"}]},"kind":"variable","name":"_sessions","id":"_sessions","isPrivate":true,"line":"172"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"_sessionTimeout","id":"_sessionTimeout","isPrivate":true,"line":"173"},{"ref":{"name":"_HttpSession","refId":"dart.io/_HttpSession"},"kind":"variable","name":"_head","id":"_head","isPrivate":true,"line":"174"},{"ref":{"name":"_HttpSession","refId":"dart.io/_HttpSession"},"kind":"variable","name":"_tail","id":"_tail","isPrivate":true,"line":"175"},{"ref":{"name":"Timer","refId":"dart.async/Timer"},"kind":"variable","name":"_timer","id":"_timer","isPrivate":true,"line":"176"},{"kind":"constructor","name":"","id":"0()","line":"73"}],"isPrivate":true,"uri":"dart-sdk/lib/io/http_session.dart","line":"72"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"interfaces":[{"name":"HttpSession","refId":"dart.io/HttpSession"}],"kind":"class","name":"_HttpSession","id":"_HttpSession","children":[{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"destroy","id":"destroy0()","line":"27"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_markSeen","id":"_markSeen0()","isPrivate":true,"line":"35"},{"returnType":{"name":"void","refId":"void"},"isSetter":true,"kind":"method","name":"onTimeout=","id":"onTimeout=1()","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"callback","id":"callback","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"46"},{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"method","name":"containsValue","id":"containsValue1()","children":[{"kind":"param","name":"value","id":"value"}],"line":"51"},{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"method","name":"containsKey","id":"containsKey1()","children":[{"kind":"param","name":"key","id":"key"}],"line":"52"},{"isOperator":true,"kind":"method","name":"[]","id":"[]1()","children":[{"kind":"param","name":"key","id":"key"}],"line":"53"},{"returnType":{"name":"void","refId":"void"},"isOperator":true,"kind":"method","name":"[]=","id":"[]=2()","children":[{"kind":"param","name":"key","id":"key"},{"kind":"param","name":"value","id":"value"}],"line":"54"},{"kind":"method","name":"putIfAbsent","id":"putIfAbsent2()","children":[{"kind":"param","name":"key","id":"key"},{"kind":"param","name":"ifAbsent","id":"ifAbsent"}],"line":"55"},{"kind":"method","name":"addAll","id":"addAll1()","children":[{"ref":{"name":"Map","refId":"dart.core/Map"},"kind":"param","name":"other","id":"other"}],"line":"56"},{"kind":"method","name":"remove","id":"remove1()","children":[{"kind":"param","name":"key","id":"key"}],"line":"57"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"clear","id":"clear0()","line":"58"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"forEach","id":"forEach1()","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"f","id":"f","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","children":[{"kind":"param","name":"key","id":"key","uri":"dart-sdk/lib/io/http_session.dart","line":"59"},{"kind":"param","name":"value","id":"value","uri":"dart-sdk/lib/io/http_session.dart","line":"59"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"59"},{"ref":{"name":"DateTime","refId":"dart.core/DateTime"},"kind":"property","name":"lastSeen","id":"lastSeen","line":"40"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"isNew","id":"isNew","line":"42"},{"ref":{"name":"Iterable","refId":"dart.core/Iterable"},"kind":"property","name":"keys","id":"keys","line":"60"},{"ref":{"name":"Iterable","refId":"dart.core/Iterable"},"kind":"property","name":"values","id":"values","line":"61"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"property","name":"length","id":"length","line":"62"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"isEmpty","id":"isEmpty","line":"63"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"isNotEmpty","id":"isNotEmpty","line":"64"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"variable","name":"_destroyed","id":"_destroyed","isPrivate":true,"line":"13"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"variable","name":"_isNew","id":"_isNew","isPrivate":true,"line":"14"},{"ref":{"name":"DateTime","refId":"dart.core/DateTime"},"kind":"variable","name":"_lastSeen","id":"_lastSeen","isPrivate":true,"line":"15"},{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"variable","name":"_timeoutCallback","id":"_timeoutCallback","isPrivate":true,"line":"16"},{"ref":{"name":"_HttpSessionManager","refId":"dart.io/_HttpSessionManager"},"kind":"variable","name":"_sessionManager","id":"_sessionManager","isPrivate":true,"line":"17"},{"ref":{"name":"_HttpSession","refId":"dart.io/_HttpSession"},"kind":"variable","name":"_prev","id":"_prev","isPrivate":true,"line":"19"},{"ref":{"name":"_HttpSession","refId":"dart.io/_HttpSession"},"kind":"variable","name":"_next","id":"_next","isPrivate":true,"line":"20"},{"ref":{"name":"Map","refId":"dart.core/Map"},"isFinal":true,"kind":"variable","name":"_data","id":"_data","isPrivate":true,"line":"22"},{"ref":{"name":"String","refId":"dart.core/String"},"isFinal":true,"kind":"variable","name":"id","id":"id","line":"44"},{"kind":"constructor","name":"","id":"2()","children":[{"ref":{"name":"_HttpSessionManager","refId":"dart.io/_HttpSessionManager"},"initializedField":{"name":"_sessionManager","refId":"dart.io/_HttpSession/_sessionManager"},"kind":"param","name":"_sessionManager","id":"_sessionManager","isPrivate":true},{"ref":{"name":"String","refId":"dart.core/String"},"initializedField":{"name":"id","refId":"dart.io/_HttpSession/id"},"kind":"param","name":"id","id":"id"}],"line":"24"}],"isPrivate":true,"uri":"dart-sdk/lib/io/http_session.dart","line":"11"},{"superclass":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"_HttpIncoming","refId":"dart.io/_HttpIncoming"}]},"interfaces":[{"name":"StreamConsumer","refId":"dart.async/StreamConsumer","arguments":[{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]}]}],"kind":"class","name":"_HttpParser","id":"_HttpParser","comment":"\nHTTP parser which parses the data stream given to [consume].\n\nIf an HTTP parser error occours, the parser will signal an error to either\nthe current _HttpIncoming or the _parser itself.\n\nThe connection upgrades (e.g. switching from HTTP/1.1 to the\nWebSocket protocol) is handled in a special way. If connection\nupgrade is specified in the headers, then on the callback to\n[:responseStart:] the [:upgrade:] property on the [:HttpParser:]\nobject will be [:true:] indicating that from now on the protocol is\nnot HTTP anymore and no more callbacks will happen, that is\n[:dataReceived:] and [:dataEnd:] are not called in this case as\nthere is no more HTTP data. After the upgrade the method\n[:readUnparsedData:] can be used to read any remaining bytes in the\nHTTP parser which are part of the protocol the connection is\nupgrading to. These bytes cannot be processed by the HTTP parser\nand should be handled according to whatever protocol is being\nupgraded to.\n","children":[{"returnType":{"name":"StreamSubscription","refId":"dart.async/StreamSubscription","arguments":[{"name":"_HttpIncoming","refId":"dart.io/_HttpIncoming"}]},"kind":"method","name":"listen","id":"listen4()","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"onData","id":"onData","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"_HttpIncoming","refId":"dart.io/_HttpIncoming"},"kind":"param","name":"event","id":"event","uri":"dart-sdk/lib/io/http_parser.dart","line":"222"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]},{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"isNamed":true,"kind":"param","name":"onError","id":"onError","line":"223"},{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"isNamed":true,"kind":"param","name":"onDone","id":"onDone","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","uri":"dart-sdk/lib/core/function.dart","line":"13"}],"line":"224"},{"ref":{"name":"bool","refId":"dart.core/bool"},"isOptional":true,"isNamed":true,"kind":"param","name":"cancelOnError","id":"cancelOnError","line":"225"}],"line":"222"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"_HttpParser","refId":"dart.io/_HttpParser"}]},"kind":"method","name":"addStream","id":"addStream1()","children":[{"ref":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]}]},"kind":"param","name":"stream","id":"stream"}],"line":"232"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"_HttpParser","refId":"dart.io/_HttpParser"}]},"kind":"method","name":"close","id":"close0()","line":"249"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_parse","id":"_parse0()","isPrivate":true,"line":"254"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_doParse","id":"_doParse0()","isPrivate":true,"line":"272"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_onData","id":"_onData1()","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"param","name":"buffer","id":"buffer"}],"isPrivate":true,"line":"717"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_onDone","id":"_onDone0()","isPrivate":true,"line":"725"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_onError","id":"_onError2()","children":[{"kind":"param","name":"e","id":"e"},{"ref":{"name":"StackTrace","refId":"dart.core/StackTrace"},"isOptional":true,"kind":"param","name":"stackTrace","id":"stackTrace"}],"isPrivate":true,"line":"778"},{"returnType":{"name":"void","refId":"void"},"isSetter":true,"kind":"method","name":"responseToMethod=","id":"responseToMethod=1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"method","id":"method"}],"line":"797"},{"returnType":{"name":"_HttpDetachedIncoming","refId":"dart.io/_HttpDetachedIncoming"},"kind":"method","name":"detachIncoming","id":"detachIncoming0()","line":"799"},{"returnType":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"method","name":"readUnparsedData","id":"readUnparsedData0()","line":"804"},{"kind":"method","name":"_reset","id":"_reset0()","isPrivate":true,"line":"812"},{"kind":"method","name":"_releaseBuffer","id":"_releaseBuffer0()","isPrivate":true,"line":"836"},{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"method","name":"_isTokenChar","id":"_isTokenChar1()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"byte","id":"byte"}],"isPrivate":true,"line":"841"},{"returnType":{"name":"List","refId":"dart.core/List","arguments":[{"name":"String","refId":"dart.core/String"}]},"isStatic":true,"kind":"method","name":"_tokenizeFieldValue","id":"_tokenizeFieldValue1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"headerValue","id":"headerValue"}],"isPrivate":true,"line":"845"},{"returnType":{"name":"int","refId":"dart.core/int"},"kind":"method","name":"_toLowerCase","id":"_toLowerCase1()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"byte","id":"byte"}],"isPrivate":true,"line":"862"},{"returnType":{"name":"int","refId":"dart.core/int"},"kind":"method","name":"_expect","id":"_expect2()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"val1","id":"val1"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"val2","id":"val2"}],"isPrivate":true,"line":"869"},{"returnType":{"name":"int","refId":"dart.core/int"},"kind":"method","name":"_expectHexDigit","id":"_expectHexDigit1()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"byte","id":"byte"}],"isPrivate":true,"line":"875"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_createIncoming","id":"_createIncoming1()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"transferLength","id":"transferLength"}],"isPrivate":true,"line":"887"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_closeIncoming","id":"_closeIncoming1()","children":[{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"false","isOptional":true,"kind":"param","name":"closing","id":"closing"}],"isPrivate":true,"line":"926"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_pauseStateChanged","id":"_pauseStateChanged0()","isPrivate":true,"line":"940"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_reportError","id":"_reportError2()","children":[{"kind":"param","name":"error","id":"error"},{"isOptional":true,"kind":"param","name":"stackTrace","id":"stackTrace"}],"isPrivate":true,"line":"952"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"property","name":"version","id":"version","line":"782"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"property","name":"messageType","id":"messageType","line":"792"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"property","name":"transferLength","id":"transferLength","line":"793"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"upgrade","id":"upgrade","line":"794"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"persistentConnection","id":"persistentConnection","line":"795"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"variable","name":"_parserCalled","id":"_parserCalled","isPrivate":true,"line":"960"},{"ref":{"name":"Uint8List","refId":"dart.typed_data/Uint8List"},"kind":"variable","name":"_buffer","id":"_buffer","isPrivate":true,"line":"963"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"_index","id":"_index","isPrivate":true,"line":"964"},{"ref":{"name":"bool","refId":"dart.core/bool"},"isFinal":true,"kind":"variable","name":"_requestParser","id":"_requestParser","isPrivate":true,"line":"966"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"_state","id":"_state","isPrivate":true,"line":"967"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"_httpVersionIndex","id":"_httpVersionIndex","isPrivate":true,"line":"968"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"_messageType","id":"_messageType","isPrivate":true,"line":"969"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"_statusCode","id":"_statusCode","isPrivate":true,"line":"970"},{"ref":{"name":"List","refId":"dart.core/List"},"kind":"variable","name":"_method_or_status_code","id":"_method_or_status_code","isPrivate":true,"line":"971"},{"ref":{"name":"List","refId":"dart.core/List"},"kind":"variable","name":"_uri_or_reason_phrase","id":"_uri_or_reason_phrase","isPrivate":true,"line":"972"},{"ref":{"name":"List","refId":"dart.core/List"},"kind":"variable","name":"_headerField","id":"_headerField","isPrivate":true,"line":"973"},{"ref":{"name":"List","refId":"dart.core/List"},"kind":"variable","name":"_headerValue","id":"_headerValue","isPrivate":true,"line":"974"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"_httpVersion","id":"_httpVersion","isPrivate":true,"line":"976"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"_transferLength","id":"_transferLength","isPrivate":true,"line":"977"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"variable","name":"_persistentConnection","id":"_persistentConnection","isPrivate":true,"line":"978"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"variable","name":"_connectionUpgrade","id":"_connectionUpgrade","isPrivate":true,"line":"979"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"variable","name":"_chunked","id":"_chunked","isPrivate":true,"line":"980"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"variable","name":"_noMessageBody","id":"_noMessageBody","isPrivate":true,"line":"982"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"variable","name":"_responseToMethod","id":"_responseToMethod","isPrivate":true,"line":"983"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"_remainingContent","id":"_remainingContent","isPrivate":true,"line":"984"},{"ref":{"name":"_HttpHeaders","refId":"dart.io/_HttpHeaders"},"kind":"variable","name":"_headers","id":"_headers","isPrivate":true,"line":"986"},{"ref":{"name":"_HttpIncoming","refId":"dart.io/_HttpIncoming"},"kind":"variable","name":"_incoming","id":"_incoming","isPrivate":true,"line":"989"},{"ref":{"name":"StreamSubscription","refId":"dart.async/StreamSubscription"},"kind":"variable","name":"_socketSubscription","id":"_socketSubscription","isPrivate":true,"line":"990"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"variable","name":"_paused","id":"_paused","isPrivate":true,"line":"991"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"variable","name":"_bodyPaused","id":"_bodyPaused","isPrivate":true,"line":"992"},{"ref":{"name":"StreamController","refId":"dart.async/StreamController","arguments":[{"name":"_HttpIncoming","refId":"dart.io/_HttpIncoming"}]},"kind":"variable","name":"_controller","id":"_controller","isPrivate":true,"line":"993"},{"ref":{"name":"StreamController","refId":"dart.async/StreamController","arguments":[{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]}]},"kind":"variable","name":"_bodyController","id":"_bodyController","isPrivate":true,"line":"994"},{"returnType":{"name":"_HttpParser","refId":"dart.io/_HttpParser"},"kind":"constructor","name":"requestParser","id":"requestParser0()","line":"190"},{"returnType":{"name":"_HttpParser","refId":"dart.io/_HttpParser"},"kind":"constructor","name":"responseParser","id":"responseParser0()","line":"194"},{"kind":"constructor","name":"_","id":"_1()","children":[{"ref":{"name":"bool","refId":"dart.core/bool"},"initializedField":{"name":"_requestParser","refId":"dart.io/_HttpParser/_requestParser"},"kind":"param","name":"_requestParser","id":"_requestParser","isPrivate":true}],"isPrivate":true,"line":"198"}],"isPrivate":true,"uri":"dart-sdk/lib/io/http_parser.dart","line":"186"},{"superclass":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]}]},"kind":"class","name":"_HttpDetachedIncoming","id":"_HttpDetachedIncoming","children":[{"returnType":{"name":"StreamSubscription","refId":"dart.async/StreamSubscription","arguments":[{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]}]},"kind":"method","name":"listen","id":"listen4()","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"onData","id":"onData","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"param","name":"event","id":"event","uri":"dart-sdk/lib/io/http_parser.dart","line":"129"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]},{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"isNamed":true,"kind":"param","name":"onError","id":"onError","line":"130"},{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"isNamed":true,"kind":"param","name":"onDone","id":"onDone","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","uri":"dart-sdk/lib/core/function.dart","line":"13"}],"line":"131"},{"ref":{"name":"bool","refId":"dart.core/bool"},"isOptional":true,"isNamed":true,"kind":"param","name":"cancelOnError","id":"cancelOnError","line":"132"}],"line":"129"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"resume","id":"resume0()","line":"140"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"pause","id":"pause0()","line":"156"},{"ref":{"name":"StreamController","refId":"dart.async/StreamController","arguments":[{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]}]},"kind":"variable","name":"controller","id":"controller","line":"100"},{"ref":{"name":"StreamSubscription","refId":"dart.async/StreamSubscription"},"isFinal":true,"kind":"variable","name":"subscription","id":"subscription","line":"101"},{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"variable","name":"bufferedData","id":"bufferedData","line":"103"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"variable","name":"paused","id":"paused","line":"104"},{"ref":{"name":"Completer","refId":"dart.async/Completer"},"kind":"variable","name":"resumeCompleter","id":"resumeCompleter","line":"106"},{"kind":"constructor","name":"","id":"2()","children":[{"ref":{"name":"StreamSubscription","refId":"dart.async/StreamSubscription"},"initializedField":{"name":"subscription","refId":"dart.io/_HttpDetachedIncoming/subscription"},"kind":"param","name":"subscription","id":"subscription"},{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"initializedField":{"name":"bufferedData","refId":"dart.io/_HttpDetachedIncoming/bufferedData"},"kind":"param","name":"bufferedData","id":"bufferedData","line":"109"}],"line":"108"}],"isPrivate":true,"uri":"dart-sdk/lib/io/http_parser.dart","line":"99"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"kind":"class","name":"_MessageType","id":"_MessageType","children":[{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"UNDETERMINED","id":"UNDETERMINED","line":"94"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"REQUEST","id":"REQUEST","line":"95"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"RESPONSE","id":"RESPONSE","line":"96"}],"isPrivate":true,"uri":"dart-sdk/lib/io/http_parser.dart","line":"93"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"kind":"class","name":"_HttpVersion","id":"_HttpVersion","children":[{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"UNDETERMINED","id":"UNDETERMINED","line":"87"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"HTTP10","id":"HTTP10","line":"88"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"HTTP11","id":"HTTP11","line":"89"}],"isPrivate":true,"uri":"dart-sdk/lib/io/http_parser.dart","line":"86"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"kind":"class","name":"_State","id":"_State","children":[{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"START","id":"START","line":"52"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"METHOD_OR_RESPONSE_HTTP_VERSION","id":"METHOD_OR_RESPONSE_HTTP_VERSION","line":"53"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"RESPONSE_HTTP_VERSION","id":"RESPONSE_HTTP_VERSION","line":"54"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"REQUEST_LINE_METHOD","id":"REQUEST_LINE_METHOD","line":"55"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"REQUEST_LINE_URI","id":"REQUEST_LINE_URI","line":"56"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"REQUEST_LINE_HTTP_VERSION","id":"REQUEST_LINE_HTTP_VERSION","line":"57"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"REQUEST_LINE_ENDING","id":"REQUEST_LINE_ENDING","line":"58"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"RESPONSE_LINE_STATUS_CODE","id":"RESPONSE_LINE_STATUS_CODE","line":"59"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"RESPONSE_LINE_REASON_PHRASE","id":"RESPONSE_LINE_REASON_PHRASE","line":"60"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"RESPONSE_LINE_ENDING","id":"RESPONSE_LINE_ENDING","line":"61"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"HEADER_START","id":"HEADER_START","line":"62"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"HEADER_FIELD","id":"HEADER_FIELD","line":"63"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"HEADER_VALUE_START","id":"HEADER_VALUE_START","line":"64"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"HEADER_VALUE","id":"HEADER_VALUE","line":"65"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"HEADER_VALUE_FOLDING_OR_ENDING","id":"HEADER_VALUE_FOLDING_OR_ENDING","line":"66"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"HEADER_VALUE_FOLD_OR_END","id":"HEADER_VALUE_FOLD_OR_END","line":"67"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"HEADER_ENDING","id":"HEADER_ENDING","line":"68"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"CHUNK_SIZE_STARTING_CR","id":"CHUNK_SIZE_STARTING_CR","line":"70"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"CHUNK_SIZE_STARTING_LF","id":"CHUNK_SIZE_STARTING_LF","line":"71"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"CHUNK_SIZE","id":"CHUNK_SIZE","line":"72"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"CHUNK_SIZE_EXTENSION","id":"CHUNK_SIZE_EXTENSION","line":"73"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"CHUNK_SIZE_ENDING","id":"CHUNK_SIZE_ENDING","line":"74"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"CHUNKED_BODY_DONE_CR","id":"CHUNKED_BODY_DONE_CR","line":"75"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"CHUNKED_BODY_DONE_LF","id":"CHUNKED_BODY_DONE_LF","line":"76"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"BODY","id":"BODY","line":"77"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"CLOSED","id":"CLOSED","line":"78"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"UPGRADED","id":"UPGRADED","line":"79"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"FAILURE","id":"FAILURE","line":"80"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"FIRST_BODY_STATE","id":"FIRST_BODY_STATE","line":"82"}],"isPrivate":true,"uri":"dart-sdk/lib/io/http_parser.dart","line":"51"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"kind":"class","name":"_CharCode","id":"_CharCode","children":[{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"HT","id":"HT","line":"34"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"LF","id":"LF","line":"35"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"CR","id":"CR","line":"36"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"SP","id":"SP","line":"37"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"AMPERSAND","id":"AMPERSAND","line":"38"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"COMMA","id":"COMMA","line":"39"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"DASH","id":"DASH","line":"40"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"SLASH","id":"SLASH","line":"41"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"ZERO","id":"ZERO","line":"42"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"ONE","id":"ONE","line":"43"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"COLON","id":"COLON","line":"44"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"SEMI_COLON","id":"SEMI_COLON","line":"45"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"EQUAL","id":"EQUAL","line":"46"}],"isPrivate":true,"uri":"dart-sdk/lib/io/http_parser.dart","line":"33"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"kind":"class","name":"_Const","id":"_Const","children":[{"isStatic":true,"kind":"variable","name":"HTTP","id":"HTTP","line":"10"},{"isStatic":true,"kind":"variable","name":"HTTP1DOT","id":"HTTP1DOT","line":"12"},{"isStatic":true,"kind":"variable","name":"HTTP10","id":"HTTP10","line":"14"},{"isStatic":true,"kind":"variable","name":"HTTP11","id":"HTTP11","line":"16"},{"ref":{"name":"bool","refId":"dart.core/bool"},"isStatic":true,"kind":"variable","name":"T","id":"T","line":"18"},{"ref":{"name":"bool","refId":"dart.core/bool"},"isStatic":true,"kind":"variable","name":"F","id":"F","line":"19"},{"isStatic":true,"kind":"variable","name":"SEPARATOR_MAP","id":"SEPARATOR_MAP","line":"21"}],"isPrivate":true,"uri":"dart-sdk/lib/io/http_parser.dart","line":"8"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"interfaces":[{"name":"RedirectInfo","refId":"dart.io/RedirectInfo"}],"kind":"class","name":"_RedirectInfo","id":"_RedirectInfo","children":[{"ref":{"name":"int","refId":"dart.core/int"},"isFinal":true,"kind":"variable","name":"statusCode","id":"statusCode","line":"2573"},{"ref":{"name":"String","refId":"dart.core/String"},"isFinal":true,"kind":"variable","name":"method","id":"method","line":"2574"},{"ref":{"name":"Uri","refId":"dart.core/Uri"},"isFinal":true,"kind":"variable","name":"location","id":"location","line":"2575"},{"kind":"constructor","name":"","id":"3()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"initializedField":{"name":"statusCode","refId":"dart.io/_RedirectInfo/statusCode"},"kind":"param","name":"statusCode","id":"statusCode"},{"ref":{"name":"String","refId":"dart.core/String"},"initializedField":{"name":"method","refId":"dart.io/_RedirectInfo/method"},"kind":"param","name":"method","id":"method","line":"2571"},{"ref":{"name":"Uri","refId":"dart.core/Uri"},"initializedField":{"name":"location","refId":"dart.io/_RedirectInfo/location"},"kind":"param","name":"location","id":"location","line":"2572"}],"line":"2570"}],"isPrivate":true,"uri":"dart-sdk/lib/io/http_impl.dart","line":"2569"},{"superclass":{"name":"_HttpClientCredentials","refId":"dart.io/_HttpClientCredentials"},"interfaces":[{"name":"HttpClientDigestCredentials","refId":"dart.io/HttpClientDigestCredentials"}],"kind":"class","name":"_HttpClientDigestCredentials","id":"_HttpClientDigestCredentials","children":[{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"method","name":"authorization","id":"authorization2()","children":[{"ref":{"name":"_Credentials","refId":"dart.io/_Credentials"},"kind":"param","name":"credentials","id":"credentials"},{"ref":{"name":"_HttpClientRequest","refId":"dart.io/_HttpClientRequest"},"kind":"param","name":"request","id":"request"}],"line":"2500"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"authorize","id":"authorize2()","children":[{"ref":{"name":"_Credentials","refId":"dart.io/_Credentials"},"kind":"param","name":"credentials","id":"credentials"},{"ref":{"name":"HttpClientRequest","refId":"dart.io/HttpClientRequest"},"kind":"param","name":"request","id":"request"}],"line":"2553"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"authorizeProxy","id":"authorizeProxy2()","children":[{"ref":{"name":"_ProxyCredentials","refId":"dart.io/_ProxyCredentials"},"kind":"param","name":"credentials","id":"credentials"},{"ref":{"name":"HttpClientRequest","refId":"dart.io/HttpClientRequest"},"kind":"param","name":"request","id":"request","line":"2559"}],"line":"2558"},{"ref":{"name":"_AuthenticationScheme","refId":"dart.io/_AuthenticationScheme"},"kind":"property","name":"scheme","id":"scheme","line":"2498"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"variable","name":"username","id":"username","line":"2564"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"variable","name":"password","id":"password","line":"2565"},{"kind":"constructor","name":"","id":"2()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"initializedField":{"name":"username","refId":"dart.io/_HttpClientDigestCredentials/username"},"kind":"param","name":"username","id":"username"},{"ref":{"name":"String","refId":"dart.core/String"},"initializedField":{"name":"password","refId":"dart.io/_HttpClientDigestCredentials/password"},"kind":"param","name":"password","id":"password","line":"2496"}],"line":"2495"}],"isPrivate":true,"uri":"dart-sdk/lib/io/http_impl.dart","line":"2492"},{"superclass":{"name":"_HttpClientCredentials","refId":"dart.io/_HttpClientCredentials"},"interfaces":[{"name":"HttpClientBasicCredentials","refId":"dart.io/HttpClientBasicCredentials"}],"kind":"class","name":"_HttpClientBasicCredentials","id":"_HttpClientBasicCredentials","children":[{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"method","name":"authorization","id":"authorization0()","line":"2467"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"authorize","id":"authorize2()","children":[{"ref":{"name":"_Credentials","refId":"dart.io/_Credentials"},"kind":"param","name":"_","id":"_","isPrivate":true},{"ref":{"name":"HttpClientRequest","refId":"dart.io/HttpClientRequest"},"kind":"param","name":"request","id":"request"}],"line":"2479"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"authorizeProxy","id":"authorizeProxy2()","children":[{"ref":{"name":"_ProxyCredentials","refId":"dart.io/_ProxyCredentials"},"kind":"param","name":"_","id":"_","isPrivate":true},{"ref":{"name":"HttpClientRequest","refId":"dart.io/HttpClientRequest"},"kind":"param","name":"request","id":"request"}],"line":"2483"},{"ref":{"name":"_AuthenticationScheme","refId":"dart.io/_AuthenticationScheme"},"kind":"property","name":"scheme","id":"scheme","line":"2465"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"variable","name":"username","id":"username","line":"2487"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"variable","name":"password","id":"password","line":"2488"},{"kind":"constructor","name":"","id":"2()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"initializedField":{"name":"username","refId":"dart.io/_HttpClientBasicCredentials/username"},"kind":"param","name":"username","id":"username"},{"ref":{"name":"String","refId":"dart.core/String"},"initializedField":{"name":"password","refId":"dart.io/_HttpClientBasicCredentials/password"},"kind":"param","name":"password","id":"password","line":"2463"}],"line":"2462"}],"isPrivate":true,"uri":"dart-sdk/lib/io/http_impl.dart","line":"2459"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"interfaces":[{"name":"HttpClientCredentials","refId":"dart.io/HttpClientCredentials"}],"kind":"class","name":"_HttpClientCredentials","id":"_HttpClientCredentials","children":[{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"authorize","id":"authorize2()","children":[{"ref":{"name":"_Credentials","refId":"dart.io/_Credentials"},"kind":"param","name":"credentials","id":"credentials"},{"ref":{"name":"HttpClientRequest","refId":"dart.io/HttpClientRequest"},"kind":"param","name":"request","id":"request"}],"line":"2454"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"authorizeProxy","id":"authorizeProxy2()","children":[{"ref":{"name":"_ProxyCredentials","refId":"dart.io/_ProxyCredentials"},"kind":"param","name":"credentials","id":"credentials"},{"ref":{"name":"HttpClientRequest","refId":"dart.io/HttpClientRequest"},"kind":"param","name":"request","id":"request"}],"line":"2455"},{"ref":{"name":"_AuthenticationScheme","refId":"dart.io/_AuthenticationScheme"},"kind":"property","name":"scheme","id":"scheme","line":"2453"}],"isPrivate":true,"uri":"dart-sdk/lib/io/http_impl.dart","line":"2452"},{"superclass":{"name":"_Credentials","refId":"dart.io/_Credentials"},"kind":"class","name":"_ProxyCredentials","id":"_ProxyCredentials","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"method","name":"applies","id":"applies2()","children":[{"ref":{"name":"_Proxy","refId":"dart.io/_Proxy"},"kind":"param","name":"proxy","id":"proxy"},{"ref":{"name":"_AuthenticationScheme","refId":"dart.io/_AuthenticationScheme"},"kind":"param","name":"scheme","id":"scheme"}],"line":"2435"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"authorize","id":"authorize1()","children":[{"ref":{"name":"HttpClientRequest","refId":"dart.io/HttpClientRequest"},"kind":"param","name":"request","id":"request"}],"line":"2440"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"variable","name":"host","id":"host","line":"2426"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"port","id":"port","line":"2427"},{"kind":"constructor","name":"","id":"4()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"initializedField":{"name":"host","refId":"dart.io/_ProxyCredentials/host"},"kind":"param","name":"host","id":"host"},{"ref":{"name":"int","refId":"dart.core/int"},"initializedField":{"name":"port","refId":"dart.io/_ProxyCredentials/port"},"kind":"param","name":"port","id":"port","line":"2430"},{"kind":"param","name":"realm","id":"realm","line":"2431"},{"ref":{"name":"_HttpClientCredentials","refId":"dart.io/_HttpClientCredentials"},"kind":"param","name":"creds","id":"creds","line":"2432"}],"line":"2429"}],"isPrivate":true,"uri":"dart-sdk/lib/io/http_impl.dart","line":"2425"},{"superclass":{"name":"_Credentials","refId":"dart.io/_Credentials"},"kind":"class","name":"_SiteCredentials","id":"_SiteCredentials","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"method","name":"applies","id":"applies2()","children":[{"ref":{"name":"Uri","refId":"dart.core/Uri"},"kind":"param","name":"uri","id":"uri"},{"ref":{"name":"_AuthenticationScheme","refId":"dart.io/_AuthenticationScheme"},"kind":"param","name":"scheme","id":"scheme"}],"line":"2402"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"authorize","id":"authorize1()","children":[{"ref":{"name":"HttpClientRequest","refId":"dart.io/HttpClientRequest"},"kind":"param","name":"request","id":"request"}],"line":"2412"},{"ref":{"name":"Uri","refId":"dart.core/Uri"},"kind":"variable","name":"uri","id":"uri","line":"2397"},{"kind":"constructor","name":"","id":"3()","children":[{"ref":{"name":"Uri","refId":"dart.core/Uri"},"initializedField":{"name":"uri","refId":"dart.io/_SiteCredentials/uri"},"kind":"param","name":"uri","id":"uri"},{"kind":"param","name":"realm","id":"realm"},{"ref":{"name":"_HttpClientCredentials","refId":"dart.io/_HttpClientCredentials"},"kind":"param","name":"creds","id":"creds"}],"line":"2399"}],"isPrivate":true,"uri":"dart-sdk/lib/io/http_impl.dart","line":"2396"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"kind":"class","name":"_Credentials","id":"_Credentials","children":[{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"authorize","id":"authorize1()","children":[{"ref":{"name":"HttpClientRequest","refId":"dart.io/HttpClientRequest"},"kind":"param","name":"request","id":"request"}],"line":"2393"},{"ref":{"name":"_AuthenticationScheme","refId":"dart.io/_AuthenticationScheme"},"kind":"property","name":"scheme","id":"scheme","line":"2391"},{"ref":{"name":"_HttpClientCredentials","refId":"dart.io/_HttpClientCredentials"},"kind":"variable","name":"credentials","id":"credentials","line":"2361"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"variable","name":"realm","id":"realm","line":"2362"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"variable","name":"used","id":"used","line":"2363"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"variable","name":"ha1","id":"ha1","line":"2366"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"variable","name":"nonce","id":"nonce","line":"2367"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"variable","name":"algorithm","id":"algorithm","line":"2368"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"variable","name":"qop","id":"qop","line":"2369"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"nonceCount","id":"nonceCount","line":"2370"},{"kind":"constructor","name":"","id":"2()","children":[{"ref":{"name":"_HttpClientCredentials","refId":"dart.io/_HttpClientCredentials"},"initializedField":{"name":"credentials","refId":"dart.io/_Credentials/credentials"},"kind":"param","name":"credentials","id":"credentials"},{"ref":{"name":"String","refId":"dart.core/String"},"initializedField":{"name":"realm","refId":"dart.io/_Credentials/realm"},"kind":"param","name":"realm","id":"realm"}],"line":"2372"}],"isPrivate":true,"uri":"dart-sdk/lib/io/http_impl.dart","line":"2360"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"kind":"class","name":"_AuthenticationScheme","id":"_AuthenticationScheme","children":[{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"method","name":"toString","id":"toString0()","line":"2350"},{"isStatic":true,"kind":"variable","name":"UNKNOWN","id":"UNKNOWN","line":"2338"},{"isStatic":true,"kind":"variable","name":"BASIC","id":"BASIC","line":"2339"},{"isStatic":true,"kind":"variable","name":"DIGEST","id":"DIGEST","line":"2340"},{"ref":{"name":"int","refId":"dart.core/int"},"isFinal":true,"kind":"variable","name":"_scheme","id":"_scheme","isPrivate":true,"line":"2356"},{"kind":"constructor","name":"","id":"1()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"initializedField":{"name":"_scheme","refId":"dart.io/_AuthenticationScheme/_scheme"},"kind":"param","name":"_scheme","id":"_scheme","isPrivate":true}],"line":"2342"},{"returnType":{"name":"_AuthenticationScheme","refId":"dart.io/_AuthenticationScheme"},"kind":"constructor","name":"fromString","id":"fromString1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"scheme","id":"scheme"}],"line":"2344"}],"isPrivate":true,"uri":"dart-sdk/lib/io/http_impl.dart","line":"2337"},{"superclass":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]}]},"interfaces":[{"name":"Socket","refId":"dart.io/Socket"}],"kind":"class","name":"_DetachedSocket","id":"_DetachedSocket","children":[{"returnType":{"name":"StreamSubscription","refId":"dart.async/StreamSubscription","arguments":[{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]}]},"kind":"method","name":"listen","id":"listen4()","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"onData","id":"onData","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"param","name":"event","id":"event","uri":"dart-sdk/lib/io/http_impl.dart","line":"2280"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]},{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"isNamed":true,"kind":"param","name":"onError","id":"onError","line":"2281"},{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"isNamed":true,"kind":"param","name":"onDone","id":"onDone","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","uri":"dart-sdk/lib/core/function.dart","line":"13"}],"line":"2282"},{"ref":{"name":"bool","refId":"dart.core/bool"},"isOptional":true,"isNamed":true,"kind":"param","name":"cancelOnError","id":"cancelOnError","line":"2283"}],"line":"2280"},{"returnType":{"name":"void","refId":"void"},"isSetter":true,"kind":"method","name":"encoding=","id":"encoding=1()","children":[{"ref":{"name":"Encoding","refId":"dart.convert/Encoding"},"kind":"param","name":"value","id":"value"}],"line":"2292"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"write","id":"write1()","children":[{"ref":{"name":"Object","refId":"dart.core/Object"},"kind":"param","name":"obj","id":"obj"}],"line":"2296"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"writeln","id":"writeln1()","children":[{"ref":{"name":"Object","refId":"dart.core/Object"},"defaultValue":"\"\"","isOptional":true,"kind":"param","name":"obj","id":"obj"}],"line":"2298"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"writeCharCode","id":"writeCharCode1()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"charCode","id":"charCode"}],"line":"2300"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"writeAll","id":"writeAll2()","children":[{"ref":{"name":"Iterable","refId":"dart.core/Iterable"},"kind":"param","name":"objects","id":"objects"},{"ref":{"name":"String","refId":"dart.core/String"},"defaultValue":"\"\"","isOptional":true,"kind":"param","name":"separator","id":"separator"}],"line":"2302"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"add","id":"add1()","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"param","name":"bytes","id":"bytes"}],"line":"2306"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"addError","id":"addError2()","children":[{"kind":"param","name":"error","id":"error"},{"ref":{"name":"StackTrace","refId":"dart.core/StackTrace"},"isOptional":true,"kind":"param","name":"stackTrace","id":"stackTrace"}],"line":"2308"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"Socket","refId":"dart.io/Socket"}]},"kind":"method","name":"addStream","id":"addStream1()","children":[{"ref":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]}]},"kind":"param","name":"stream","id":"stream"}],"line":"2311"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"destroy","id":"destroy0()","line":"2315"},{"returnType":{"name":"Future","refId":"dart.async/Future"},"kind":"method","name":"flush","id":"flush0()","line":"2317"},{"returnType":{"name":"Future","refId":"dart.async/Future"},"kind":"method","name":"close","id":"close0()","line":"2319"},{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"method","name":"setOption","id":"setOption2()","children":[{"ref":{"name":"SocketOption","refId":"dart.io/SocketOption"},"kind":"param","name":"option","id":"option"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"param","name":"enabled","id":"enabled"}],"line":"2331"},{"ref":{"name":"Encoding","refId":"dart.convert/Encoding"},"kind":"property","name":"encoding","id":"encoding","line":"2290"},{"ref":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"Socket","refId":"dart.io/Socket"}]},"kind":"property","name":"done","id":"done","line":"2321"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"property","name":"port","id":"port","line":"2323"},{"ref":{"name":"InternetAddress","refId":"dart.io/InternetAddress"},"kind":"property","name":"address","id":"address","line":"2325"},{"ref":{"name":"InternetAddress","refId":"dart.io/InternetAddress"},"kind":"property","name":"remoteAddress","id":"remoteAddress","line":"2327"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"property","name":"remotePort","id":"remotePort","line":"2329"},{"ref":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]}]},"isFinal":true,"kind":"variable","name":"_incoming","id":"_incoming","isPrivate":true,"line":"2275"},{"ref":{"name":"Socket","refId":"dart.io/Socket"},"isFinal":true,"kind":"variable","name":"_socket","id":"_socket","isPrivate":true,"line":"2276"},{"kind":"constructor","name":"","id":"2()","children":[{"ref":{"name":"Socket","refId":"dart.io/Socket"},"initializedField":{"name":"_socket","refId":"dart.io/_DetachedSocket/_socket"},"kind":"param","name":"_socket","id":"_socket","isPrivate":true},{"ref":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]}]},"initializedField":{"name":"_incoming","refId":"dart.io/_DetachedSocket/_incoming"},"kind":"param","name":"_incoming","id":"_incoming","isPrivate":true}],"line":"2278"}],"isPrivate":true,"uri":"dart-sdk/lib/io/http_impl.dart","line":"2274"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"interfaces":[{"name":"HttpConnectionInfo","refId":"dart.io/HttpConnectionInfo"}],"kind":"class","name":"_HttpConnectionInfo","id":"_HttpConnectionInfo","children":[{"returnType":{"name":"_HttpConnectionInfo","refId":"dart.io/_HttpConnectionInfo"},"isStatic":true,"kind":"method","name":"create","id":"create1()","children":[{"ref":{"name":"Socket","refId":"dart.io/Socket"},"kind":"param","name":"socket","id":"socket"}],"line":"2256"},{"ref":{"name":"InternetAddress","refId":"dart.io/InternetAddress"},"kind":"variable","name":"remoteAddress","id":"remoteAddress","line":"2268"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"remotePort","id":"remotePort","line":"2269"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"localPort","id":"localPort","line":"2270"}],"isPrivate":true,"uri":"dart-sdk/lib/io/http_impl.dart","line":"2255"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"kind":"class","name":"_Proxy","id":"_Proxy","children":[{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"isAuthenticated","id":"isAuthenticated","line":"2245"},{"ref":{"name":"String","refId":"dart.core/String"},"isFinal":true,"kind":"variable","name":"host","id":"host","line":"2247"},{"ref":{"name":"int","refId":"dart.core/int"},"isFinal":true,"kind":"variable","name":"port","id":"port","line":"2248"},{"ref":{"name":"String","refId":"dart.core/String"},"isFinal":true,"kind":"variable","name":"username","id":"username","line":"2249"},{"ref":{"name":"String","refId":"dart.core/String"},"isFinal":true,"kind":"variable","name":"password","id":"password","line":"2250"},{"ref":{"name":"bool","refId":"dart.core/bool"},"isFinal":true,"kind":"variable","name":"isDirect","id":"isDirect","line":"2251"},{"kind":"constructor","name":"","id":"4()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"initializedField":{"name":"host","refId":"dart.io/_Proxy/host"},"kind":"param","name":"host","id":"host","line":"2241"},{"ref":{"name":"int","refId":"dart.core/int"},"initializedField":{"name":"port","refId":"dart.io/_Proxy/port"},"kind":"param","name":"port","id":"port","line":"2241"},{"ref":{"name":"String","refId":"dart.core/String"},"initializedField":{"name":"username","refId":"dart.io/_Proxy/username"},"kind":"param","name":"username","id":"username","line":"2241"},{"ref":{"name":"String","refId":"dart.core/String"},"initializedField":{"name":"password","refId":"dart.io/_Proxy/password"},"kind":"param","name":"password","id":"password","line":"2241"}],"line":"2240"},{"kind":"constructor","name":"direct","id":"direct0()","line":"2242"}],"isPrivate":true,"uri":"dart-sdk/lib/io/http_impl.dart","line":"2239"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"kind":"class","name":"_ProxyConfiguration","id":"_ProxyConfiguration","children":[{"ref":{"name":"String","refId":"dart.core/String"},"isStatic":true,"kind":"variable","name":"PROXY_PREFIX","id":"PROXY_PREFIX","line":"2174"},{"ref":{"name":"String","refId":"dart.core/String"},"isStatic":true,"kind":"variable","name":"DIRECT_PREFIX","id":"DIRECT_PREFIX","line":"2175"},{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"_Proxy","refId":"dart.io/_Proxy"}]},"isFinal":true,"kind":"variable","name":"proxies","id":"proxies","line":"2235"},{"kind":"constructor","name":"","id":"1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"configuration","id":"configuration"}],"line":"2177"},{"kind":"constructor","name":"direct","id":"direct0()","line":"2232"}],"isPrivate":true,"uri":"dart-sdk/lib/io/http_impl.dart","line":"2173"},{"superclass":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"HttpRequest","refId":"dart.io/HttpRequest"}]},"interfaces":[{"name":"HttpServer","refId":"dart.io/HttpServer"}],"kind":"class","name":"_HttpServer","id":"_HttpServer","children":[{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"HttpServer","refId":"dart.io/HttpServer"}]},"isStatic":true,"kind":"method","name":"bind","id":"bind3()","children":[{"kind":"param","name":"address","id":"address"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"port","id":"port"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"backlog","id":"backlog"}],"line":"2015"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"HttpServer","refId":"dart.io/HttpServer"}]},"isStatic":true,"kind":"method","name":"bindSecure","id":"bindSecure5()","children":[{"kind":"param","name":"address","id":"address"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"port","id":"port","line":"2022"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"backlog","id":"backlog","line":"2023"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"certificate_name","id":"certificate_name","line":"2024"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"param","name":"requestClientCertificate","id":"requestClientCertificate","line":"2025"}],"line":"2021"},{"returnType":{"name":"StreamSubscription","refId":"dart.async/StreamSubscription","arguments":[{"name":"HttpRequest","refId":"dart.io/HttpRequest"}]},"kind":"method","name":"listen","id":"listen4()","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"onData","id":"onData","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"HttpRequest","refId":"dart.io/HttpRequest"},"kind":"param","name":"event","id":"event","uri":"dart-sdk/lib/io/http_impl.dart","line":"2048"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]},{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"isNamed":true,"kind":"param","name":"onError","id":"onError","line":"2049"},{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"isNamed":true,"kind":"param","name":"onDone","id":"onDone","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","uri":"dart-sdk/lib/core/function.dart","line":"13"}],"line":"2050"},{"ref":{"name":"bool","refId":"dart.core/bool"},"isOptional":true,"isNamed":true,"kind":"param","name":"cancelOnError","id":"cancelOnError","line":"2051"}],"line":"2048"},{"returnType":{"name":"Future","refId":"dart.async/Future"},"kind":"method","name":"close","id":"close1()","children":[{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"false","isOptional":true,"isNamed":true,"kind":"param","name":"force","id":"force"}],"line":"2073"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_maybeCloseSessionManager","id":"_maybeCloseSessionManager0()","isPrivate":true,"line":"2095"},{"isSetter":true,"kind":"method","name":"sessionTimeout=","id":"sessionTimeout=1()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"timeout","id":"timeout"}],"line":"2114"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_handleRequest","id":"_handleRequest1()","children":[{"ref":{"name":"HttpRequest","refId":"dart.io/HttpRequest"},"kind":"param","name":"request","id":"request"}],"isPrivate":true,"line":"2118"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_handleError","id":"_handleError1()","children":[{"kind":"param","name":"error","id":"error"}],"isPrivate":true,"line":"2122"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_connectionClosed","id":"_connectionClosed1()","children":[{"ref":{"name":"_HttpConnection","refId":"dart.io/_HttpConnection"},"kind":"param","name":"connection","id":"connection"}],"isPrivate":true,"line":"2126"},{"returnType":{"name":"HttpConnectionsInfo","refId":"dart.io/HttpConnectionsInfo"},"kind":"method","name":"connectionsInfo","id":"connectionsInfo0()","line":"2139"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"property","name":"port","id":"port","line":"2104"},{"ref":{"name":"InternetAddress","refId":"dart.io/InternetAddress"},"kind":"property","name":"address","id":"address","line":"2109"},{"ref":{"name":"_HttpSessionManager","refId":"dart.io/_HttpSessionManager"},"kind":"property","name":"_sessionManager","id":"_sessionManager","isPrivate":true,"line":"2131"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"variable","name":"serverHeader","id":"serverHeader","line":"2011"},{"ref":{"name":"Duration","refId":"dart.core/Duration"},"kind":"variable","name":"idleTimeout","id":"idleTimeout","line":"2013"},{"ref":{"name":"_HttpSessionManager","refId":"dart.io/_HttpSessionManager"},"kind":"variable","name":"_sessionManagerInstance","id":"_sessionManagerInstance","isPrivate":true,"line":"2155"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"variable","name":"closed","id":"closed","line":"2158"},{"isFinal":true,"kind":"variable","name":"_serverSocket","id":"_serverSocket","isPrivate":true,"line":"2162"},{"ref":{"name":"bool","refId":"dart.core/bool"},"isFinal":true,"kind":"variable","name":"_closeServer","id":"_closeServer","isPrivate":true,"line":"2163"},{"ref":{"name":"LinkedList","refId":"dart.collection/LinkedList","arguments":[{"name":"_HttpConnection","refId":"dart.io/_HttpConnection"}]},"isFinal":true,"kind":"variable","name":"_connections","id":"_connections","isPrivate":true,"line":"2166"},{"ref":{"name":"StreamController","refId":"dart.async/StreamController","arguments":[{"name":"HttpRequest","refId":"dart.io/HttpRequest"}]},"kind":"variable","name":"_controller","id":"_controller","isPrivate":true,"line":"2168"},{"kind":"constructor","name":"_","id":"_2()","children":[{"initializedField":{"name":"_serverSocket","refId":"dart.io/_HttpServer/_serverSocket"},"kind":"param","name":"_serverSocket","id":"_serverSocket","isPrivate":true},{"ref":{"name":"bool","refId":"dart.core/bool"},"initializedField":{"name":"_closeServer","refId":"dart.io/_HttpServer/_closeServer"},"kind":"param","name":"_closeServer","id":"_closeServer","isPrivate":true}],"isPrivate":true,"line":"2037"},{"kind":"constructor","name":"listenOn","id":"listenOn1()","children":[{"ref":{"name":"ServerSocket","refId":"dart.io/ServerSocket"},"initializedField":{"name":"_serverSocket","refId":"dart.io/_HttpServer/_serverSocket"},"kind":"param","name":"_serverSocket","id":"_serverSocket","isPrivate":true}],"line":"2042"}],"isPrivate":true,"uri":"dart-sdk/lib/io/http_impl.dart","line":"2010"},{"superclass":{"name":"LinkedListEntry","refId":"dart.collection/LinkedListEntry","arguments":[{"name":"_HttpConnection","refId":"dart.io/_HttpConnection"}]},"kind":"class","name":"_HttpConnection","id":"_HttpConnection","children":[{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_startTimeout","id":"_startTimeout0()","isPrivate":true,"line":"1966"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_stopTimeout","id":"_stopTimeout0()","isPrivate":true,"line":"1975"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"destroy","id":"destroy0()","line":"1979"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"Socket","refId":"dart.io/Socket"}]},"kind":"method","name":"detachSocket","id":"detachSocket0()","line":"1987"},{"ref":{"name":"HttpConnectionInfo","refId":"dart.io/HttpConnectionInfo"},"kind":"property","name":"connectionInfo","id":"connectionInfo","line":"2000"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"_isActive","id":"_isActive","isPrivate":true,"line":"2002"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"_isIdle","id":"_isIdle","isPrivate":true,"line":"2003"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"_isClosing","id":"_isClosing","isPrivate":true,"line":"2004"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"_isDetached","id":"_isDetached","isPrivate":true,"line":"2005"},{"isStatic":true,"kind":"variable","name":"_ACTIVE","id":"_ACTIVE","isPrivate":true,"line":"1893"},{"isStatic":true,"kind":"variable","name":"_IDLE","id":"_IDLE","isPrivate":true,"line":"1894"},{"isStatic":true,"kind":"variable","name":"_CLOSING","id":"_CLOSING","isPrivate":true,"line":"1895"},{"isStatic":true,"kind":"variable","name":"_DETACHED","id":"_DETACHED","isPrivate":true,"line":"1896"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"_state","id":"_state","isPrivate":true,"line":"1898"},{"ref":{"name":"Socket","refId":"dart.io/Socket"},"isFinal":true,"kind":"variable","name":"_socket","id":"_socket","isPrivate":true,"line":"1900"},{"ref":{"name":"_HttpServer","refId":"dart.io/_HttpServer"},"isFinal":true,"kind":"variable","name":"_httpServer","id":"_httpServer","isPrivate":true,"line":"1901"},{"ref":{"name":"_HttpParser","refId":"dart.io/_HttpParser"},"isFinal":true,"kind":"variable","name":"_httpParser","id":"_httpParser","isPrivate":true,"line":"1902"},{"ref":{"name":"StreamSubscription","refId":"dart.async/StreamSubscription"},"kind":"variable","name":"_subscription","id":"_subscription","isPrivate":true,"line":"1903"},{"ref":{"name":"Timer","refId":"dart.async/Timer"},"kind":"variable","name":"_idleTimer","id":"_idleTimer","isPrivate":true,"line":"1904"},{"ref":{"name":"Uint8List","refId":"dart.typed_data/Uint8List"},"isFinal":true,"kind":"variable","name":"_headersBuffer","id":"_headersBuffer","isPrivate":true,"line":"1905"},{"ref":{"name":"Future","refId":"dart.async/Future"},"kind":"variable","name":"_streamFuture","id":"_streamFuture","isPrivate":true,"line":"1907"},{"kind":"constructor","name":"","id":"2()","children":[{"ref":{"name":"Socket","refId":"dart.io/Socket"},"initializedField":{"name":"_socket","refId":"dart.io/_HttpConnection/_socket"},"kind":"param","name":"_socket","id":"_socket","isPrivate":true},{"ref":{"name":"_HttpServer","refId":"dart.io/_HttpServer"},"initializedField":{"name":"_httpServer","refId":"dart.io/_HttpConnection/_httpServer"},"kind":"param","name":"_httpServer","id":"_httpServer","isPrivate":true}],"line":"1909"}],"isPrivate":true,"uri":"dart-sdk/lib/io/http_impl.dart","line":"1892"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"interfaces":[{"name":"HttpClient","refId":"dart.io/HttpClient"}],"kind":"class","name":"_HttpClient","id":"_HttpClient","children":[{"returnType":{"name":"void","refId":"void"},"isSetter":true,"kind":"method","name":"idleTimeout=","id":"idleTimeout=1()","children":[{"ref":{"name":"Duration","refId":"dart.core/Duration"},"kind":"param","name":"timeout","id":"timeout"}],"line":"1511"},{"isSetter":true,"kind":"method","name":"badCertificateCallback=","id":"badCertificateCallback=1()","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"callback","id":"callback","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"X509Certificate","refId":"dart.io/X509Certificate"},"kind":"param","name":"cert","id":"cert","uri":"dart-sdk/lib/io/http_impl.dart","line":"1521"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"host","id":"host","uri":"dart-sdk/lib/io/http_impl.dart","line":"1522"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"port","id":"port","uri":"dart-sdk/lib/io/http_impl.dart","line":"1523"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"1521"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"HttpClientRequest","refId":"dart.io/HttpClientRequest"}]},"kind":"method","name":"open","id":"open4()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"method","id":"method"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"host","id":"host","line":"1529"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"port","id":"port","line":"1530"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"path","id":"path","line":"1531"}],"line":"1528"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"HttpClientRequest","refId":"dart.io/HttpClientRequest"}]},"kind":"method","name":"openUrl","id":"openUrl2()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"method","id":"method"},{"ref":{"name":"Uri","refId":"dart.core/Uri"},"kind":"param","name":"url","id":"url"}],"line":"1538"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"HttpClientRequest","refId":"dart.io/HttpClientRequest"}]},"kind":"method","name":"get","id":"get3()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"host","id":"host"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"port","id":"port","line":"1543"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"path","id":"path","line":"1544"}],"line":"1542"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"HttpClientRequest","refId":"dart.io/HttpClientRequest"}]},"kind":"method","name":"getUrl","id":"getUrl1()","children":[{"ref":{"name":"Uri","refId":"dart.core/Uri"},"kind":"param","name":"url","id":"url"}],"line":"1548"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"HttpClientRequest","refId":"dart.io/HttpClientRequest"}]},"kind":"method","name":"post","id":"post3()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"host","id":"host"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"port","id":"port","line":"1553"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"path","id":"path","line":"1554"}],"line":"1552"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"HttpClientRequest","refId":"dart.io/HttpClientRequest"}]},"kind":"method","name":"postUrl","id":"postUrl1()","children":[{"ref":{"name":"Uri","refId":"dart.core/Uri"},"kind":"param","name":"url","id":"url"}],"line":"1558"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"close","id":"close1()","children":[{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"false","isOptional":true,"isNamed":true,"kind":"param","name":"force","id":"force"}],"line":"1562"},{"isSetter":true,"kind":"method","name":"authenticate=","id":"authenticate=1()","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"f","id":"f","children":[{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"bool","refId":"dart.core/bool"}]},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"Uri","refId":"dart.core/Uri"},"kind":"param","name":"url","id":"url","uri":"dart-sdk/lib/io/http_impl.dart","line":"1585"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"scheme","id":"scheme","uri":"dart-sdk/lib/io/http_impl.dart","line":"1585"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"realm","id":"realm","uri":"dart-sdk/lib/io/http_impl.dart","line":"1585"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"1585"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"addCredentials","id":"addCredentials3()","children":[{"ref":{"name":"Uri","refId":"dart.core/Uri"},"kind":"param","name":"url","id":"url"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"realm","id":"realm"},{"ref":{"name":"HttpClientCredentials","refId":"dart.io/HttpClientCredentials"},"kind":"param","name":"cr","id":"cr"}],"line":"1589"},{"isSetter":true,"kind":"method","name":"authenticateProxy=","id":"authenticateProxy=1()","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"f","id":"f","children":[{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"bool","refId":"dart.core/bool"}]},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"host","id":"host","uri":"dart-sdk/lib/io/http_impl.dart","line":"1594"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"port","id":"port","uri":"dart-sdk/lib/io/http_impl.dart","line":"1594"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"scheme","id":"scheme","uri":"dart-sdk/lib/io/http_impl.dart","line":"1594"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"realm","id":"realm","uri":"dart-sdk/lib/io/http_impl.dart","line":"1594"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}],"line":"1594"}],"line":"1593"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"addProxyCredentials","id":"addProxyCredentials4()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"host","id":"host"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"port","id":"port","line":"1599"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"realm","id":"realm","line":"1600"},{"ref":{"name":"HttpClientCredentials","refId":"dart.io/HttpClientCredentials"},"kind":"param","name":"cr","id":"cr","line":"1601"}],"line":"1598"},{"isSetter":true,"kind":"method","name":"findProxy=","id":"findProxy=1()","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"f","id":"f","children":[{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"Uri","refId":"dart.core/Uri"},"kind":"param","name":"uri","id":"uri","uri":"dart-sdk/lib/io/http_impl.dart","line":"1605"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"1605"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"HttpClientRequest","refId":"dart.io/HttpClientRequest"}]},"kind":"method","name":"_openUrl","id":"_openUrl2()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"method","id":"method"},{"ref":{"name":"Uri","refId":"dart.core/Uri"},"kind":"param","name":"uri","id":"uri"}],"isPrivate":true,"line":"1607"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"HttpClientRequest","refId":"dart.io/HttpClientRequest"}]},"kind":"method","name":"_openUrlFromRequest","id":"_openUrlFromRequest3()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"method","id":"method"},{"ref":{"name":"Uri","refId":"dart.core/Uri"},"kind":"param","name":"uri","id":"uri","line":"1657"},{"ref":{"name":"_HttpClientRequest","refId":"dart.io/_HttpClientRequest"},"kind":"param","name":"previous","id":"previous","line":"1658"}],"isPrivate":true,"line":"1656"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_returnConnection","id":"_returnConnection1()","children":[{"ref":{"name":"_HttpClientConnection","refId":"dart.io/_HttpClientConnection"},"kind":"param","name":"connection","id":"connection"}],"isPrivate":true,"line":"1680"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_connectionClosed","id":"_connectionClosed1()","children":[{"ref":{"name":"_HttpClientConnection","refId":"dart.io/_HttpClientConnection"},"kind":"param","name":"connection","id":"connection"}],"isPrivate":true,"line":"1695"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_updateTimers","id":"_updateTimers0()","isPrivate":true,"line":"1707"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"_ConnnectionInfo","refId":"dart.io/_ConnnectionInfo"}]},"kind":"method","name":"_getConnection","id":"_getConnection4()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"uriHost","id":"uriHost"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"uriPort","id":"uriPort","line":"1727"},{"ref":{"name":"_ProxyConfiguration","refId":"dart.io/_ProxyConfiguration"},"kind":"param","name":"proxyConf","id":"proxyConf","line":"1728"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"param","name":"isSecure","id":"isSecure","line":"1729"}],"isPrivate":true,"line":"1726"},{"returnType":{"name":"_SiteCredentials","refId":"dart.io/_SiteCredentials"},"kind":"method","name":"_findCredentials","id":"_findCredentials2()","children":[{"ref":{"name":"Uri","refId":"dart.core/Uri"},"kind":"param","name":"url","id":"url"},{"ref":{"name":"_AuthenticationScheme","refId":"dart.io/_AuthenticationScheme"},"isOptional":true,"kind":"param","name":"scheme","id":"scheme"}],"isPrivate":true,"line":"1782"},{"returnType":{"name":"_ProxyCredentials","refId":"dart.io/_ProxyCredentials"},"kind":"method","name":"_findProxyCredentials","id":"_findProxyCredentials2()","children":[{"ref":{"name":"_Proxy","refId":"dart.io/_Proxy"},"kind":"param","name":"proxy","id":"proxy"},{"ref":{"name":"_AuthenticationScheme","refId":"dart.io/_AuthenticationScheme"},"isOptional":true,"kind":"param","name":"scheme","id":"scheme","line":"1797"}],"isPrivate":true,"line":"1796"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_removeCredentials","id":"_removeCredentials1()","children":[{"ref":{"name":"_Credentials","refId":"dart.io/_Credentials"},"kind":"param","name":"cr","id":"cr"}],"isPrivate":true,"line":"1807"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_removeProxyCredentials","id":"_removeProxyCredentials1()","children":[{"ref":{"name":"_Credentials","refId":"dart.io/_Credentials"},"kind":"param","name":"cr","id":"cr"}],"isPrivate":true,"line":"1814"},{"returnType":{"name":"String","refId":"dart.core/String"},"isStatic":true,"kind":"method","name":"_findProxyFromEnvironment","id":"_findProxyFromEnvironment2()","children":[{"ref":{"name":"Uri","refId":"dart.core/Uri"},"kind":"param","name":"url","id":"url"},{"ref":{"name":"Map","refId":"dart.core/Map","arguments":[{"name":"String","refId":"dart.core/String"},{"name":"String","refId":"dart.core/String"}]},"kind":"param","name":"environment","id":"environment","line":"1822"}],"isPrivate":true,"line":"1821"},{"ref":{"name":"Duration","refId":"dart.core/Duration"},"kind":"property","name":"idleTimeout","id":"idleTimeout","line":"1507"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"variable","name":"_closing","id":"_closing","isPrivate":true,"line":"1491"},{"ref":{"name":"Map","refId":"dart.core/Map","arguments":[{"name":"String","refId":"dart.core/String"},{"name":"Set","refId":"dart.core/Set","arguments":[{"name":"_HttpClientConnection","refId":"dart.io/_HttpClientConnection"}]}]},"isFinal":true,"kind":"variable","name":"_idleConnections","id":"_idleConnections","isPrivate":true,"line":"1493"},{"ref":{"name":"Set","refId":"dart.core/Set","arguments":[{"name":"_HttpClientConnection","refId":"dart.io/_HttpClientConnection"}]},"isFinal":true,"kind":"variable","name":"_activeConnections","id":"_activeConnections","isPrivate":true,"line":"1495"},{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"_Credentials","refId":"dart.io/_Credentials"}]},"isFinal":true,"kind":"variable","name":"_credentials","id":"_credentials","isPrivate":true,"line":"1497"},{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"_ProxyCredentials","refId":"dart.io/_ProxyCredentials"}]},"isFinal":true,"kind":"variable","name":"_proxyCredentials","id":"_proxyCredentials","isPrivate":true,"line":"1498"},{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"variable","name":"_authenticate","id":"_authenticate","isPrivate":true,"line":"1499"},{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"variable","name":"_authenticateProxy","id":"_authenticateProxy","isPrivate":true,"line":"1500"},{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"variable","name":"_findProxy","id":"_findProxy","isPrivate":true,"line":"1501"},{"ref":{"name":"Duration","refId":"dart.core/Duration"},"kind":"variable","name":"_idleTimeout","id":"_idleTimeout","isPrivate":true,"line":"1502"},{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"variable","name":"_badCertificateCallback","id":"_badCertificateCallback","isPrivate":true,"line":"1503"},{"ref":{"name":"Timer","refId":"dart.async/Timer"},"kind":"variable","name":"_noActiveTimer","id":"_noActiveTimer","isPrivate":true,"line":"1505"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"variable","name":"userAgent","id":"userAgent","line":"1509"},{"ref":{"name":"Map","refId":"dart.core/Map","arguments":[{"name":"String","refId":"dart.core/String"},{"name":"String","refId":"dart.core/String"}]},"isStatic":true,"kind":"variable","name":"_platformEnvironmentCache","id":"_platformEnvironmentCache","isPrivate":true,"line":"1888"}],"isPrivate":true,"uri":"dart-sdk/lib/io/http_impl.dart","line":"1489"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"kind":"class","name":"_ConnnectionInfo","id":"_ConnnectionInfo","children":[{"ref":{"name":"_HttpClientConnection","refId":"dart.io/_HttpClientConnection"},"isFinal":true,"kind":"variable","name":"connection","id":"connection","line":"1484"},{"ref":{"name":"_Proxy","refId":"dart.io/_Proxy"},"isFinal":true,"kind":"variable","name":"proxy","id":"proxy","line":"1485"},{"kind":"constructor","name":"","id":"2()","children":[{"ref":{"name":"_HttpClientConnection","refId":"dart.io/_HttpClientConnection"},"initializedField":{"name":"connection","refId":"dart.io/_ConnnectionInfo/connection"},"kind":"param","name":"connection","id":"connection"},{"ref":{"name":"_Proxy","refId":"dart.io/_Proxy"},"initializedField":{"name":"proxy","refId":"dart.io/_ConnnectionInfo/proxy"},"kind":"param","name":"proxy","id":"proxy"}],"line":"1483"}],"isPrivate":true,"uri":"dart-sdk/lib/io/http_impl.dart","line":"1482"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"kind":"class","name":"_HttpClientConnection","id":"_HttpClientConnection","children":[{"returnType":{"name":"_HttpClientRequest","refId":"dart.io/_HttpClientRequest"},"kind":"method","name":"send","id":"send4()","children":[{"ref":{"name":"Uri","refId":"dart.core/Uri"},"kind":"param","name":"uri","id":"uri"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"port","id":"port"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"method","id":"method"},{"ref":{"name":"_Proxy","refId":"dart.io/_Proxy"},"kind":"param","name":"proxy","id":"proxy"}],"line":"1287"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"Socket","refId":"dart.io/Socket"}]},"kind":"method","name":"detachSocket","id":"detachSocket0()","line":"1409"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"destroy","id":"destroy0()","line":"1414"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"close","id":"close0()","line":"1420"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"_HttpClientConnection","refId":"dart.io/_HttpClientConnection"}]},"kind":"method","name":"createProxyTunnel","id":"createProxyTunnel4()","children":[{"kind":"param","name":"host","id":"host"},{"kind":"param","name":"port","id":"port"},{"kind":"param","name":"proxy","id":"proxy"},{"kind":"param","name":"callback","id":"callback"}],"line":"1428"},{"isStatic":true,"kind":"method","name":"makeKey","id":"makeKey3()","children":[{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"param","name":"isSecure","id":"isSecure"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"host","id":"host"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"port","id":"port"}],"line":"1460"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"stopTimer","id":"stopTimer0()","line":"1464"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"startTimer","id":"startTimer0()","line":"1471"},{"ref":{"name":"HttpConnectionInfo","refId":"dart.io/HttpConnectionInfo"},"kind":"property","name":"connectionInfo","id":"connectionInfo","line":"1458"},{"ref":{"name":"String","refId":"dart.core/String"},"isFinal":true,"kind":"variable","name":"key","id":"key","line":"1232"},{"ref":{"name":"Socket","refId":"dart.io/Socket"},"isFinal":true,"kind":"variable","name":"_socket","id":"_socket","isPrivate":true,"line":"1233"},{"ref":{"name":"bool","refId":"dart.core/bool"},"isFinal":true,"kind":"variable","name":"_proxyTunnel","id":"_proxyTunnel","isPrivate":true,"line":"1234"},{"ref":{"name":"_HttpParser","refId":"dart.io/_HttpParser"},"isFinal":true,"kind":"variable","name":"_httpParser","id":"_httpParser","isPrivate":true,"line":"1235"},{"ref":{"name":"StreamSubscription","refId":"dart.async/StreamSubscription"},"kind":"variable","name":"_subscription","id":"_subscription","isPrivate":true,"line":"1236"},{"ref":{"name":"_HttpClient","refId":"dart.io/_HttpClient"},"isFinal":true,"kind":"variable","name":"_httpClient","id":"_httpClient","isPrivate":true,"line":"1237"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"variable","name":"_dispose","id":"_dispose","isPrivate":true,"line":"1238"},{"ref":{"name":"Timer","refId":"dart.async/Timer"},"kind":"variable","name":"_idleTimer","id":"_idleTimer","isPrivate":true,"line":"1239"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"variable","name":"closed","id":"closed","line":"1240"},{"ref":{"name":"Uri","refId":"dart.core/Uri"},"kind":"variable","name":"_currentUri","id":"_currentUri","isPrivate":true,"line":"1241"},{"ref":{"name":"Uint8List","refId":"dart.typed_data/Uint8List"},"isFinal":true,"kind":"variable","name":"_headersBuffer","id":"_headersBuffer","isPrivate":true,"line":"1242"},{"ref":{"name":"Completer","refId":"dart.async/Completer","arguments":[{"name":"_HttpIncoming","refId":"dart.io/_HttpIncoming"}]},"kind":"variable","name":"_nextResponseCompleter","id":"_nextResponseCompleter","isPrivate":true,"line":"1244"},{"ref":{"name":"Future","refId":"dart.async/Future"},"kind":"variable","name":"_streamFuture","id":"_streamFuture","isPrivate":true,"line":"1245"},{"kind":"constructor","name":"","id":"4()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"initializedField":{"name":"key","refId":"dart.io/_HttpClientConnection/key"},"kind":"param","name":"key","id":"key"},{"ref":{"name":"Socket","refId":"dart.io/Socket"},"initializedField":{"name":"_socket","refId":"dart.io/_HttpClientConnection/_socket"},"kind":"param","name":"_socket","id":"_socket","isPrivate":true,"line":"1248"},{"ref":{"name":"_HttpClient","refId":"dart.io/_HttpClient"},"initializedField":{"name":"_httpClient","refId":"dart.io/_HttpClientConnection/_httpClient"},"kind":"param","name":"_httpClient","id":"_httpClient","isPrivate":true,"line":"1249"},{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"false","isOptional":true,"initializedField":{"name":"_proxyTunnel","refId":"dart.io/_HttpClientConnection/_proxyTunnel"},"kind":"param","name":"_proxyTunnel","id":"_proxyTunnel","isPrivate":true,"line":"1250"}],"line":"1247"}],"isPrivate":true,"uri":"dart-sdk/lib/io/http_impl.dart","line":"1231"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"interfaces":[{"name":"StreamConsumer","refId":"dart.async/StreamConsumer","arguments":[{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]}]}],"kind":"class","name":"_HttpOutgoing","id":"_HttpOutgoing","children":[{"returnType":{"name":"Future","refId":"dart.async/Future"},"kind":"method","name":"addStream","id":"addStream1()","children":[{"ref":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]}]},"kind":"param","name":"stream","id":"stream"}],"line":"1215"},{"returnType":{"name":"Future","refId":"dart.async/Future"},"kind":"method","name":"close","id":"close0()","line":"1223"},{"ref":{"name":"Future","refId":"dart.async/Future"},"kind":"property","name":"done","id":"done","line":"1228"},{"ref":{"name":"Completer","refId":"dart.async/Completer"},"isFinal":true,"kind":"variable","name":"_doneCompleter","id":"_doneCompleter","isPrivate":true,"line":"1210"},{"ref":{"name":"Socket","refId":"dart.io/Socket"},"isFinal":true,"kind":"variable","name":"socket","id":"socket","line":"1211"},{"kind":"constructor","name":"","id":"1()","children":[{"ref":{"name":"Socket","refId":"dart.io/Socket"},"initializedField":{"name":"socket","refId":"dart.io/_HttpOutgoing/socket"},"kind":"param","name":"socket","id":"socket"}],"line":"1213"}],"isPrivate":true,"uri":"dart-sdk/lib/io/http_impl.dart","line":"1209"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"interfaces":[{"name":"EventSink","refId":"dart.async/EventSink","arguments":[{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]}]},{"name":"StreamTransformer","refId":"dart.async/StreamTransformer","arguments":[{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]}]}],"kind":"class","name":"_ContentLengthValidator","id":"_ContentLengthValidator","children":[{"returnType":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]}]},"kind":"method","name":"bind","id":"bind1()","children":[{"ref":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]}]},"kind":"param","name":"stream","id":"stream"}],"line":"1164"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"add","id":"add1()","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"param","name":"data","id":"data"}],"line":"1176"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"addError","id":"addError2()","children":[{"ref":{"name":"Object","refId":"dart.core/Object"},"kind":"param","name":"error","id":"error"},{"ref":{"name":"StackTrace","refId":"dart.core/StackTrace"},"isOptional":true,"kind":"param","name":"stackTrace","id":"stackTrace"}],"line":"1191"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"close","id":"close0()","line":"1195"},{"ref":{"name":"int","refId":"dart.core/int"},"isFinal":true,"kind":"variable","name":"expectedContentLength","id":"expectedContentLength","line":"1156"},{"ref":{"name":"Uri","refId":"dart.core/Uri"},"isFinal":true,"kind":"variable","name":"uri","id":"uri","line":"1157"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"_bytesWritten","id":"_bytesWritten","isPrivate":true,"line":"1158"},{"ref":{"name":"EventSink","refId":"dart.async/EventSink","arguments":[{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]}]},"kind":"variable","name":"_outSink","id":"_outSink","isPrivate":true,"line":"1160"},{"kind":"constructor","name":"","id":"2()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"initializedField":{"name":"expectedContentLength","refId":"dart.io/_ContentLengthValidator/expectedContentLength"},"kind":"param","name":"expectedContentLength","id":"expectedContentLength"},{"ref":{"name":"Uri","refId":"dart.core/Uri"},"initializedField":{"name":"uri","refId":"dart.io/_ContentLengthValidator/uri"},"kind":"param","name":"uri","id":"uri"}],"line":"1162"}],"isPrivate":true,"uri":"dart-sdk/lib/io/http_impl.dart","line":"1154"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"interfaces":[{"name":"StreamTransformer","refId":"dart.async/StreamTransformer","arguments":[{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]}]}],"kind":"class","name":"_ChunkedTransformer","id":"_ChunkedTransformer","children":[{"returnType":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]}]},"kind":"method","name":"bind","id":"bind1()","children":[{"ref":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]}]},"kind":"param","name":"stream","id":"stream"}],"line":"1146"},{"kind":"constructor","name":"","id":"0()","line":"1144"}],"isPrivate":true,"uri":"dart-sdk/lib/io/http_impl.dart","line":"1143"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"interfaces":[{"name":"EventSink","refId":"dart.async/EventSink","arguments":[{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]}]}],"kind":"class","name":"_ChunkedTransformerSink","id":"_ChunkedTransformerSink","children":[{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"add","id":"add1()","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"param","name":"data","id":"data"}],"line":"1090"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"addError","id":"addError2()","children":[{"ref":{"name":"Object","refId":"dart.core/Object"},"kind":"param","name":"error","id":"error"},{"ref":{"name":"StackTrace","refId":"dart.core/StackTrace"},"isOptional":true,"kind":"param","name":"stackTrace","id":"stackTrace"}],"line":"1096"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"close","id":"close0()","line":"1100"},{"returnType":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"method","name":"_chunkHeader","id":"_chunkHeader1()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"length","id":"length"}],"isPrivate":true,"line":"1105"},{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"isStatic":true,"kind":"property","name":"_footerAndChunk0Length","id":"_footerAndChunk0Length","isPrivate":true,"line":"1134"},{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"isStatic":true,"kind":"property","name":"_chunk0Length","id":"_chunk0Length","isPrivate":true,"line":"1138"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"_pendingFooter","id":"_pendingFooter","isPrivate":true,"line":"1085"},{"ref":{"name":"EventSink","refId":"dart.async/EventSink","arguments":[{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]}]},"isFinal":true,"kind":"variable","name":"_outSink","id":"_outSink","isPrivate":true,"line":"1086"},{"kind":"constructor","name":"","id":"1()","children":[{"ref":{"name":"EventSink","refId":"dart.async/EventSink","arguments":[{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]}]},"initializedField":{"name":"_outSink","refId":"dart.io/_ChunkedTransformerSink/_outSink"},"kind":"param","name":"_outSink","id":"_outSink","isPrivate":true}],"line":"1088"}],"isPrivate":true,"uri":"dart-sdk/lib/io/http_impl.dart","line":"1083"},{"superclass":{"name":"_HttpOutboundMessage","refId":"dart.io/_HttpOutboundMessage","arguments":[{"name":"HttpClientResponse","refId":"dart.io/HttpClientResponse"}]},"interfaces":[{"name":"HttpClientRequest","refId":"dart.io/HttpClientRequest"}],"kind":"class","name":"_HttpClientRequest","id":"_HttpClientRequest","children":[{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"HttpClientResponse","refId":"dart.io/HttpClientResponse"}]},"kind":"method","name":"close","id":"close0()","line":"951"},{"returnType":{"name":"void","refId":"void"},"isSetter":true,"kind":"method","name":"maxRedirects=","id":"maxRedirects=1()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"maxRedirects","id":"maxRedirects"}],"line":"957"},{"returnType":{"name":"void","refId":"void"},"isSetter":true,"kind":"method","name":"followRedirects=","id":"followRedirects=1()","children":[{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"param","name":"followRedirects","id":"followRedirects"}],"line":"963"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_onIncoming","id":"_onIncoming1()","children":[{"ref":{"name":"_HttpIncoming","refId":"dart.io/_HttpIncoming"},"kind":"param","name":"incoming","id":"incoming"}],"isPrivate":true,"line":"970"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_onError","id":"_onError2()","children":[{"kind":"param","name":"error","id":"error"},{"ref":{"name":"StackTrace","refId":"dart.core/StackTrace"},"kind":"param","name":"stackTrace","id":"stackTrace"}],"isPrivate":true,"line":"999"},{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"method","name":"_requestUri","id":"_requestUri0()","isPrivate":true,"line":"1004"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_writeHeader","id":"_writeHeader0()","isPrivate":true,"line":"1037"},{"ref":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"HttpClientResponse","refId":"dart.io/HttpClientResponse"}]},"kind":"property","name":"done","id":"done","line":"942"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"property","name":"maxRedirects","id":"maxRedirects","line":"956"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"followRedirects","id":"followRedirects","line":"962"},{"ref":{"name":"HttpConnectionInfo","refId":"dart.io/HttpConnectionInfo"},"kind":"property","name":"connectionInfo","id":"connectionInfo","line":"968"},{"ref":{"name":"String","refId":"dart.core/String"},"isFinal":true,"kind":"variable","name":"method","id":"method","line":"904"},{"ref":{"name":"Uri","refId":"dart.core/Uri"},"isFinal":true,"kind":"variable","name":"uri","id":"uri","line":"905"},{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"Cookie","refId":"dart.io/Cookie"}]},"isFinal":true,"kind":"variable","name":"cookies","id":"cookies","line":"906"},{"ref":{"name":"_HttpClient","refId":"dart.io/_HttpClient"},"isFinal":true,"kind":"variable","name":"_httpClient","id":"_httpClient","isPrivate":true,"line":"909"},{"ref":{"name":"_HttpClientConnection","refId":"dart.io/_HttpClientConnection"},"isFinal":true,"kind":"variable","name":"_httpClientConnection","id":"_httpClientConnection","isPrivate":true,"line":"910"},{"ref":{"name":"Completer","refId":"dart.async/Completer","arguments":[{"name":"HttpClientResponse","refId":"dart.io/HttpClientResponse"}]},"isFinal":true,"kind":"variable","name":"_responseCompleter","id":"_responseCompleter","isPrivate":true,"line":"912"},{"ref":{"name":"_Proxy","refId":"dart.io/_Proxy"},"isFinal":true,"kind":"variable","name":"_proxy","id":"_proxy","isPrivate":true,"line":"915"},{"ref":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"HttpClientResponse","refId":"dart.io/HttpClientResponse"}]},"kind":"variable","name":"_response","id":"_response","isPrivate":true,"line":"917"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"variable","name":"_followRedirects","id":"_followRedirects","isPrivate":true,"line":"920"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"_maxRedirects","id":"_maxRedirects","isPrivate":true,"line":"922"},{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"RedirectInfo","refId":"dart.io/RedirectInfo"}]},"kind":"variable","name":"_responseRedirects","id":"_responseRedirects","isPrivate":true,"line":"924"},{"kind":"constructor","name":"","id":"6()","children":[{"ref":{"name":"_HttpOutgoing","refId":"dart.io/_HttpOutgoing"},"kind":"param","name":"outgoing","id":"outgoing"},{"ref":{"name":"Uri","refId":"dart.core/Uri"},"kind":"param","name":"uri","id":"uri","line":"927"},{"ref":{"name":"String","refId":"dart.core/String"},"initializedField":{"name":"method","refId":"dart.io/_HttpClientRequest/method"},"kind":"param","name":"method","id":"method","line":"928"},{"ref":{"name":"_Proxy","refId":"dart.io/_Proxy"},"initializedField":{"name":"_proxy","refId":"dart.io/_HttpClientRequest/_proxy"},"kind":"param","name":"_proxy","id":"_proxy","isPrivate":true,"line":"929"},{"ref":{"name":"_HttpClient","refId":"dart.io/_HttpClient"},"initializedField":{"name":"_httpClient","refId":"dart.io/_HttpClientRequest/_httpClient"},"kind":"param","name":"_httpClient","id":"_httpClient","isPrivate":true,"line":"930"},{"ref":{"name":"_HttpClientConnection","refId":"dart.io/_HttpClientConnection"},"initializedField":{"name":"_httpClientConnection","refId":"dart.io/_HttpClientRequest/_httpClientConnection"},"kind":"param","name":"_httpClientConnection","id":"_httpClientConnection","isPrivate":true,"line":"931"}],"line":"926"}],"isPrivate":true,"uri":"dart-sdk/lib/io/http_impl.dart","line":"902"},{"superclass":{"name":"_HttpOutboundMessage","refId":"dart.io/_HttpOutboundMessage","arguments":[{"name":"HttpResponse","refId":"dart.io/HttpResponse"}]},"interfaces":[{"name":"HttpResponse","refId":"dart.io/HttpResponse"}],"kind":"class","name":"_HttpResponse","id":"_HttpResponse","children":[{"returnType":{"name":"void","refId":"void"},"isSetter":true,"kind":"method","name":"statusCode=","id":"statusCode=1()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"statusCode","id":"statusCode"}],"line":"737"},{"returnType":{"name":"void","refId":"void"},"isSetter":true,"kind":"method","name":"reasonPhrase=","id":"reasonPhrase=1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"reasonPhrase","id":"reasonPhrase"}],"line":"743"},{"returnType":{"name":"Future","refId":"dart.async/Future"},"kind":"method","name":"redirect","id":"redirect2()","children":[{"ref":{"name":"Uri","refId":"dart.core/Uri"},"kind":"param","name":"location","id":"location"},{"ref":{"name":"int","refId":"dart.core/int"},"defaultValue":"HttpStatus.MOVED_TEMPORARILY","isOptional":true,"isNamed":true,"kind":"param","name":"status","id":"status"}],"line":"748"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"Socket","refId":"dart.io/Socket"}]},"kind":"method","name":"detachSocket","id":"detachSocket0()","line":"755"},{"returnType":{"name":"void","refId":"void"},"isSetter":true,"kind":"method","name":"deadline=","id":"deadline=1()","children":[{"ref":{"name":"Duration","refId":"dart.core/Duration"},"kind":"param","name":"d","id":"d"}],"line":"773"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_writeHeader","id":"_writeHeader0()","isPrivate":true,"line":"783"},{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"method","name":"_findReasonPhrase","id":"_findReasonPhrase1()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"statusCode","id":"statusCode"}],"isPrivate":true,"line":"845"},{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"Cookie","refId":"dart.io/Cookie"}]},"kind":"property","name":"cookies","id":"cookies","line":"731"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"property","name":"statusCode","id":"statusCode","line":"736"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"property","name":"reasonPhrase","id":"reasonPhrase","line":"742"},{"ref":{"name":"HttpConnectionInfo","refId":"dart.io/HttpConnectionInfo"},"kind":"property","name":"connectionInfo","id":"connectionInfo","line":"769"},{"ref":{"name":"Duration","refId":"dart.core/Duration"},"kind":"property","name":"deadline","id":"deadline","line":"771"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"_statusCode","id":"_statusCode","isPrivate":true,"line":"716"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"variable","name":"_reasonPhrase","id":"_reasonPhrase","isPrivate":true,"line":"717"},{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"Cookie","refId":"dart.io/Cookie"}]},"kind":"variable","name":"_cookies","id":"_cookies","isPrivate":true,"line":"718"},{"ref":{"name":"_HttpRequest","refId":"dart.io/_HttpRequest"},"kind":"variable","name":"_httpRequest","id":"_httpRequest","isPrivate":true,"line":"719"},{"ref":{"name":"Duration","refId":"dart.core/Duration"},"kind":"variable","name":"_deadline","id":"_deadline","isPrivate":true,"line":"720"},{"ref":{"name":"Timer","refId":"dart.async/Timer"},"kind":"variable","name":"_deadlineTimer","id":"_deadlineTimer","isPrivate":true,"line":"721"},{"kind":"constructor","name":"","id":"4()","children":[{"ref":{"name":"Uri","refId":"dart.core/Uri"},"kind":"param","name":"uri","id":"uri"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"protocolVersion","id":"protocolVersion","line":"724"},{"ref":{"name":"_HttpOutgoing","refId":"dart.io/_HttpOutgoing"},"kind":"param","name":"outgoing","id":"outgoing","line":"725"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"serverHeader","id":"serverHeader","line":"726"}],"line":"723"}],"isPrivate":true,"uri":"dart-sdk/lib/io/http_impl.dart","line":"714"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"interfaces":[{"name":"StreamTransformer","refId":"dart.async/StreamTransformer","arguments":[{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]}]}],"kind":"class","name":"_BufferTransformer","id":"_BufferTransformer","children":[{"returnType":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]}]},"kind":"method","name":"bind","id":"bind1()","children":[{"ref":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]}]},"kind":"param","name":"stream","id":"stream"}],"line":"706"},{"kind":"constructor","name":"","id":"0()","line":"704"}],"isPrivate":true,"uri":"dart-sdk/lib/io/http_impl.dart","line":"703"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"interfaces":[{"name":"EventSink","refId":"dart.async/EventSink","arguments":[{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]}]}],"kind":"class","name":"_BufferTransformerSink","id":"_BufferTransformerSink","children":[{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"add","id":"add1()","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"param","name":"data","id":"data"}],"line":"672"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"addError","id":"addError2()","children":[{"ref":{"name":"Object","refId":"dart.core/Object"},"kind":"param","name":"error","id":"error"},{"ref":{"name":"StackTrace","refId":"dart.core/StackTrace"},"isOptional":true,"kind":"param","name":"stackTrace","id":"stackTrace"}],"line":"686"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"close","id":"close0()","line":"690"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"flush","id":"flush0()","line":"695"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"MIN_CHUNK_SIZE","id":"MIN_CHUNK_SIZE","line":"664"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"MAX_BUFFER_SIZE","id":"MAX_BUFFER_SIZE","line":"665"},{"ref":{"name":"BytesBuilder","refId":"dart.io/BytesBuilder"},"isFinal":true,"kind":"variable","name":"_builder","id":"_builder","isPrivate":true,"line":"667"},{"ref":{"name":"EventSink","refId":"dart.async/EventSink","arguments":[{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]}]},"isFinal":true,"kind":"variable","name":"_outSink","id":"_outSink","isPrivate":true,"line":"668"},{"kind":"constructor","name":"","id":"1()","children":[{"ref":{"name":"EventSink","refId":"dart.async/EventSink","arguments":[{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]}]},"initializedField":{"name":"_outSink","refId":"dart.io/_BufferTransformerSink/_outSink"},"kind":"param","name":"_outSink","id":"_outSink","isPrivate":true}],"line":"670"}],"isPrivate":true,"uri":"dart-sdk/lib/io/http_impl.dart","line":"663"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"interfaces":[{"name":"StreamConsumer","refId":"dart.async/StreamConsumer"}],"kind":"class","name":"_HttpOutboundConsumer","id":"_HttpOutboundConsumer","children":[{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_cancel","id":"_cancel0()","isPrivate":true,"line":"580"},{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"method","name":"_ignoreError","id":"_ignoreError1()","children":[{"kind":"param","name":"error","id":"error"}],"isPrivate":true,"line":"588"},{"kind":"method","name":"_ensureController","id":"_ensureController0()","isPrivate":true,"line":"592"},{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"method","name":"_done","id":"_done2()","children":[{"isOptional":true,"kind":"param","name":"error","id":"error"},{"ref":{"name":"StackTrace","refId":"dart.core/StackTrace"},"isOptional":true,"kind":"param","name":"stackTrace","id":"stackTrace"}],"isPrivate":true,"line":"619"},{"returnType":{"name":"Future","refId":"dart.async/Future"},"kind":"method","name":"addStream","id":"addStream1()","children":[{"kind":"param","name":"stream","id":"stream"}],"line":"630"},{"returnType":{"name":"Future","refId":"dart.async/Future"},"kind":"method","name":"close","id":"close0()","line":"649"},{"ref":{"name":"_HttpOutboundMessage","refId":"dart.io/_HttpOutboundMessage"},"isFinal":true,"kind":"variable","name":"_outbound","id":"_outbound","isPrivate":true,"line":"571"},{"ref":{"name":"StreamController","refId":"dart.async/StreamController"},"kind":"variable","name":"_controller","id":"_controller","isPrivate":true,"line":"572"},{"ref":{"name":"StreamSubscription","refId":"dart.async/StreamSubscription"},"kind":"variable","name":"_subscription","id":"_subscription","isPrivate":true,"line":"573"},{"ref":{"name":"Completer","refId":"dart.async/Completer"},"kind":"variable","name":"_closeCompleter","id":"_closeCompleter","isPrivate":true,"line":"574"},{"ref":{"name":"Completer","refId":"dart.async/Completer"},"kind":"variable","name":"_completer","id":"_completer","isPrivate":true,"line":"575"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"variable","name":"_socketError","id":"_socketError","isPrivate":true,"line":"576"},{"kind":"constructor","name":"","id":"1()","children":[{"ref":{"name":"_HttpOutboundMessage","refId":"dart.io/_HttpOutboundMessage"},"initializedField":{"name":"_outbound","refId":"dart.io/_HttpOutboundConsumer/_outbound"},"kind":"param","name":"_outbound","id":"_outbound","isPrivate":true}],"line":"578"}],"isPrivate":true,"uri":"dart-sdk/lib/io/http_impl.dart","line":"570"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"interfaces":[{"name":"IOSink","refId":"dart.io/IOSink"}],"kind":"class","name":"_HttpOutboundMessage","id":"_HttpOutboundMessage","children":[{"returnType":{"name":"void","refId":"void"},"isSetter":true,"kind":"method","name":"contentLength=","id":"contentLength=1()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"contentLength","id":"contentLength"}],"line":"424"},{"returnType":{"name":"void","refId":"void"},"isSetter":true,"kind":"method","name":"persistentConnection=","id":"persistentConnection=1()","children":[{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"param","name":"p","id":"p"}],"line":"429"},{"returnType":{"name":"void","refId":"void"},"isSetter":true,"kind":"method","name":"encoding=","id":"encoding=1()","children":[{"ref":{"name":"Encoding","refId":"dart.convert/Encoding"},"kind":"param","name":"value","id":"value"}],"line":"443"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"write","id":"write1()","children":[{"ref":{"name":"Object","refId":"dart.core/Object"},"kind":"param","name":"obj","id":"obj"}],"line":"447"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"writeAll","id":"writeAll2()","children":[{"ref":{"name":"Iterable","refId":"dart.core/Iterable"},"kind":"param","name":"objects","id":"objects"},{"ref":{"name":"String","refId":"dart.core/String"},"defaultValue":"\"\"","isOptional":true,"kind":"param","name":"separator","id":"separator"}],"line":"451"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"writeln","id":"writeln1()","children":[{"ref":{"name":"Object","refId":"dart.core/Object"},"defaultValue":"\"\"","isOptional":true,"kind":"param","name":"obj","id":"obj"}],"line":"455"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"writeCharCode","id":"writeCharCode1()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"charCode","id":"charCode"}],"line":"459"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"add","id":"add1()","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"param","name":"data","id":"data"}],"line":"463"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"addError","id":"addError2()","children":[{"kind":"param","name":"error","id":"error"},{"ref":{"name":"StackTrace","refId":"dart.core/StackTrace"},"isOptional":true,"kind":"param","name":"stackTrace","id":"stackTrace"}],"line":"468"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"T","refId":"dart.io/_HttpOutboundMessage/T"}]},"kind":"method","name":"addStream","id":"addStream1()","children":[{"ref":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]}]},"kind":"param","name":"stream","id":"stream"}],"line":"472"},{"returnType":{"name":"Future","refId":"dart.async/Future"},"kind":"method","name":"flush","id":"flush0()","line":"476"},{"returnType":{"name":"Future","refId":"dart.async/Future"},"kind":"method","name":"close","id":"close0()","line":"480"},{"returnType":{"name":"Future","refId":"dart.async/Future"},"kind":"method","name":"_writeHeaders","id":"_writeHeaders1()","children":[{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"true","isOptional":true,"isNamed":true,"kind":"param","name":"drainRequest","id":"drainRequest"}],"isPrivate":true,"line":"486"},{"returnType":{"name":"Future","refId":"dart.async/Future"},"kind":"method","name":"_addStream","id":"_addStream1()","children":[{"ref":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]}]},"kind":"param","name":"stream","id":"stream"}],"isPrivate":true,"line":"525"},{"returnType":{"name":"Future","refId":"dart.async/Future"},"kind":"method","name":"_close","id":"_close0()","isPrivate":true,"line":"547"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_writeHeader","id":"_writeHeader0()","isPrivate":true,"line":"566"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"property","name":"contentLength","id":"contentLength","line":"423"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"persistentConnection","id":"persistentConnection","line":"428"},{"ref":{"name":"Encoding","refId":"dart.convert/Encoding"},"kind":"property","name":"encoding","id":"encoding","line":"433"},{"ref":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"T","refId":"dart.io/_HttpOutboundMessage/T"}]},"kind":"property","name":"done","id":"done","line":"484"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"variable","name":"_ignoreBody","id":"_ignoreBody","isPrivate":true,"line":"402"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"variable","name":"_headersWritten","id":"_headersWritten","isPrivate":true,"line":"403"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"variable","name":"_asGZip","id":"_asGZip","isPrivate":true,"line":"404"},{"ref":{"name":"IOSink","refId":"dart.io/IOSink"},"kind":"variable","name":"_headersSink","id":"_headersSink","isPrivate":true,"line":"406"},{"ref":{"name":"IOSink","refId":"dart.io/IOSink"},"kind":"variable","name":"_dataSink","id":"_dataSink","isPrivate":true,"line":"407"},{"ref":{"name":"_HttpOutgoing","refId":"dart.io/_HttpOutgoing"},"isFinal":true,"kind":"variable","name":"_outgoing","id":"_outgoing","isPrivate":true,"line":"409"},{"ref":{"name":"Uri","refId":"dart.core/Uri"},"isFinal":true,"kind":"variable","name":"_uri","id":"_uri","isPrivate":true,"line":"410"},{"ref":{"name":"_HttpHeaders","refId":"dart.io/_HttpHeaders"},"isFinal":true,"kind":"variable","name":"headers","id":"headers","line":"412"},{"kind":"constructor","name":"","id":"3()","children":[{"ref":{"name":"Uri","refId":"dart.core/Uri"},"initializedField":{"name":"_uri","refId":"dart.io/_HttpOutboundMessage/_uri"},"kind":"param","name":"_uri","id":"_uri","isPrivate":true},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"protocolVersion","id":"protocolVersion","line":"415"},{"ref":{"name":"_HttpOutgoing","refId":"dart.io/_HttpOutgoing"},"kind":"param","name":"outgoing","id":"outgoing","line":"416"}],"line":"414"},{"kind":"typeparam","name":"T","id":"T"}],"isPrivate":true,"uri":"dart-sdk/lib/io/http_impl.dart","line":"399"},{"superclass":{"name":"_HttpInboundMessage","refId":"dart.io/_HttpInboundMessage"},"interfaces":[{"name":"HttpClientResponse","refId":"dart.io/HttpClientResponse"}],"kind":"class","name":"_HttpClientResponse","id":"_HttpClientResponse","children":[{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"HttpClientResponse","refId":"dart.io/HttpClientResponse"}]},"kind":"method","name":"redirect","id":"redirect3()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"isOptional":true,"kind":"param","name":"method","id":"method"},{"ref":{"name":"Uri","refId":"dart.core/Uri"},"isOptional":true,"kind":"param","name":"url","id":"url","line":"210"},{"ref":{"name":"bool","refId":"dart.core/bool"},"isOptional":true,"kind":"param","name":"followLoops","id":"followLoops","line":"211"}],"line":"209"},{"returnType":{"name":"StreamSubscription","refId":"dart.async/StreamSubscription","arguments":[{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]}]},"kind":"method","name":"listen","id":"listen4()","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"onData","id":"onData","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"param","name":"event","id":"event","uri":"dart-sdk/lib/io/http_impl.dart","line":"245"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]},{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"isNamed":true,"kind":"param","name":"onError","id":"onError","line":"246"},{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"isNamed":true,"kind":"param","name":"onDone","id":"onDone","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","uri":"dart-sdk/lib/core/function.dart","line":"13"}],"line":"247"},{"ref":{"name":"bool","refId":"dart.core/bool"},"isOptional":true,"isNamed":true,"kind":"param","name":"cancelOnError","id":"cancelOnError","line":"248"}],"line":"245"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"Socket","refId":"dart.io/Socket"}]},"kind":"method","name":"detachSocket","id":"detachSocket0()","line":"259"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"HttpClientResponse","refId":"dart.io/HttpClientResponse"}]},"kind":"method","name":"_authenticate","id":"_authenticate1()","children":[{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"param","name":"proxyAuth","id":"proxyAuth"}],"isPrivate":true,"line":"280"},{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"RedirectInfo","refId":"dart.io/RedirectInfo"}]},"kind":"property","name":"redirects","id":"redirects","line":"159"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"property","name":"statusCode","id":"statusCode","line":"177"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"property","name":"reasonPhrase","id":"reasonPhrase","line":"178"},{"ref":{"name":"X509Certificate","refId":"dart.io/X509Certificate"},"kind":"property","name":"certificate","id":"certificate","line":"180"},{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"Cookie","refId":"dart.io/Cookie"}]},"kind":"property","name":"cookies","id":"cookies","line":"185"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"isRedirect","id":"isRedirect","line":"197"},{"ref":{"name":"HttpConnectionInfo","refId":"dart.io/HttpConnectionInfo"},"kind":"property","name":"connectionInfo","id":"connectionInfo","line":"264"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"_shouldAuthenticateProxy","id":"_shouldAuthenticateProxy","isPrivate":true,"line":"266"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"_shouldAuthenticate","id":"_shouldAuthenticate","isPrivate":true,"line":"273"},{"ref":{"name":"_HttpClient","refId":"dart.io/_HttpClient"},"isFinal":true,"kind":"variable","name":"_httpClient","id":"_httpClient","isPrivate":true,"line":"162"},{"ref":{"name":"_HttpClientRequest","refId":"dart.io/_HttpClientRequest"},"isFinal":true,"kind":"variable","name":"_httpRequest","id":"_httpRequest","isPrivate":true,"line":"165"},{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"Cookie","refId":"dart.io/Cookie"}]},"kind":"variable","name":"_cookies","id":"_cookies","isPrivate":true,"line":"167"},{"kind":"constructor","name":"","id":"3()","children":[{"ref":{"name":"_HttpIncoming","refId":"dart.io/_HttpIncoming"},"kind":"param","name":"_incoming","id":"_incoming","isPrivate":true},{"ref":{"name":"_HttpClientRequest","refId":"dart.io/_HttpClientRequest"},"initializedField":{"name":"_httpRequest","refId":"dart.io/_HttpClientResponse/_httpRequest"},"kind":"param","name":"_httpRequest","id":"_httpRequest","isPrivate":true,"line":"170"},{"ref":{"name":"_HttpClient","refId":"dart.io/_HttpClient"},"initializedField":{"name":"_httpClient","refId":"dart.io/_HttpClientResponse/_httpClient"},"kind":"param","name":"_httpClient","id":"_httpClient","isPrivate":true,"line":"171"}],"line":"169"}],"isPrivate":true,"uri":"dart-sdk/lib/io/http_impl.dart","line":"157"},{"superclass":{"name":"_HttpInboundMessage","refId":"dart.io/_HttpInboundMessage"},"interfaces":[{"name":"HttpRequest","refId":"dart.io/HttpRequest"}],"kind":"class","name":"_HttpRequest","id":"_HttpRequest","children":[{"returnType":{"name":"StreamSubscription","refId":"dart.async/StreamSubscription","arguments":[{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]}]},"kind":"method","name":"listen","id":"listen4()","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"onData","id":"onData","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"param","name":"event","id":"event","uri":"dart-sdk/lib/io/http_impl.dart","line":"118"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]},{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"isNamed":true,"kind":"param","name":"onError","id":"onError","line":"119"},{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"isNamed":true,"kind":"param","name":"onDone","id":"onDone","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","uri":"dart-sdk/lib/core/function.dart","line":"13"}],"line":"120"},{"ref":{"name":"bool","refId":"dart.core/bool"},"isOptional":true,"isNamed":true,"kind":"param","name":"cancelOnError","id":"cancelOnError","line":"121"}],"line":"118"},{"ref":{"name":"Uri","refId":"dart.core/Uri"},"kind":"property","name":"uri","id":"uri","line":"128"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"property","name":"method","id":"method","line":"130"},{"ref":{"name":"HttpSession","refId":"dart.io/HttpSession"},"kind":"property","name":"session","id":"session","line":"132"},{"ref":{"name":"HttpConnectionInfo","refId":"dart.io/HttpConnectionInfo"},"kind":"property","name":"connectionInfo","id":"connectionInfo","line":"147"},{"ref":{"name":"X509Certificate","refId":"dart.io/X509Certificate"},"kind":"property","name":"certificate","id":"certificate","line":"149"},{"ref":{"name":"HttpResponse","refId":"dart.io/HttpResponse"},"isFinal":true,"kind":"variable","name":"response","id":"response","line":"85"},{"ref":{"name":"_HttpServer","refId":"dart.io/_HttpServer"},"isFinal":true,"kind":"variable","name":"_httpServer","id":"_httpServer","isPrivate":true,"line":"87"},{"ref":{"name":"_HttpConnection","refId":"dart.io/_HttpConnection"},"isFinal":true,"kind":"variable","name":"_httpConnection","id":"_httpConnection","isPrivate":true,"line":"89"},{"ref":{"name":"_HttpSession","refId":"dart.io/_HttpSession"},"kind":"variable","name":"_session","id":"_session","isPrivate":true,"line":"91"},{"kind":"constructor","name":"","id":"4()","children":[{"ref":{"name":"_HttpResponse","refId":"dart.io/_HttpResponse"},"initializedField":{"name":"response","refId":"dart.io/_HttpRequest/response"},"kind":"param","name":"response","id":"response"},{"ref":{"name":"_HttpIncoming","refId":"dart.io/_HttpIncoming"},"kind":"param","name":"_incoming","id":"_incoming","isPrivate":true,"line":"94"},{"ref":{"name":"_HttpServer","refId":"dart.io/_HttpServer"},"initializedField":{"name":"_httpServer","refId":"dart.io/_HttpRequest/_httpServer"},"kind":"param","name":"_httpServer","id":"_httpServer","isPrivate":true,"line":"95"},{"ref":{"name":"_HttpConnection","refId":"dart.io/_HttpConnection"},"initializedField":{"name":"_httpConnection","refId":"dart.io/_HttpRequest/_httpConnection"},"kind":"param","name":"_httpConnection","id":"_httpConnection","isPrivate":true,"line":"96"}],"line":"93"}],"isPrivate":true,"uri":"dart-sdk/lib/io/http_impl.dart","line":"84"},{"superclass":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]}]},"isAbstract":true,"kind":"class","name":"_HttpInboundMessage","id":"_HttpInboundMessage","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"Cookie","refId":"dart.io/Cookie"}]},"kind":"property","name":"cookies","id":"cookies","line":"72"},{"ref":{"name":"_HttpHeaders","refId":"dart.io/_HttpHeaders"},"kind":"property","name":"headers","id":"headers","line":"77"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"property","name":"protocolVersion","id":"protocolVersion","line":"78"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"property","name":"contentLength","id":"contentLength","line":"79"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"persistentConnection","id":"persistentConnection","line":"80"},{"ref":{"name":"_HttpIncoming","refId":"dart.io/_HttpIncoming"},"isFinal":true,"kind":"variable","name":"_incoming","id":"_incoming","isPrivate":true,"line":"67"},{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"Cookie","refId":"dart.io/Cookie"}]},"kind":"variable","name":"_cookies","id":"_cookies","isPrivate":true,"line":"68"},{"kind":"constructor","name":"","id":"1()","children":[{"ref":{"name":"_HttpIncoming","refId":"dart.io/_HttpIncoming"},"initializedField":{"name":"_incoming","refId":"dart.io/_HttpInboundMessage/_incoming"},"kind":"param","name":"_incoming","id":"_incoming","isPrivate":true}],"line":"70"}],"isPrivate":true,"uri":"dart-sdk/lib/io/http_impl.dart","line":"66"},{"superclass":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]}]},"kind":"class","name":"_HttpIncoming","id":"_HttpIncoming","children":[{"returnType":{"name":"StreamSubscription","refId":"dart.async/StreamSubscription","arguments":[{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]}]},"kind":"method","name":"listen","id":"listen4()","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"onData","id":"onData","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"param","name":"event","id":"event","uri":"dart-sdk/lib/io/http_impl.dart","line":"41"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]},{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"isNamed":true,"kind":"param","name":"onError","id":"onError","line":"42"},{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"isNamed":true,"kind":"param","name":"onDone","id":"onDone","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","uri":"dart-sdk/lib/core/function.dart","line":"13"}],"line":"43"},{"ref":{"name":"bool","refId":"dart.core/bool"},"isOptional":true,"isNamed":true,"kind":"param","name":"cancelOnError","id":"cancelOnError","line":"44"}],"line":"41"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"close","id":"close1()","children":[{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"param","name":"closing","id":"closing"}],"line":"59"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"property","name":"transferLength","id":"transferLength","line":"34"},{"ref":{"name":"Future","refId":"dart.async/Future"},"kind":"property","name":"dataDone","id":"dataDone","line":"57"},{"ref":{"name":"int","refId":"dart.core/int"},"isFinal":true,"kind":"variable","name":"_transferLength","id":"_transferLength","isPrivate":true,"line":"10"},{"ref":{"name":"Completer","refId":"dart.async/Completer"},"isFinal":true,"kind":"variable","name":"_dataCompleter","id":"_dataCompleter","isPrivate":true,"line":"11"},{"ref":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]}]},"kind":"variable","name":"_stream","id":"_stream","isPrivate":true,"line":"12"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"variable","name":"fullBodyRead","id":"fullBodyRead","line":"14"},{"ref":{"name":"_HttpHeaders","refId":"dart.io/_HttpHeaders"},"isFinal":true,"kind":"variable","name":"headers","id":"headers","line":"17"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"variable","name":"upgraded","id":"upgraded","line":"18"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"statusCode","id":"statusCode","line":"21"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"variable","name":"reasonPhrase","id":"reasonPhrase","line":"22"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"variable","name":"method","id":"method","line":"25"},{"ref":{"name":"Uri","refId":"dart.core/Uri"},"kind":"variable","name":"uri","id":"uri","line":"26"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"variable","name":"hasSubscriber","id":"hasSubscriber","line":"28"},{"kind":"constructor","name":"","id":"3()","children":[{"ref":{"name":"_HttpHeaders","refId":"dart.io/_HttpHeaders"},"initializedField":{"name":"headers","refId":"dart.io/_HttpIncoming/headers"},"kind":"param","name":"headers","id":"headers"},{"ref":{"name":"int","refId":"dart.core/int"},"initializedField":{"name":"_transferLength","refId":"dart.io/_HttpIncoming/_transferLength"},"kind":"param","name":"_transferLength","id":"_transferLength","isPrivate":true,"line":"37"},{"ref":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]}]},"initializedField":{"name":"_stream","refId":"dart.io/_HttpIncoming/_stream"},"kind":"param","name":"_stream","id":"_stream","isPrivate":true,"line":"38"}],"line":"36"}],"isPrivate":true,"uri":"dart-sdk/lib/io/http_impl.dart","line":"9"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"interfaces":[{"name":"Map","refId":"dart.core/Map","arguments":[{"name":"K","refId":"dart.io/_UnmodifiableMap/K"},{"name":"V","refId":"dart.io/_UnmodifiableMap/V"}]}],"kind":"class","name":"_UnmodifiableMap","id":"_UnmodifiableMap","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"method","name":"containsValue","id":"containsValue1()","children":[{"ref":{"name":"Object","refId":"dart.core/Object"},"kind":"param","name":"value","id":"value"}],"line":"831"},{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"method","name":"containsKey","id":"containsKey1()","children":[{"ref":{"name":"Object","refId":"dart.core/Object"},"kind":"param","name":"key","id":"key"}],"line":"832"},{"returnType":{"name":"V","refId":"dart.io/_UnmodifiableMap/V"},"isOperator":true,"kind":"method","name":"[]","id":"[]1()","children":[{"ref":{"name":"Object","refId":"dart.core/Object"},"kind":"param","name":"key","id":"key"}],"line":"833"},{"returnType":{"name":"void","refId":"void"},"isOperator":true,"kind":"method","name":"[]=","id":"[]=2()","children":[{"ref":{"name":"K","refId":"dart.io/_UnmodifiableMap/K"},"kind":"param","name":"key","id":"key"},{"ref":{"name":"V","refId":"dart.io/_UnmodifiableMap/V"},"kind":"param","name":"value","id":"value"}],"line":"834"},{"returnType":{"name":"V","refId":"dart.io/_UnmodifiableMap/V"},"kind":"method","name":"putIfAbsent","id":"putIfAbsent2()","children":[{"ref":{"name":"K","refId":"dart.io/_UnmodifiableMap/K"},"kind":"param","name":"key","id":"key"},{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"ifAbsent","id":"ifAbsent","children":[{"returnType":{"name":"V","refId":"dart.io/_UnmodifiableMap/V"},"kind":"functiontype","name":"Function","id":"Function","uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"837"},{"kind":"method","name":"addAll","id":"addAll1()","children":[{"ref":{"name":"Map","refId":"dart.core/Map"},"kind":"param","name":"other","id":"other"}],"line":"840"},{"returnType":{"name":"V","refId":"dart.io/_UnmodifiableMap/V"},"kind":"method","name":"remove","id":"remove1()","children":[{"ref":{"name":"Object","refId":"dart.core/Object"},"kind":"param","name":"key","id":"key"}],"line":"843"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"clear","id":"clear0()","line":"846"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"forEach","id":"forEach1()","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"f","id":"f","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"K","refId":"dart.io/_UnmodifiableMap/K"},"kind":"param","name":"key","id":"key","uri":"dart-sdk/lib/io/http_headers.dart","line":"849"},{"ref":{"name":"V","refId":"dart.io/_UnmodifiableMap/V"},"kind":"param","name":"value","id":"value","uri":"dart-sdk/lib/io/http_headers.dart","line":"849"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"849"},{"ref":{"name":"Iterable","refId":"dart.core/Iterable","arguments":[{"name":"K","refId":"dart.io/_UnmodifiableMap/K"}]},"kind":"property","name":"keys","id":"keys","line":"850"},{"ref":{"name":"Iterable","refId":"dart.core/Iterable","arguments":[{"name":"V","refId":"dart.io/_UnmodifiableMap/V"}]},"kind":"property","name":"values","id":"values","line":"851"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"property","name":"length","id":"length","line":"852"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"isEmpty","id":"isEmpty","line":"853"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"isNotEmpty","id":"isNotEmpty","line":"854"},{"ref":{"name":"Map","refId":"dart.core/Map"},"isFinal":true,"kind":"variable","name":"_map","id":"_map","isPrivate":true,"line":"828"},{"kind":"constructor","name":"","id":"1()","children":[{"ref":{"name":"Map","refId":"dart.core/Map"},"initializedField":{"name":"_map","refId":"dart.io/_UnmodifiableMap/_map"},"kind":"param","name":"_map","id":"_map","isPrivate":true}],"line":"829"},{"kind":"typeparam","name":"K","id":"K"},{"kind":"typeparam","name":"V","id":"V"}],"isPrivate":true,"uri":"dart-sdk/lib/io/http_headers.dart","line":"827"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"interfaces":[{"name":"Cookie","refId":"dart.io/Cookie"}],"kind":"class","name":"_Cookie","id":"_Cookie","children":[{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_parseSetCookieValue","id":"_parseSetCookieValue1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"s","id":"s"}],"isPrivate":true,"line":"705"},{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"method","name":"toString","id":"toString0()","line":"790"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"variable","name":"name","id":"name","line":"816"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"variable","name":"value","id":"value","line":"817"},{"ref":{"name":"DateTime","refId":"dart.core/DateTime"},"kind":"variable","name":"expires","id":"expires","line":"818"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"maxAge","id":"maxAge","line":"819"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"variable","name":"domain","id":"domain","line":"820"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"variable","name":"path","id":"path","line":"821"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"variable","name":"httpOnly","id":"httpOnly","line":"822"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"variable","name":"secure","id":"secure","line":"823"},{"kind":"constructor","name":"","id":"2()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"isOptional":true,"initializedField":{"name":"name","refId":"dart.io/_Cookie/name"},"kind":"param","name":"name","id":"name"},{"ref":{"name":"String","refId":"dart.core/String"},"isOptional":true,"initializedField":{"name":"value","refId":"dart.io/_Cookie/value"},"kind":"param","name":"value","id":"value"}],"line":"697"},{"kind":"constructor","name":"fromSetCookieValue","id":"fromSetCookieValue1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"value","id":"value"}],"line":"699"}],"isPrivate":true,"uri":"dart-sdk/lib/io/http_headers.dart","line":"696"},{"superclass":{"name":"_HeaderValue","refId":"dart.io/_HeaderValue"},"interfaces":[{"name":"ContentType","refId":"dart.io/ContentType"}],"kind":"class","name":"_ContentType","id":"_ContentType","children":[{"returnType":{"name":"_ContentType","refId":"dart.io/_ContentType"},"isStatic":true,"kind":"method","name":"parse","id":"parse1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"value","id":"value"}],"line":"671"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"property","name":"mimeType","id":"mimeType","line":"686"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"property","name":"primaryType","id":"primaryType","line":"688"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"property","name":"subType","id":"subType","line":"690"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"property","name":"charset","id":"charset","line":"692"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"variable","name":"_primaryType","id":"_primaryType","isPrivate":true,"line":"646"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"variable","name":"_subType","id":"_subType","isPrivate":true,"line":"647"},{"kind":"constructor","name":"","id":"4()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"primaryType","id":"primaryType"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"subType","id":"subType","line":"650"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"charset","id":"charset","line":"651"},{"ref":{"name":"Map","refId":"dart.core/Map","arguments":[{"name":"String","refId":"dart.core/String"},{"name":"String","refId":"dart.core/String"}]},"kind":"param","name":"parameters","id":"parameters","line":"652"}],"line":"649"},{"kind":"constructor","name":"_","id":"_0()","isPrivate":true,"line":"669"}],"isPrivate":true,"uri":"dart-sdk/lib/io/http_headers.dart","line":"645"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"interfaces":[{"name":"HeaderValue","refId":"dart.io/HeaderValue"}],"kind":"class","name":"_HeaderValue","id":"_HeaderValue","children":[{"returnType":{"name":"_HeaderValue","refId":"dart.io/_HeaderValue"},"isStatic":true,"kind":"method","name":"parse","id":"parse3()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"value","id":"value"},{"defaultValue":"\";\"","isOptional":true,"isNamed":true,"kind":"param","name":"parameterSeparator","id":"parameterSeparator","line":"510"},{"defaultValue":"false","isOptional":true,"isNamed":true,"kind":"param","name":"preserveBackslash","id":"preserveBackslash","line":"511"}],"line":"509"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_ensureParameters","id":"_ensureParameters0()","isPrivate":true,"line":"520"},{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"method","name":"toString","id":"toString0()","line":"531"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_parse","id":"_parse3()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"s","id":"s"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"parameterSeparator","id":"parameterSeparator"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"param","name":"preserveBackslash","id":"preserveBackslash"}],"isPrivate":true,"line":"545"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"property","name":"value","id":"value","line":"518"},{"ref":{"name":"Map","refId":"dart.core/Map","arguments":[{"name":"String","refId":"dart.core/String"},{"name":"String","refId":"dart.core/String"}]},"kind":"property","name":"parameters","id":"parameters","line":"526"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"variable","name":"_value","id":"_value","isPrivate":true,"line":"499"},{"ref":{"name":"_UnmodifiableMap","refId":"dart.io/_UnmodifiableMap","arguments":[{"name":"String","refId":"dart.core/String"},{"name":"String","refId":"dart.core/String"}]},"kind":"variable","name":"_parameters","id":"_parameters","isPrivate":true,"line":"500"},{"kind":"constructor","name":"","id":"2()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"defaultValue":"\"\"","isOptional":true,"initializedField":{"name":"_value","refId":"dart.io/_HeaderValue/_value"},"kind":"param","name":"_value","id":"_value","isPrivate":true},{"ref":{"name":"Map","refId":"dart.core/Map","arguments":[{"name":"String","refId":"dart.core/String"},{"name":"String","refId":"dart.core/String"}]},"isOptional":true,"kind":"param","name":"parameters","id":"parameters"}],"line":"502"}],"isPrivate":true,"uri":"dart-sdk/lib/io/http_headers.dart","line":"498"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"interfaces":[{"name":"HttpHeaders","refId":"dart.io/HttpHeaders"}],"kind":"class","name":"_HttpHeaders","id":"_HttpHeaders","children":[{"returnType":{"name":"List","refId":"dart.core/List","arguments":[{"name":"String","refId":"dart.core/String"}]},"isOperator":true,"kind":"method","name":"[]","id":"[]1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"name","id":"name"}],"line":"27"},{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"method","name":"value","id":"value1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"name","id":"name"}],"line":"32"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"add","id":"add2()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"name","id":"name"},{"kind":"param","name":"value","id":"value"}],"line":"42"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_addAll","id":"_addAll2()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"name","id":"name"},{"kind":"param","name":"value","id":"value"}],"isPrivate":true,"line":"47"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"set","id":"set2()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"name","id":"name"},{"ref":{"name":"Object","refId":"dart.core/Object"},"kind":"param","name":"value","id":"value"}],"line":"57"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"remove","id":"remove2()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"name","id":"name"},{"ref":{"name":"Object","refId":"dart.core/Object"},"kind":"param","name":"value","id":"value"}],"line":"64"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"removeAll","id":"removeAll1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"name","id":"name"}],"line":"77"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"forEach","id":"forEach1()","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"f","id":"f","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"name","id":"name","uri":"dart-sdk/lib/io/http_headers.dart","line":"83"},{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"String","refId":"dart.core/String"}]},"kind":"param","name":"values","id":"values","uri":"dart-sdk/lib/io/http_headers.dart","line":"83"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"83"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"noFolding","id":"noFolding1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"name","id":"name"}],"line":"87"},{"returnType":{"name":"void","refId":"void"},"isSetter":true,"kind":"method","name":"persistentConnection=","id":"persistentConnection=1()","children":[{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"param","name":"persistentConnection","id":"persistentConnection"}],"line":"94"},{"returnType":{"name":"void","refId":"void"},"isSetter":true,"kind":"method","name":"contentLength=","id":"contentLength=1()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"contentLength","id":"contentLength"}],"line":"120"},{"returnType":{"name":"void","refId":"void"},"isSetter":true,"kind":"method","name":"chunkedTransferEncoding=","id":"chunkedTransferEncoding=1()","children":[{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"param","name":"chunkedTransferEncoding","id":"chunkedTransferEncoding"}],"line":"144"},{"returnType":{"name":"void","refId":"void"},"isSetter":true,"kind":"method","name":"host=","id":"host=1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"host","id":"host"}],"line":"167"},{"returnType":{"name":"void","refId":"void"},"isSetter":true,"kind":"method","name":"port=","id":"port=1()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"port","id":"port"}],"line":"175"},{"returnType":{"name":"void","refId":"void"},"isSetter":true,"kind":"method","name":"ifModifiedSince=","id":"ifModifiedSince=1()","children":[{"ref":{"name":"DateTime","refId":"dart.core/DateTime"},"kind":"param","name":"ifModifiedSince","id":"ifModifiedSince"}],"line":"193"},{"returnType":{"name":"void","refId":"void"},"isSetter":true,"kind":"method","name":"date=","id":"date=1()","children":[{"ref":{"name":"DateTime","refId":"dart.core/DateTime"},"kind":"param","name":"date","id":"date"}],"line":"212"},{"returnType":{"name":"void","refId":"void"},"isSetter":true,"kind":"method","name":"expires=","id":"expires=1()","children":[{"ref":{"name":"DateTime","refId":"dart.core/DateTime"},"kind":"param","name":"expires","id":"expires"}],"line":"231"},{"returnType":{"name":"void","refId":"void"},"isSetter":true,"kind":"method","name":"contentType=","id":"contentType=1()","children":[{"ref":{"name":"ContentType","refId":"dart.io/ContentType"},"kind":"param","name":"contentType","id":"contentType"}],"line":"247"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_add","id":"_add2()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"name","id":"name"},{"kind":"param","name":"value","id":"value"}],"isPrivate":true,"line":"253"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_addValue","id":"_addValue2()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"name","id":"name"},{"ref":{"name":"Object","refId":"dart.core/Object"},"kind":"param","name":"value","id":"value"}],"isPrivate":true,"line":"334"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_set","id":"_set2()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"name","id":"name"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"value","id":"value"}],"isPrivate":true,"line":"347"},{"kind":"method","name":"_checkMutable","id":"_checkMutable0()","isPrivate":true,"line":"354"},{"kind":"method","name":"_updateHostHeader","id":"_updateHostHeader0()","isPrivate":true,"line":"358"},{"kind":"method","name":"_foldHeader","id":"_foldHeader1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"name","id":"name"}],"isPrivate":true,"line":"364"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_finalize","id":"_finalize0()","isPrivate":true,"line":"373"},{"returnType":{"name":"int","refId":"dart.core/int"},"kind":"method","name":"_write","id":"_write2()","children":[{"ref":{"name":"Uint8List","refId":"dart.typed_data/Uint8List"},"kind":"param","name":"buffer","id":"buffer"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"offset","id":"offset"}],"isPrivate":true,"line":"377"},{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"method","name":"toString","id":"toString0()","line":"409"},{"returnType":{"name":"List","refId":"dart.core/List","arguments":[{"name":"Cookie","refId":"dart.io/Cookie"}]},"kind":"method","name":"_parseCookies","id":"_parseCookies0()","isPrivate":true,"line":"432"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"persistentConnection","id":"persistentConnection","line":"92"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"property","name":"contentLength","id":"contentLength","line":"118"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"chunkedTransferEncoding","id":"chunkedTransferEncoding","line":"142"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"property","name":"host","id":"host","line":"165"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"property","name":"port","id":"port","line":"173"},{"ref":{"name":"DateTime","refId":"dart.core/DateTime"},"kind":"property","name":"ifModifiedSince","id":"ifModifiedSince","line":"181"},{"ref":{"name":"DateTime","refId":"dart.core/DateTime"},"kind":"property","name":"date","id":"date","line":"200"},{"ref":{"name":"DateTime","refId":"dart.core/DateTime"},"kind":"property","name":"expires","id":"expires","line":"219"},{"ref":{"name":"ContentType","refId":"dart.io/ContentType"},"kind":"property","name":"contentType","id":"contentType","line":"238"},{"ref":{"name":"Map","refId":"dart.core/Map","arguments":[{"name":"String","refId":"dart.core/String"},{"name":"List","refId":"dart.core/List","arguments":[{"name":"String","refId":"dart.core/String"}]}]},"isFinal":true,"kind":"variable","name":"_headers","id":"_headers","isPrivate":true,"line":"8"},{"ref":{"name":"String","refId":"dart.core/String"},"isFinal":true,"kind":"variable","name":"protocolVersion","id":"protocolVersion","line":"9"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"variable","name":"_mutable","id":"_mutable","isPrivate":true,"line":"11"},{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"String","refId":"dart.core/String"}]},"kind":"variable","name":"_noFoldingHeaders","id":"_noFoldingHeaders","isPrivate":true,"line":"12"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"_contentLength","id":"_contentLength","isPrivate":true,"line":"14"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"variable","name":"_persistentConnection","id":"_persistentConnection","isPrivate":true,"line":"15"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"variable","name":"_chunkedTransferEncoding","id":"_chunkedTransferEncoding","isPrivate":true,"line":"16"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"variable","name":"_host","id":"_host","isPrivate":true,"line":"17"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"_port","id":"_port","isPrivate":true,"line":"18"},{"kind":"constructor","name":"","id":"1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"initializedField":{"name":"protocolVersion","refId":"dart.io/_HttpHeaders/protocolVersion"},"kind":"param","name":"protocolVersion","id":"protocolVersion"}],"line":"20"}],"isPrivate":true,"uri":"dart-sdk/lib/io/http_headers.dart","line":"7"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"kind":"class","name":"HttpDate","id":"HttpDate","comment":"\nUtility functions for working with dates with HTTP specific date\nformats.\n","children":[{"returnType":{"name":"String","refId":"dart.core/String"},"isStatic":true,"kind":"method","name":"format","id":"format1()","comment":"\nFormat a date according to\n[RFC-1123](http://tools.ietf.org/html/rfc1123 \"RFC-1123\"),\ne.g. `Thu, 1 Jan 1970 00:00:00 GMT`.\n","children":[{"ref":{"name":"DateTime","refId":"dart.core/DateTime"},"kind":"param","name":"date","id":"date"}],"line":"40"},{"returnType":{"name":"DateTime","refId":"dart.core/DateTime"},"isStatic":true,"kind":"method","name":"parse","id":"parse1()","comment":"\nParse a date string in either of the formats\n[RFC-1123](http://tools.ietf.org/html/rfc1123 \"RFC-1123\"),\n[RFC-850](http://tools.ietf.org/html/rfc850 \"RFC-850\") or\nANSI C's asctime() format. These formats are listed here.\n\n    Thu, 1 Jan 1970 00:00:00 GMT\n    Thursday, 1-Jan-1970 00:00:00 GMT\n    Thu Jan  1 00:00:00 1970\n\nFor more information see [RFC-2616 section 3.1.1]\n(http://tools.ietf.org/html/rfc2616#section-3.3.1\n\"RFC-2616 section 3.1.1\").\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"date","id":"date"}],"line":"78"},{"returnType":{"name":"DateTime","refId":"dart.core/DateTime"},"isStatic":true,"kind":"method","name":"_parseCookieDate","id":"_parseCookieDate1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"date","id":"date"}],"isPrivate":true,"line":"207"}],"uri":"dart-sdk/lib/io/http_date.dart","line":"11"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"interfaces":[{"name":"HttpException","refId":"dart.io/HttpException"}],"isThrowable":true,"kind":"class","name":"RedirectException","id":"RedirectException","children":[{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"method","name":"toString","id":"toString0()","line":"1605"},{"ref":{"name":"Uri","refId":"dart.core/Uri"},"kind":"property","name":"uri","id":"uri","line":"1607"},{"ref":{"name":"String","refId":"dart.core/String"},"isFinal":true,"kind":"variable","name":"message","id":"message","line":"1599"},{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"RedirectInfo","refId":"dart.io/RedirectInfo"}]},"isFinal":true,"kind":"variable","name":"redirects","id":"redirects","line":"1600"},{"kind":"constructor","name":"","id":"2()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"initializedField":{"name":"message","refId":"dart.io/RedirectException/message"},"kind":"param","name":"message","id":"message"},{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"RedirectInfo","refId":"dart.io/RedirectInfo"}]},"initializedField":{"name":"redirects","refId":"dart.io/RedirectException/redirects"},"kind":"param","name":"redirects","id":"redirects","line":"1603"}],"line":"1602"}],"uri":"dart-sdk/lib/io/http.dart","line":"1598"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"interfaces":[{"name":"IOException","refId":"dart.io/IOException"}],"isThrowable":true,"kind":"class","name":"HttpException","id":"HttpException","children":[{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"method","name":"toString","id":"toString0()","line":"1586"},{"ref":{"name":"String","refId":"dart.core/String"},"isFinal":true,"kind":"variable","name":"message","id":"message","line":"1581"},{"ref":{"name":"Uri","refId":"dart.core/Uri"},"isFinal":true,"kind":"variable","name":"uri","id":"uri","line":"1582"},{"kind":"constructor","name":"","id":"2()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"initializedField":{"name":"message","refId":"dart.io/HttpException/message"},"kind":"param","name":"message","id":"message"},{"ref":{"name":"Uri","refId":"dart.core/Uri"},"isOptional":true,"isNamed":true,"initializedField":{"name":"uri","refId":"dart.io/HttpException/uri"},"kind":"param","name":"uri","id":"uri"}],"line":"1584"}],"uri":"dart-sdk/lib/io/http.dart","line":"1580"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"kind":"class","name":"DetachedSocket","id":"DetachedSocket","comment":"\nWhen detaching a socket from either the [:HttpServer:] or the\n[:HttpClient:] due to a HTTP connection upgrade there might be\nunparsed data already read from the socket. This unparsed data\ntogether with the detached socket is returned in an instance of\nthis class.\n","children":[{"ref":{"name":"Socket","refId":"dart.io/Socket"},"kind":"property","name":"socket","id":"socket","line":"1575"},{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"property","name":"unparsedData","id":"unparsedData","line":"1576"}],"uri":"dart-sdk/lib/io/http.dart","line":"1574"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"kind":"class","name":"RedirectInfo","id":"RedirectInfo","comment":"\nRedirect information.\n","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"property","name":"statusCode","id":"statusCode","comment":"\nReturns the status code used for the redirect.\n","line":"1553"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"property","name":"method","id":"method","comment":"\nReturns the method used for the redirect.\n","line":"1558"},{"ref":{"name":"Uri","refId":"dart.core/Uri"},"kind":"property","name":"location","id":"location","comment":"\nReturns the location for the redirect.\n","line":"1563"}],"uri":"dart-sdk/lib/io/http.dart","line":"1549"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"kind":"class","name":"HttpConnectionInfo","id":"HttpConnectionInfo","comment":"\nInformation about an [HttpRequest], [HttpResponse], [HttpClientRequest], or\n[HttpClientResponse] connection.\n","children":[{"ref":{"name":"InternetAddress","refId":"dart.io/InternetAddress"},"kind":"property","name":"remoteAddress","id":"remoteAddress","line":"1540"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"property","name":"remotePort","id":"remotePort","line":"1541"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"property","name":"localPort","id":"localPort","line":"1542"}],"uri":"dart-sdk/lib/io/http.dart","line":"1539"},{"superclass":{"name":"HttpClientCredentials","refId":"dart.io/HttpClientCredentials"},"isAbstract":true,"kind":"class","name":"HttpClientDigestCredentials","id":"HttpClientDigestCredentials","comment":"\nRepresents credentials for digest authentication. Digest\nauthentication is only supported for servers using the MD5\nalgorithm and quality of protection (qop) of either \"none\" or\n\"auth\".\n","children":[{"returnType":{"name":"HttpClientDigestCredentials","refId":"dart.io/HttpClientDigestCredentials"},"kind":"constructor","name":"","id":"2()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"username","id":"username"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"password","id":"password"}],"line":"1530"}],"uri":"dart-sdk/lib/io/http.dart","line":"1529"},{"superclass":{"name":"HttpClientCredentials","refId":"dart.io/HttpClientCredentials"},"isAbstract":true,"kind":"class","name":"HttpClientBasicCredentials","id":"HttpClientBasicCredentials","comment":"\nRepresents credentials for basic authentication.\n","children":[{"returnType":{"name":"HttpClientBasicCredentials","refId":"dart.io/HttpClientBasicCredentials"},"kind":"constructor","name":"","id":"2()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"username","id":"username"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"password","id":"password"}],"line":"1518"}],"uri":"dart-sdk/lib/io/http.dart","line":"1517"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"kind":"class","name":"HttpClientCredentials","id":"HttpClientCredentials","uri":"dart-sdk/lib/io/http.dart","line":"1511"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"interfaces":[{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]}]}],"kind":"class","name":"HttpClientResponse","id":"HttpClientResponse","comment":"\nHTTP response for a client connection. The [HttpClientResponse] is a\n[Stream] of the body content of the response. Listen to the body to handle\nthe data and be notified once the entire body is received.\n","children":[{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"HttpClientResponse","refId":"dart.io/HttpClientResponse"}]},"kind":"method","name":"redirect","id":"redirect3()","comment":"\nRedirects this connection to a new URL. The default value for\n[method] is the method for the current request. The default value\nfor [url] is the value of the [HttpHeaders.LOCATION] header of\nthe current response. All body data must have been read from the\ncurrent response before calling [redirect].\n\nAll headers added to the request will be added to the redirection\nrequest. However, any body sent with the request will not be\npart of the redirection request.\n\nIf [followLoops] is set to [true], redirect will follow the redirect,\neven if the URL was already visited. The default value is [false].\n\n[redirect] will ignore [maxRedirects] and will always perform the redirect.\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"isOptional":true,"kind":"param","name":"method","id":"method"},{"ref":{"name":"Uri","refId":"dart.core/Uri"},"isOptional":true,"kind":"param","name":"url","id":"url","line":"1473"},{"ref":{"name":"bool","refId":"dart.core/bool"},"isOptional":true,"kind":"param","name":"followLoops","id":"followLoops","line":"1474"}],"line":"1472"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"Socket","refId":"dart.io/Socket"}]},"kind":"method","name":"detachSocket","id":"detachSocket0()","comment":"\nDetach the underlying socket from the HTTP client. When the\nsocket is detached the HTTP client will no longer perform any\noperations on it.\n\nThis is normally used when a HTTP upgrade is negotiated and the\ncommunication should continue with a different protocol.\n","line":"1490"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"property","name":"statusCode","id":"statusCode","comment":"\nReturns the status code.\n","line":"1423"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"property","name":"reasonPhrase","id":"reasonPhrase","comment":"\nReturns the reason phrase associated with the status code.\n","line":"1428"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"property","name":"contentLength","id":"contentLength","comment":"\nReturns the content length of the response body. Returns -1 if the size of\nthe response body is not known in advance.\n","line":"1434"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"persistentConnection","id":"persistentConnection","comment":"\nGets the persistent connection state returned by the server.\n","line":"1439"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"isRedirect","id":"isRedirect","comment":"\nReturns whether the status code is one of the normal redirect\ncodes [HttpStatus.MOVED_PERMANENTLY], [HttpStatus.FOUND],\n[HttpStatus.MOVED_TEMPORARILY], [HttpStatus.SEE_OTHER] and\n[HttpStatus.TEMPORARY_REDIRECT].\n","line":"1447"},{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"RedirectInfo","refId":"dart.io/RedirectInfo"}]},"kind":"property","name":"redirects","id":"redirects","comment":"\nReturns the series of redirects this connection has been through. The\nlist will be empty if no redirects were followed. [redirects] will be\nupdated both in the case of an automatic and a manual redirect.\n","line":"1454"},{"ref":{"name":"HttpHeaders","refId":"dart.io/HttpHeaders"},"kind":"property","name":"headers","id":"headers","comment":"\nReturns the response headers.\n","line":"1480"},{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"Cookie","refId":"dart.io/Cookie"}]},"kind":"property","name":"cookies","id":"cookies","comment":"\nCookies set by the server (from the 'set-cookie' header).\n","line":"1495"},{"ref":{"name":"X509Certificate","refId":"dart.io/X509Certificate"},"kind":"property","name":"certificate","id":"certificate","comment":"\nReturns the certificate of the HTTPS server providing the response.\nReturns null if the connection is not a secure TLS or SSL connection.\n","line":"1501"},{"ref":{"name":"HttpConnectionInfo","refId":"dart.io/HttpConnectionInfo"},"kind":"property","name":"connectionInfo","id":"connectionInfo","comment":"\nGets information about the client connection. Returns [null] if the socket\nis not available.\n","line":"1507"}],"uri":"dart-sdk/lib/io/http.dart","line":"1419"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"interfaces":[{"name":"IOSink","refId":"dart.io/IOSink"}],"kind":"class","name":"HttpClientRequest","id":"HttpClientRequest","comment":"\nHTTP request for a client connection.\n\nThis object has a number of properties for setting up the HTTP\nheader of the request. When the header has been set up the methods\nfrom the [IOSink] can be used to write the actual body of the HTTP\nrequest. When one of the [IOSink] methods is used for the first\ntime the request header is send. Calling any methods that will\nchange the header after it is sent will throw an exception.\n\nWhen writing string data through the [IOSink] the\nencoding used will be determined from the \"charset\" parameter of\nthe \"Content-Type\" header.\n\n    HttpClientRequest request = ...\n    request.headers.contentType\n        = new ContentType(\"application\", \"json\", charset: \"utf-8\");\n    request.write(...);  // Strings written will be UTF-8 encoded.\n\nIf no charset is provided the default of ISO-8859-1 (Latin 1) will\nbe used.\n\n    HttpClientRequest request = ...\n    request.headers.add(HttpHeaders.CONTENT_TYPE, \"text/plain\");\n    request.write(...);  // Strings written will be ISO-8859-1 encoded.\n\nIf an unsupported encoding is used an exception will be thrown if\nusing one of the write methods taking a string.\n","children":[{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"HttpClientResponse","refId":"dart.io/HttpClientResponse"}]},"kind":"method","name":"close","id":"close0()","comment":"\nClose the request for input. Returns the value of [done].\n","line":"1375"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"property","name":"method","id":"method","comment":"\nThe method of the request.\n","line":"1335"},{"ref":{"name":"Uri","refId":"dart.core/Uri"},"kind":"property","name":"uri","id":"uri","comment":"\nThe uri of the request.\n","line":"1340"},{"ref":{"name":"HttpHeaders","refId":"dart.io/HttpHeaders"},"kind":"property","name":"headers","id":"headers","comment":"\nReturns the request headers.\n","line":"1352"},{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"Cookie","refId":"dart.io/Cookie"}]},"kind":"property","name":"cookies","id":"cookies","comment":"\nCookies to present to the server (in the 'cookie' header).\n","line":"1357"},{"ref":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"HttpClientResponse","refId":"dart.io/HttpClientResponse"}]},"kind":"property","name":"done","id":"done","comment":"\nA [HttpClientResponse] future that will complete once the response is\navailable. If an error occurs before the response is available, this\nfuture will complete with an error.\n","line":"1370"},{"ref":{"name":"HttpConnectionInfo","refId":"dart.io/HttpConnectionInfo"},"kind":"property","name":"connectionInfo","id":"connectionInfo","comment":"\nGet information about the client connection. Returns [null] if the socket\nis not available.\n","line":"1410"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"contentLength","id":"contentLength","comment":"\nGets and sets the content length of the request. If the size of\nthe request is not known in advance set content length to -1,\nwhich is also the default.\n","line":"1347"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"variable","name":"persistentConnection","id":"persistentConnection","comment":"\nGets and sets the requested persistent connection state.\nThe default value is [:true:].\n","line":"1363"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"variable","name":"followRedirects","id":"followRedirects","comment":"\nSet this property to [:true:] if this request should\nautomatically follow redirects. The default is [:true:].\n\nAutomatic redirect will only happen for \"GET\" and \"HEAD\" requests\nand only for the status codes [:HttpHeaders.MOVED_PERMANENTLY:]\n(301), [:HttpStatus.FOUND:] (302),\n[:HttpStatus.MOVED_TEMPORARILY:] (302, alias for\n[:HttpStatus.FOUND:]), [:HttpStatus.SEE_OTHER:] (303) and\n[:HttpStatus.TEMPORARY_REDIRECT:] (307). For\n[:HttpStatus.SEE_OTHER:] (303) autmatic redirect will also happen\nfor \"POST\" requests with the method changed to \"GET\" when\nfollowing the redirect.\n\nAll headers added to the request will be added to the redirection\nrequest(s). However, any body send with the request will not be\npart of the redirection request(s).\n","line":"1395"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"maxRedirects","id":"maxRedirects","comment":"\nSet this property to the maximum number of redirects to follow\nwhen [followRedirects] is [:true:]. If this number is exceeded the\n[onError] callback will be called with a [RedirectException].\n\nThe default value is 5.\n","line":"1404"}],"uri":"dart-sdk/lib/io/http.dart","line":"1331"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"kind":"class","name":"HttpClient","id":"HttpClient","comment":"\nA client that receives content, such as web pages, from\na server using the HTTP protocol.\n\nHttpClient contains a number of methods to send a HTTP request\nto a HTTP server and receive a HTTP response back.\n\nThis is a two-step process, triggered by two futures. When the\nfirst future completes with a [HttpClientRequest] the underlying\nnetwork connection has been established, but no data has yet been\nsent. The HTTP headers and body can be set on the request, and\n[:close:] is called to sent it to the server.\n\nThe second future, which is returned by [:close:], completes with\nan [HttpClientResponse] object when the response is received from\nthe server. This object contains the headers and body of the\nresponse.\n\nThe future for [HttpClientRequest] is created by methods such as\n[getUrl] and [open].\n\nWhen the HTTP response is ready a [HttpClientResponse] object is\nprovided which provides access to the headers and body of the response. The\nbody is available as a stream implemented by [HttpClientResponse].\nIf a body is present, it must be read. Otherwise, it'll lead to a resource\nleaks. Consider using [HttpClientResponse.drain] if the body is unused.\n\n    HttpClient client = new HttpClient();\n    client.getUrl(Uri.parse(\"http://www.example.com/\"))\n        .then((HttpClientRequest request) {\n          // Prepare the request then call close on it to send it.\n          return request.close();\n        })\n        .then((HttpClientResponse response) {\n         // Process the response.\n        });\n\nAll [HttpClient] requests set the following header by default:\n\n    Accept-Encoding: gzip\n\nThis allows the HTTP server to use gzip compression for the body if\npossible. If this behavior is not desired set the\n\"Accept-Encoding\" header to something else.\n\nThe [HttpClient] supports persistent connections and caches network\nconnections to reuse then for multiple requests whenever\npossible. This means that network connections can be kept open for\nsome time after a request have completed. Use [:HttpClient.close:]\nto force shut down the [HttpClient] object and close the idle\nnetwork connections.\n\nBy default the HttpClient uses the proxy configuration available\nfrom the environment, see [findProxyFromEnvironment]. To turn off\nthe use of proxies all together set the [findProxy] property to\n[:null:].\n\n    HttpClient client = new HttpClient();\n    client.findProxy = null;\n","children":[{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"HttpClientRequest","refId":"dart.io/HttpClientRequest"}]},"kind":"method","name":"open","id":"open4()","comment":"\nOpens a HTTP connection.\n\nThe HTTP method to use is specified in [method], the server is\nspecified using [host] and [port], and the path (including\npossible fragment and query) is specified using [path].\n\nThe `Host` header for the request will be set to the value\n[host]:[port]. This can be overridden through the\n[HttpClientRequest] interface before the request is sent.  NOTE\nif [host] is an IP address this will still be set in the `Host`\nheader.\n\nFor additional information on the sequence of events during an\nHTTP transaction, and the objects returned by the futures, see\nthe overall documentation for the class [HttpClient].\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"method","id":"method"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"host","id":"host","line":"1066"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"port","id":"port","line":"1067"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"path","id":"path","line":"1068"}],"line":"1065"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"HttpClientRequest","refId":"dart.io/HttpClientRequest"}]},"kind":"method","name":"openUrl","id":"openUrl2()","comment":"\nOpens a HTTP connection.\n\nThe HTTP method is specified in [method] and the URL to use in\n[url].\n\nThe `Host` header for the request will be set to the value\n[host]:[port]. This can be overridden through the\n[HttpClientRequest] interface before the request is sent.  NOTE\nif [host] is an IP address this will still be set in the `Host`\nheader.\n\nFor additional information on the sequence of events during an\nHTTP transaction, and the objects returned by the futures, see\nthe overall documentation for the class [HttpClient].\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"method","id":"method"},{"ref":{"name":"Uri","refId":"dart.core/Uri"},"kind":"param","name":"url","id":"url"}],"line":"1086"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"HttpClientRequest","refId":"dart.io/HttpClientRequest"}]},"kind":"method","name":"get","id":"get3()","comment":"\nOpens a HTTP connection using the GET method.\n\nThe server is specified using [host] and [port], and the path\n(including possible fragment and query) is specified using\n[path].\n\nSee [open] for details.\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"host","id":"host"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"port","id":"port"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"path","id":"path"}],"line":"1097"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"HttpClientRequest","refId":"dart.io/HttpClientRequest"}]},"kind":"method","name":"getUrl","id":"getUrl1()","comment":"\nOpens a HTTP connection using the GET method.\n\nThe URL to use is specified in [url].\n\nSee [openUrl] for details.\n","children":[{"ref":{"name":"Uri","refId":"dart.core/Uri"},"kind":"param","name":"url","id":"url"}],"line":"1106"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"HttpClientRequest","refId":"dart.io/HttpClientRequest"}]},"kind":"method","name":"post","id":"post3()","comment":"\nOpens a HTTP connection using the POST method.\n\nThe server is specified using [host] and [port], and the path\n(including possible fragment and query) is specified using\n[path].\n\nSee [open] for details.\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"host","id":"host"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"port","id":"port"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"path","id":"path"}],"line":"1117"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"HttpClientRequest","refId":"dart.io/HttpClientRequest"}]},"kind":"method","name":"postUrl","id":"postUrl1()","comment":"\nOpens a HTTP connection using the POST method.\n\nThe URL to use is specified in [url].\n\nSee [openUrl] for details.\n","children":[{"ref":{"name":"Uri","refId":"dart.core/Uri"},"kind":"param","name":"url","id":"url"}],"line":"1126"},{"isSetter":true,"kind":"method","name":"authenticate=","id":"authenticate=1()","comment":"\nSets the function to be called when a site is requesting\nauthentication. The URL requested and the security realm from the\nserver are passed in the arguments [url] and [realm].\n\nThe function returns a [Future] which should complete when the\nauthentication has been resolved. If credentials cannot be\nprovided the [Future] should complete with [false]. If\ncredentials are available the function should add these using\n[addCredentials] before completing the [Future] with the value\n[true].\n\nIf the [Future] completes with true the request will be retried\nusing the updated credentials. Otherwise response processing will\ncontinue normally.\n","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"f","id":"f","children":[{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"bool","refId":"dart.core/bool"}]},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"Uri","refId":"dart.core/Uri"},"kind":"param","name":"url","id":"url","uri":"dart-sdk/lib/io/http.dart","line":"1144"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"scheme","id":"scheme","uri":"dart-sdk/lib/io/http.dart","line":"1144"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"realm","id":"realm","uri":"dart-sdk/lib/io/http.dart","line":"1144"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"1144"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"addCredentials","id":"addCredentials3()","comment":"\nAdd credentials to be used for authorizing HTTP requests.\n","children":[{"ref":{"name":"Uri","refId":"dart.core/Uri"},"kind":"param","name":"url","id":"url"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"realm","id":"realm"},{"ref":{"name":"HttpClientCredentials","refId":"dart.io/HttpClientCredentials"},"kind":"param","name":"credentials","id":"credentials"}],"line":"1149"},{"isSetter":true,"kind":"method","name":"findProxy=","id":"findProxy=1()","comment":"\nSets the function used to resolve the proxy server to be used for\nopening a HTTP connection to the specified [url]. If this\nfunction is not set, direct connections will always be used.\n\nThe string returned by [f] must be in the format used by browser\nPAC (proxy auto-config) scripts. That is either\n\n    \"DIRECT\"\n\nfor using a direct connection or\n\n    \"PROXY host:port\"\n\nfor using the proxy server [:host:] on port [:port:].\n\nA configuration can contain several configuration elements\nseparated by semicolons, e.g.\n\n    \"PROXY host:port; PROXY host2:port2; DIRECT\"\n\nThe static function [findProxyFromEnvironment] on this class can\nbe used to implement proxy server resolving based on environment\nvariables.\n","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"f","id":"f","children":[{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"Uri","refId":"dart.core/Uri"},"kind":"param","name":"url","id":"url","uri":"dart-sdk/lib/io/http.dart","line":"1176"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"1176"},{"returnType":{"name":"String","refId":"dart.core/String"},"isStatic":true,"kind":"method","name":"findProxyFromEnvironment","id":"findProxyFromEnvironment2()","comment":"\nFunction for resolving the proxy server to be used for a HTTP\nconnection from the proxy configuration specified through\nenvironment variables.\n\nThe following environment variables are taken into account:\n\n    http_proxy\n    https_proxy\n    no_proxy\n    HTTP_PROXY\n    HTTPS_PROXY\n    NO_PROXY\n\n[:http_proxy:] and [:HTTP_PROXY:] specify the proxy server to use for\nhttp:// urls. Use the format [:hostname:port:]. If no port is used a\ndefault of 1080 will be used. If both are set the lower case one takes\nprecedence.\n\n[:https_proxy:] and [:HTTPS_PROXY:] specify the proxy server to use for\nhttps:// urls. Use the format [:hostname:port:]. If no port is used a\ndefault of 1080 will be used. If both are set the lower case one takes\nprecedence.\n\n[:no_proxy:] and [:NO_PROXY:] specify a comma separated list of\npostfixes of hostnames for which not to use the proxy\nserver. E.g. the value \"localhost,127.0.0.1\" will make requests\nto both \"localhost\" and \"127.0.0.1\" not use a proxy. If both are set\nthe lower case one takes precedence.\n\nTo activate this way of resolving proxies assign this function to\nthe [findProxy] property on the [HttpClient].\n\n    HttpClient client = new HttpClient();\n    client.findProxy = HttpClient.findProxyFromEnvironment;\n\nIf you don't want to use the system environment you can use a\ndifferent one by wrapping the function.\n\n    HttpClient client = new HttpClient();\n    client.findProxy = (url) {\n      return HttpClient.findProxyFromEnvironment(\n          url, {\"http_proxy\": ..., \"no_proxy\": ...});\n    }\n\nIf a proxy requires authentication it is possible to configure\nthe username and password as well. Use the format\n[:username:password@hostname:port:] to include the username and\npassword. Alternatively the API [addProxyCredentials] can be used\nto set credentials for proxies which require authentication.\n","children":[{"ref":{"name":"Uri","refId":"dart.core/Uri"},"kind":"param","name":"url","id":"url"},{"ref":{"name":"Map","refId":"dart.core/Map","arguments":[{"name":"String","refId":"dart.core/String"},{"name":"String","refId":"dart.core/String"}]},"isOptional":true,"isNamed":true,"kind":"param","name":"environment","id":"environment","line":"1230"}],"line":"1229"},{"isSetter":true,"kind":"method","name":"authenticateProxy=","id":"authenticateProxy=1()","comment":"\nSets the function to be called when a proxy is requesting\nauthentication. Information on the proxy in use and the security\nrealm for the authentication are passed in the arguments [host],\n[port] and [realm].\n\nThe function returns a [Future] which should complete when the\nauthentication has been resolved. If credentials cannot be\nprovided the [Future] should complete with [false]. If\ncredentials are available the function should add these using\n[addProxyCredentials] before completing the [Future] with the value\n[true].\n\nIf the [Future] completes with [true] the request will be retried\nusing the updated credentials. Otherwise response processing will\ncontinue normally.\n","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"f","id":"f","children":[{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"bool","refId":"dart.core/bool"}]},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"host","id":"host","uri":"dart-sdk/lib/io/http.dart","line":"1252"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"port","id":"port","uri":"dart-sdk/lib/io/http.dart","line":"1252"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"scheme","id":"scheme","uri":"dart-sdk/lib/io/http.dart","line":"1252"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"realm","id":"realm","uri":"dart-sdk/lib/io/http.dart","line":"1252"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}],"line":"1252"}],"line":"1251"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"addProxyCredentials","id":"addProxyCredentials4()","comment":"\nAdd credentials to be used for authorizing HTTP proxies.\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"host","id":"host"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"port","id":"port","line":"1258"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"realm","id":"realm","line":"1259"},{"ref":{"name":"HttpClientCredentials","refId":"dart.io/HttpClientCredentials"},"kind":"param","name":"credentials","id":"credentials","line":"1260"}],"line":"1257"},{"isSetter":true,"kind":"method","name":"badCertificateCallback=","id":"badCertificateCallback=1()","comment":"\nSets a callback that will decide whether to accept a secure connection\nwith a server certificate that cannot be authenticated by any of our\ntrusted root certificates.\n\nWhen an secure HTTP request if made, using this HttpClient, and the\nserver returns a server certificate that cannot be authenticated, the\ncallback is called asynchronously with the [X509Certificate] object and\nthe server's hostname and port.  If the value of [badCertificateCallback]\nis [null], the bad certificate is rejected, as if the callback\nreturned [false]\n\nIf the callback returns true, the secure connection is accepted and the\n[:Future<HttpClientRequest>:] that was returned from the call making the\nrequest completes with a valid HttpRequest object. If the callback returns\nfalse, the [:Future<HttpClientRequest>:] completes with an exception.\n\nIf a bad certificate is received on a connection attempt, the library calls\nthe function that was the value of badCertificateCallback at the time\nthe the request is made, even if the value of badCertificateCallback\nhas changed since then.\n","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"callback","id":"callback","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"X509Certificate","refId":"dart.io/X509Certificate"},"kind":"param","name":"cert","id":"cert","uri":"dart-sdk/lib/io/http.dart","line":"1284"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"host","id":"host","uri":"dart-sdk/lib/io/http.dart","line":"1285"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"port","id":"port","uri":"dart-sdk/lib/io/http.dart","line":"1286"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"1284"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"close","id":"close1()","comment":"\nShutdown the HTTP client. If [force] is [:false:] (the default)\nthe [:HttpClient:] will be kept alive until all active\nconnections are done. If [force] is [:true:] any active\nconnections will be closed to immediately release all\nresources. These closed connections will receive an [:onError:]\ncallback to indicate that the client was shutdown. In both cases\ntrying to establish a new connection after calling [shutdown]\nwill throw an exception.\n","children":[{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"false","isOptional":true,"isNamed":true,"kind":"param","name":"force","id":"force"}],"line":"1298"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"DEFAULT_HTTP_PORT","id":"DEFAULT_HTTP_PORT","line":"1027"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"DEFAULT_HTTPS_PORT","id":"DEFAULT_HTTPS_PORT","line":"1028"},{"ref":{"name":"Duration","refId":"dart.core/Duration"},"kind":"variable","name":"idleTimeout","id":"idleTimeout","comment":"\nGet and set the idle timeout of non-active persistent (keep-alive)\nconnections. The default value is 15 seconds.\n","line":"1034"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"variable","name":"userAgent","id":"userAgent","comment":"\nSet and get the default value of the `User-Agent` header for all requests\ngenerated by this [HttpClient]. The default value is\n`Dart/<version> (dart:io)`.\n\nIf the userAgent is set to `null`, no default `User-Agent` header will be\nadded to each request.\n","line":"1044"},{"returnType":{"name":"HttpClient","refId":"dart.io/HttpClient"},"kind":"constructor","name":"","id":"0()","line":"1046"}],"uri":"dart-sdk/lib/io/http.dart","line":"1026"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"interfaces":[{"name":"IOSink","refId":"dart.io/IOSink"}],"kind":"class","name":"HttpResponse","id":"HttpResponse","comment":"\nAn [HttpResponse] represents the headers and data to be returned to\na client in response to an HTTP request.\n\nThis object has a number of properties for setting up the HTTP\nheader of the response. When the header has been set up the methods\nfrom the [IOSink] can be used to write the actual body of the HTTP\nresponse. When one of the [IOSink] methods is used for the\nfirst time the request header is send. Calling any methods that\nwill change the header after it is sent will throw an exception.\n\nWhen writing string data through the [IOSink] the encoding used\nwill be determined from the \"charset\" parameter of the\n\"Content-Type\" header.\n\n    HttpResponse response = ...\n    response.headers.contentType\n        = new ContentType(\"application\", \"json\", charset: \"utf-8\");\n    response.write(...);  // Strings written will be UTF-8 encoded.\n\nIf no charset is provided the default of ISO-8859-1 (Latin 1) will\nbe used.\n\n    HttpResponse response = ...\n    response.headers.add(HttpHeaders.CONTENT_TYPE, \"text/plain\");\n    response.write(...);  // Strings written will be ISO-8859-1 encoded.\n\nIf an unsupported encoding is used an exception will be thrown if\nusing one of the write methods taking a string.\n","children":[{"returnType":{"name":"Future","refId":"dart.async/Future"},"kind":"method","name":"redirect","id":"redirect2()","comment":"\nRespond with a redirect to [location].\n\nThe URI in [location] should be absolute, but there are no checks\nto enforce that.\n\nBy default the HTTP status code `HttpStatus.MOVED_TEMPORARILY`\n(`302`) is used for the redirect, but an alternative one can be\nspecified using the [status] argument.\n\nThis method will also call `close`, and the returned future is\nthe furure returned by `close`.\n","children":[{"ref":{"name":"Uri","refId":"dart.core/Uri"},"kind":"param","name":"location","id":"location"},{"ref":{"name":"int","refId":"dart.core/int"},"defaultValue":"HttpStatus.MOVED_TEMPORARILY","isOptional":true,"isNamed":true,"kind":"param","name":"status","id":"status"}],"line":"946"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"Socket","refId":"dart.io/Socket"}]},"kind":"method","name":"detachSocket","id":"detachSocket0()","comment":"\nDetaches the underlying socket from the HTTP server. When the\nsocket is detached the HTTP server will no longer perform any\noperations on it.\n\nThis is normally used when a HTTP upgrade request is received\nand the communication should continue with a different protocol.\n","line":"956"},{"ref":{"name":"HttpHeaders","refId":"dart.io/HttpHeaders"},"kind":"property","name":"headers","id":"headers","comment":"\nReturns the response headers.\n","line":"926"},{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"Cookie","refId":"dart.io/Cookie"}]},"kind":"property","name":"cookies","id":"cookies","comment":"\nCookies to set in the client (in the 'set-cookie' header).\n","line":"931"},{"ref":{"name":"HttpConnectionInfo","refId":"dart.io/HttpConnectionInfo"},"kind":"property","name":"connectionInfo","id":"connectionInfo","comment":"\nGets information about the client connection. Returns [null] if the socket\nis not available.\n","line":"962"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"contentLength","id":"contentLength","comment":"\nGets and sets the content length of the response. If the size of\nthe response is not known in advance set the content length to\n-1 - which is also the default if not set.\n","line":"888"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"statusCode","id":"statusCode","comment":"\nGets and sets the status code. Any integer value is accepted. For\nthe official HTTP status codes use the fields from\n[HttpStatus]. If no status code is explicitly set the default\nvalue [HttpStatus.OK] is used.\n","line":"896"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"variable","name":"reasonPhrase","id":"reasonPhrase","comment":"\nGets and sets the reason phrase. If no reason phrase is explicitly\nset a default reason phrase is provided.\n","line":"902"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"variable","name":"persistentConnection","id":"persistentConnection","comment":"\nGets and sets the persistent connection state. The initial value\nof this property is the persistent connection state from the\nrequest.\n","line":"909"},{"ref":{"name":"Duration","refId":"dart.core/Duration"},"kind":"variable","name":"deadline","id":"deadline","comment":"\nSet and get the [deadline] for the response. The deadline is timed from the\ntime it's set. Setting a new deadline will override any previous deadline.\nWhen a deadline is exceeded, the response will be closed and any further\ndata ignored.\n\nTo disable a deadline, set the [deadline] to `null`.\n\nThe [deadline] is `null` by default.\n","line":"921"}],"uri":"dart-sdk/lib/io/http.dart","line":"881"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"interfaces":[{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]}]}],"kind":"class","name":"HttpRequest","id":"HttpRequest","comment":"\nA server-side object\nthat contains the content of and information about an HTTP request.\n\n__Note__: Check out the\n[http_server](http://pub.dartlang.org/packages/http_server)\npackage, which makes working with the low-level\ndart:io HTTP server subsystem easier.\n\nHttpRequest objects are generated by an [HttpServer],\nwhich listens for HTTP requests on a specific host and port.\nFor each request received, the HttpServer, which is a [Stream],\ngenerates an HttpRequest object and adds it to the stream.\n\nAn HttpRequest object delivers the body content of the request\nas a stream of bytes.\nThe object also contains information about the request,\nsuch as the method, URI, and headers.\n\nIn the following code, an HttpServer listens\nfor HTTP requests and, within the callback function,\nuses the HttpRequest object's `method` property to dispatch requests.\n\n    final HOST = InternetAddress.LOOPBACK_IP_V4;\n    final PORT = 4040;\n\n    HttpServer.bind(HOST, PORT).then((_server) {\n      _server.listen((HttpRequest request) {\n        switch (request.method) {\n          case 'GET': \n            handleGetRequest(request);\n            break;\n          case 'POST': \n            ...\n        }\n      },\n      onError: handleError);    // listen() failed.\n    }).catchError(handleError);\n  \nListen to the HttpRequest stream to handle the\ndata and be notified once the entire body is received.\nAn HttpRequest object contains an [HttpResponse] object,\nto which the server can write its response.\nFor example, here's a skeletal callback function\nthat responds to a request:\n\n    void handleGetRequest(HttpRequest req) {\n      HttpResponse res = req.response;\n      var body = [];\n      req.listen((List<int> buffer) => body.add(buffer),\n        onDone: () {\n          res.write('Received ${body.length} for request ');\n          res.write(' ${req.method}: ${req.uri.path}');\n          res.close();\n        },\n        onError: handleError);\n    }\n","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"property","name":"contentLength","id":"contentLength","comment":"\nThe content length of the request body (read-only).\n\nIf the size of the request body is not known in advance,\nthis value is -1.\n","line":"777"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"property","name":"method","id":"method","comment":"\nThe method, such as 'GET' or 'POST', for the request (read-only).\n","line":"782"},{"ref":{"name":"Uri","refId":"dart.core/Uri"},"kind":"property","name":"uri","id":"uri","comment":"\nThe URI for the request (read-only).\n\nThis provides access to the\npath, query string, and fragment identifier for the request.\n","line":"790"},{"ref":{"name":"HttpHeaders","refId":"dart.io/HttpHeaders"},"kind":"property","name":"headers","id":"headers","comment":"\nThe request headers (read-only).\n","line":"795"},{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"Cookie","refId":"dart.io/Cookie"}]},"kind":"property","name":"cookies","id":"cookies","comment":"\nThe cookies in the request, from the Cookie headers (read-only).\n","line":"800"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"persistentConnection","id":"persistentConnection","comment":"\nThe persistent connection state signaled by the client (read-only).\n","line":"805"},{"ref":{"name":"X509Certificate","refId":"dart.io/X509Certificate"},"kind":"property","name":"certificate","id":"certificate","comment":"\nThe client certificate of the client making the request (read-only).\n\nThis value is null if the connection is not a secure TLS or SSL connection,\nor if the server does not request a client certificate, or if the client\ndoes not provide one.\n","line":"814"},{"ref":{"name":"HttpSession","refId":"dart.io/HttpSession"},"kind":"property","name":"session","id":"session","comment":"\nThe session for the given request (read-only).\n\nIf the session is\nbeing initialized by this call, [:isNew:] is true for the returned\nsession.\nSee [HttpServer.sessionTimeout] on how to change default timeout.\n","line":"824"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"property","name":"protocolVersion","id":"protocolVersion","comment":"\nThe HTTP protocol version used in the request, \neither \"1.0\" or \"1.1\" (read-only).\n","line":"830"},{"ref":{"name":"HttpConnectionInfo","refId":"dart.io/HttpConnectionInfo"},"kind":"property","name":"connectionInfo","id":"connectionInfo","comment":"\nInformation about the client connection (read-only).\n\nReturns [null] if the socket is not available.\n","line":"837"},{"ref":{"name":"HttpResponse","refId":"dart.io/HttpResponse"},"kind":"property","name":"response","id":"response","comment":"\nThe [HttpResponse] object, used for sending back the response to the\nclient (read-only).\n\nIf the [contentLength] of the body isn't 0, and the body isn't being read,\nany write calls on the [HttpResponse] automatically drain the request\nbody.\n","line":"847"}],"uri":"dart-sdk/lib/io/http.dart","line":"770"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"kind":"class","name":"Cookie","id":"Cookie","comment":"\nRepresentation of a cookie. For cookies received by the server as\nCookie header values only [:name:] and [:value:] fields will be\nset. When building a cookie for the 'set-cookie' header in the server\nand when receiving cookies in the client as 'set-cookie' headers all\nfields can be used.\n","children":[{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"method","name":"toString","id":"toString0()","comment":"\nReturns the formatted string representation of the cookie. The\nstring representation can be used for for setting the Cookie or\n'set-cookie' headers\n","line":"708"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"variable","name":"name","id":"name","comment":"\nGets and sets the name.\n","line":"665"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"variable","name":"value","id":"value","comment":"\nGets and sets the value.\n","line":"670"},{"ref":{"name":"DateTime","refId":"dart.core/DateTime"},"kind":"variable","name":"expires","id":"expires","comment":"\nGets and sets the expiry date.\n","line":"675"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"maxAge","id":"maxAge","comment":"\nGets and sets the max age. A value of [:0:] means delete cookie\nnow.\n","line":"681"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"variable","name":"domain","id":"domain","comment":"\nGets and sets the domain.\n","line":"686"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"variable","name":"path","id":"path","comment":"\nGets and sets the path.\n","line":"691"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"variable","name":"secure","id":"secure","comment":"\nGets and sets whether this cookie is secure.\n","line":"696"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"variable","name":"httpOnly","id":"httpOnly","comment":"\nGets and sets whether this cookie is HTTP only.\n","line":"701"},{"returnType":{"name":"Cookie","refId":"dart.io/Cookie"},"kind":"constructor","name":"","id":"2()","comment":"\nCreates a new cookie optionally setting the name and value.\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"isOptional":true,"kind":"param","name":"name","id":"name"},{"ref":{"name":"String","refId":"dart.core/String"},"isOptional":true,"kind":"param","name":"value","id":"value"}],"line":"652"},{"returnType":{"name":"Cookie","refId":"dart.io/Cookie"},"kind":"constructor","name":"fromSetCookieValue","id":"fromSetCookieValue1()","comment":"\nCreates a new cookie by parsing a header value from a 'set-cookie'\nheader.\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"value","id":"value"}],"line":"658"}],"uri":"dart-sdk/lib/io/http.dart","line":"648"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"interfaces":[{"name":"HeaderValue","refId":"dart.io/HeaderValue"}],"kind":"class","name":"ContentType","id":"ContentType","comment":"\nRepresentation of a content type. An instance of [ContentType] is\nimmutable.\n","children":[{"returnType":{"name":"ContentType","refId":"dart.io/ContentType"},"isStatic":true,"kind":"method","name":"parse","id":"parse1()","comment":"\nCreates a new content type object from parsing a Content-Type\nheader value. As primary type, sub type and parameter names and\nvalues are not case sensitive all these values will be converted\nto lower case. Parsing this string\n\n    text/html; charset=utf-8\n\nwill create a content type object with primary type [:text:], sub\ntype [:html:] and parameter [:charset:] with value [:utf-8:].\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"value","id":"value"}],"line":"615"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"property","name":"mimeType","id":"mimeType","comment":"\nGets the mime-type, without any parameters.\n","line":"622"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"property","name":"primaryType","id":"primaryType","comment":"\nGets the primary type.\n","line":"627"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"property","name":"subType","id":"subType","comment":"\nGets the sub type.\n","line":"632"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"property","name":"charset","id":"charset","comment":"\nGets the character set.\n","line":"637"},{"returnType":{"name":"ContentType","refId":"dart.io/ContentType"},"kind":"constructor","name":"","id":"4()","comment":"\nCreates a new content type object setting the primary type and\nsub type. The charset and additional parameters can also be set\nusing [charset] and [parameters]. If charset is passed and\n[parameters] contains charset as well the passed [charset] will\noverride the value in parameters. Keys and values passed in\nparameters will be converted to lower case.\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"primaryType","id":"primaryType"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"subType","id":"subType","line":"599"},{"ref":{"name":"String","refId":"dart.core/String"},"isOptional":true,"isNamed":true,"kind":"param","name":"charset","id":"charset","line":"600"},{"ref":{"name":"Map","refId":"dart.core/Map","arguments":[{"name":"String","refId":"dart.core/String"},{"name":"String","refId":"dart.core/String"}]},"isOptional":true,"isNamed":true,"kind":"param","name":"parameters","id":"parameters","line":"600"}],"line":"598"}],"uri":"dart-sdk/lib/io/http.dart","line":"589"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"interfaces":[{"name":"Map","refId":"dart.core/Map"}],"kind":"class","name":"HttpSession","id":"HttpSession","children":[{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"destroy","id":"destroy0()","comment":"\nDestroys the session. This will terminate the session and any further\nconnections with this id will be given a new id and session.\n","line":"571"},{"returnType":{"name":"void","refId":"void"},"isSetter":true,"kind":"method","name":"onTimeout=","id":"onTimeout=1()","comment":"\nSets a callback that will be called when the session is timed out.\n","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"callback","id":"callback","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"576"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"property","name":"id","id":"id","comment":"\nGets the id for the current session.\n","line":"565"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"isNew","id":"isNew","comment":"\nIs true if the session has not been sent to the client yet.\n","line":"581"}],"uri":"dart-sdk/lib/io/http.dart","line":"561"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"kind":"class","name":"HeaderValue","id":"HeaderValue","comment":"\nRepresentation of a header value in the form:\n\n  [:value; parameter1=value1; parameter2=value2:]\n\n[HeaderValue] can be used to conveniently build and parse header\nvalues on this form.\n\nTo build an [:accepts:] header with the value\n\n    text/plain; q=0.3, text/html\n\nuse code like this:\n\n    HttpClientRequest request = ...;\n    var v = new HeaderValue(\"text/plain\", {\"q\": \"0.3\"});\n    request.headers.add(HttpHeaders.ACCEPT, v);\n    request.headers.add(HttpHeaders.ACCEPT, \"text/html\");\n\nTo parse the header values use the [:parse:] static method.\n\n    HttpRequest request = ...;\n    List<String> values = request.headers[HttpHeaders.ACCEPT];\n    values.forEach((value) {\n      HeaderValue v = HeaderValue.parse(value);\n      // Use v.value and v.parameters\n    });\n\nAn instance of [HeaderValue] is immutable.\n","children":[{"returnType":{"name":"HeaderValue","refId":"dart.io/HeaderValue"},"isStatic":true,"kind":"method","name":"parse","id":"parse3()","comment":"\nCreates a new header value object from parsing a header value\nstring with both value and optional parameters.\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"value","id":"value"},{"ref":{"name":"String","refId":"dart.core/String"},"defaultValue":"\";\"","isOptional":true,"isNamed":true,"kind":"param","name":"parameterSeparator","id":"parameterSeparator","line":"533"},{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"false","isOptional":true,"isNamed":true,"kind":"param","name":"preserveBackslash","id":"preserveBackslash","line":"534"}],"line":"532"},{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"method","name":"toString","id":"toString0()","comment":"\nReturns the formatted string representation in the form:\n\n    value; parameter1=value1; parameter2=value2\n","line":"558"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"property","name":"value","id":"value","comment":"\nGets the header value.\n","line":"543"},{"ref":{"name":"Map","refId":"dart.core/Map","arguments":[{"name":"String","refId":"dart.core/String"},{"name":"String","refId":"dart.core/String"}]},"kind":"property","name":"parameters","id":"parameters","comment":"\nGets the map of parameters.\n\nThis map cannot be modified. invoking any operation which would\nmodify the map will throw [UnsupportedError].\n","line":"551"},{"returnType":{"name":"HeaderValue","refId":"dart.io/HeaderValue"},"kind":"constructor","name":"","id":"2()","comment":"\nCreates a new header value object setting the value and parameters.\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"defaultValue":"\"\"","isOptional":true,"kind":"param","name":"value","id":"value"},{"ref":{"name":"Map","refId":"dart.core/Map","arguments":[{"name":"String","refId":"dart.core/String"},{"name":"String","refId":"dart.core/String"}]},"isOptional":true,"kind":"param","name":"parameters","id":"parameters"}],"line":"524"}],"uri":"dart-sdk/lib/io/http.dart","line":"520"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"kind":"class","name":"HttpHeaders","id":"HttpHeaders","comment":"\nAccess to the HTTP headers for requests and responses. In some\nsituations the headers will be immutable and the mutating methods\nwill then throw exceptions.\n\nFor all operations on HTTP headers the header name is\ncase-insensitive.\n","children":[{"returnType":{"name":"List","refId":"dart.core/List","arguments":[{"name":"String","refId":"dart.core/String"}]},"isOperator":true,"kind":"method","name":"[]","id":"[]1()","comment":"\nReturns the list of values for the header named [name]. If there\nis no header with the provided name, [:null:] will be returned.\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"name","id":"name"}],"line":"378"},{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"method","name":"value","id":"value1()","comment":"\nConvenience method for the value for a single valued header. If\nthere is no header with the provided name, [:null:] will be\nreturned. If the header has more than one value an exception is\nthrown.\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"name","id":"name"}],"line":"386"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"add","id":"add2()","comment":"\nAdds a header value. The header named [name] will have the value\n[value] added to its list of values. Some headers are single\nvalued, and for these adding a value will replace the previous\nvalue. If the value is of type DateTime a HTTP date format will be\napplied. If the value is a [:List:] each element of the list will\nbe added separately. For all other types the default [:toString:]\nmethod will be used.\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"name","id":"name"},{"ref":{"name":"Object","refId":"dart.core/Object"},"kind":"param","name":"value","id":"value"}],"line":"397"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"set","id":"set2()","comment":"\nSets a header. The header named [name] will have all its values\ncleared before the value [value] is added as its value.\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"name","id":"name"},{"ref":{"name":"Object","refId":"dart.core/Object"},"kind":"param","name":"value","id":"value"}],"line":"403"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"remove","id":"remove2()","comment":"\nRemoves a specific value for a header name. Some headers have\nsystem supplied values and for these the system supplied values\nwill still be added to the collection of values for the header.\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"name","id":"name"},{"ref":{"name":"Object","refId":"dart.core/Object"},"kind":"param","name":"value","id":"value"}],"line":"410"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"removeAll","id":"removeAll1()","comment":"\nRemoves all values for the specified header name. Some headers\nhave system supplied values and for these the system supplied\nvalues will still be added to the collection of values for the\nheader.\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"name","id":"name"}],"line":"418"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"forEach","id":"forEach1()","comment":"\nEnumerates the headers, applying the function [f] to each\nheader. The header name passed in [:name:] will be all lower\ncase.\n","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"f","id":"f","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"name","id":"name","uri":"dart-sdk/lib/io/http.dart","line":"425"},{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"String","refId":"dart.core/String"}]},"kind":"param","name":"values","id":"values","uri":"dart-sdk/lib/io/http.dart","line":"425"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"425"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"noFolding","id":"noFolding1()","comment":"\nDisables folding for the header named [name] when sending the HTTP\nheader. By default, multiple header values are folded into a\nsingle header line by separating the values with commas. The\n'set-cookie' header has folding disabled by default.\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"name","id":"name"}],"line":"433"},{"isStatic":true,"kind":"variable","name":"ACCEPT","id":"ACCEPT","line":"270"},{"isStatic":true,"kind":"variable","name":"ACCEPT_CHARSET","id":"ACCEPT_CHARSET","line":"271"},{"isStatic":true,"kind":"variable","name":"ACCEPT_ENCODING","id":"ACCEPT_ENCODING","line":"272"},{"isStatic":true,"kind":"variable","name":"ACCEPT_LANGUAGE","id":"ACCEPT_LANGUAGE","line":"273"},{"isStatic":true,"kind":"variable","name":"ACCEPT_RANGES","id":"ACCEPT_RANGES","line":"274"},{"isStatic":true,"kind":"variable","name":"AGE","id":"AGE","line":"275"},{"isStatic":true,"kind":"variable","name":"ALLOW","id":"ALLOW","line":"276"},{"isStatic":true,"kind":"variable","name":"AUTHORIZATION","id":"AUTHORIZATION","line":"277"},{"isStatic":true,"kind":"variable","name":"CACHE_CONTROL","id":"CACHE_CONTROL","line":"278"},{"isStatic":true,"kind":"variable","name":"CONNECTION","id":"CONNECTION","line":"279"},{"isStatic":true,"kind":"variable","name":"CONTENT_ENCODING","id":"CONTENT_ENCODING","line":"280"},{"isStatic":true,"kind":"variable","name":"CONTENT_LANGUAGE","id":"CONTENT_LANGUAGE","line":"281"},{"isStatic":true,"kind":"variable","name":"CONTENT_LENGTH","id":"CONTENT_LENGTH","line":"282"},{"isStatic":true,"kind":"variable","name":"CONTENT_LOCATION","id":"CONTENT_LOCATION","line":"283"},{"isStatic":true,"kind":"variable","name":"CONTENT_MD5","id":"CONTENT_MD5","line":"284"},{"isStatic":true,"kind":"variable","name":"CONTENT_RANGE","id":"CONTENT_RANGE","line":"285"},{"isStatic":true,"kind":"variable","name":"CONTENT_TYPE","id":"CONTENT_TYPE","line":"286"},{"isStatic":true,"kind":"variable","name":"DATE","id":"DATE","line":"287"},{"isStatic":true,"kind":"variable","name":"ETAG","id":"ETAG","line":"288"},{"isStatic":true,"kind":"variable","name":"EXPECT","id":"EXPECT","line":"289"},{"isStatic":true,"kind":"variable","name":"EXPIRES","id":"EXPIRES","line":"290"},{"isStatic":true,"kind":"variable","name":"FROM","id":"FROM","line":"291"},{"isStatic":true,"kind":"variable","name":"HOST","id":"HOST","line":"292"},{"isStatic":true,"kind":"variable","name":"IF_MATCH","id":"IF_MATCH","line":"293"},{"isStatic":true,"kind":"variable","name":"IF_MODIFIED_SINCE","id":"IF_MODIFIED_SINCE","line":"294"},{"isStatic":true,"kind":"variable","name":"IF_NONE_MATCH","id":"IF_NONE_MATCH","line":"295"},{"isStatic":true,"kind":"variable","name":"IF_RANGE","id":"IF_RANGE","line":"296"},{"isStatic":true,"kind":"variable","name":"IF_UNMODIFIED_SINCE","id":"IF_UNMODIFIED_SINCE","line":"297"},{"isStatic":true,"kind":"variable","name":"LAST_MODIFIED","id":"LAST_MODIFIED","line":"298"},{"isStatic":true,"kind":"variable","name":"LOCATION","id":"LOCATION","line":"299"},{"isStatic":true,"kind":"variable","name":"MAX_FORWARDS","id":"MAX_FORWARDS","line":"300"},{"isStatic":true,"kind":"variable","name":"PRAGMA","id":"PRAGMA","line":"301"},{"isStatic":true,"kind":"variable","name":"PROXY_AUTHENTICATE","id":"PROXY_AUTHENTICATE","line":"302"},{"isStatic":true,"kind":"variable","name":"PROXY_AUTHORIZATION","id":"PROXY_AUTHORIZATION","line":"303"},{"isStatic":true,"kind":"variable","name":"RANGE","id":"RANGE","line":"304"},{"isStatic":true,"kind":"variable","name":"REFERER","id":"REFERER","line":"305"},{"isStatic":true,"kind":"variable","name":"RETRY_AFTER","id":"RETRY_AFTER","line":"306"},{"isStatic":true,"kind":"variable","name":"SERVER","id":"SERVER","line":"307"},{"isStatic":true,"kind":"variable","name":"TE","id":"TE","line":"308"},{"isStatic":true,"kind":"variable","name":"TRAILER","id":"TRAILER","line":"309"},{"isStatic":true,"kind":"variable","name":"TRANSFER_ENCODING","id":"TRANSFER_ENCODING","line":"310"},{"isStatic":true,"kind":"variable","name":"UPGRADE","id":"UPGRADE","line":"311"},{"isStatic":true,"kind":"variable","name":"USER_AGENT","id":"USER_AGENT","line":"312"},{"isStatic":true,"kind":"variable","name":"VARY","id":"VARY","line":"313"},{"isStatic":true,"kind":"variable","name":"VIA","id":"VIA","line":"314"},{"isStatic":true,"kind":"variable","name":"WARNING","id":"WARNING","line":"315"},{"isStatic":true,"kind":"variable","name":"WWW_AUTHENTICATE","id":"WWW_AUTHENTICATE","line":"316"},{"isStatic":true,"kind":"variable","name":"COOKIE","id":"COOKIE","line":"319"},{"isStatic":true,"kind":"variable","name":"SET_COOKIE","id":"SET_COOKIE","line":"320"},{"isStatic":true,"kind":"variable","name":"GENERAL_HEADERS","id":"GENERAL_HEADERS","line":"322"},{"isStatic":true,"kind":"variable","name":"ENTITY_HEADERS","id":"ENTITY_HEADERS","line":"332"},{"isStatic":true,"kind":"variable","name":"RESPONSE_HEADERS","id":"RESPONSE_HEADERS","line":"344"},{"isStatic":true,"kind":"variable","name":"REQUEST_HEADERS","id":"REQUEST_HEADERS","line":"354"},{"ref":{"name":"DateTime","refId":"dart.core/DateTime"},"kind":"variable","name":"date","id":"date","comment":"\nGets and sets the date. The value of this property will\nreflect the 'date' header.\n","line":"439"},{"ref":{"name":"DateTime","refId":"dart.core/DateTime"},"kind":"variable","name":"expires","id":"expires","comment":"\nGets and sets the expiry date. The value of this property will\nreflect the 'expires' header.\n","line":"445"},{"ref":{"name":"DateTime","refId":"dart.core/DateTime"},"kind":"variable","name":"ifModifiedSince","id":"ifModifiedSince","comment":"\nGets and sets the \"if-modified-since\" date. The value of this property will\nreflect the \"if-modified-since\" header.\n","line":"451"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"variable","name":"host","id":"host","comment":"\nGets and sets the host part of the 'host' header for the\nconnection.\n","line":"457"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"port","id":"port","comment":"\nGets and sets the port part of the 'host' header for the\nconnection.\n","line":"463"},{"ref":{"name":"ContentType","refId":"dart.io/ContentType"},"kind":"variable","name":"contentType","id":"contentType","comment":"\nGets and sets the content type. Note that the content type in the\nheader will only be updated if this field is set\ndirectly. Mutating the returned current value will have no\neffect.\n","line":"471"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"contentLength","id":"contentLength","comment":"\nGets and sets the content length header value.\n","line":"476"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"variable","name":"persistentConnection","id":"persistentConnection","comment":"\nGets and sets the persistent connection header value.\n","line":"481"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"variable","name":"chunkedTransferEncoding","id":"chunkedTransferEncoding","comment":"\nGets and sets the chunked transfer encoding header value.\n","line":"486"}],"uri":"dart-sdk/lib/io/http.dart","line":"269"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"kind":"class","name":"HttpConnectionsInfo","id":"HttpConnectionsInfo","comment":"\nSummary statistics about an [HttpServer]s current socket connections.\n","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"total","id":"total","comment":"\nTotal number of socket connections.\n","line":"239"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"active","id":"active","comment":"\nNumber of active connections where actual request/response\nprocessing is active.\n","line":"245"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"idle","id":"idle","comment":"\nNumber of idle connections held by clients as persistent connections.\n","line":"250"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"closing","id":"closing","comment":"\nNumber of connections which are preparing to close. Note: These\nconnections are also part of the [:active:] count as they might\nstill be sending data to the client before finally closing.\n","line":"257"}],"uri":"dart-sdk/lib/io/http.dart","line":"235"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"interfaces":[{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"HttpRequest","refId":"dart.io/HttpRequest"}]}],"kind":"class","name":"HttpServer","id":"HttpServer","comment":"\nA server that delivers content, such as web pages, using\nthe HTTP protocol.\n\nThe [HttpServer] is a [Stream] of [HttpRequest]s. Each\n[HttpRequest] has an associated [HttpResponse] object as its\n[HttpRequest.response] member, and the server responds to a request by\nwriting to that [HttpResponse] object.\n\nIncomplete requests where all or parts of the header is missing, are\nignored and no exceptions or [HttpRequest] objects are generated for them.\nLikewise, when writing to a [HttpResponse], any [Socket] exceptions are\nignored and any future writes are ignored.\n\nThe [HttpRequest] exposes the request headers, and provides the request body,\nif it exists, as a stream of data. If the body is unread, it'll be drained\nwhen the [HttpResponse] is being written to or closed.\n\nThe following example shows how to bind a [HttpServer] to a IPv6\n[InternetAddress] on port 80, and listening to requests.\n\n    HttpServer.bind(InternetAddress.ANY_IP_V6, 80).then((server) {\n      server.listen((HttpRequest request) {\n        // Handle requests.\n      });\n    });\n","children":[{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"HttpServer","refId":"dart.io/HttpServer"}]},"isStatic":true,"kind":"method","name":"bind","id":"bind3()","comment":"\nStarts listening for HTTP requests on the specified [address] and\n[port].\n\nThe [address] can either be a [String] or an\n[InternetAddress]. If [address] is a [String], [bind] will\nperform a [InternetAddress.lookup] and use the first value in the\nlist. To listen on the loopback adapter, which will allow only\nincoming connections from the local host, use the value\n[InternetAddress.LOOPBACK_IP_V4] or\n[InternetAddress.LOOPBACK_IP_V6]. To allow for incoming\nconnection from the network use either one of the values\n[InternetAddress.ANY_IP_V4] or [InternetAddress.ANY_IP_V6] to\nbind to all interfaces or the IP address of a specific interface.\n\nIf an IP version 6 (IPv6) address is used, both IP version 6\n(IPv6) and version 4 (IPv4) connections will be accepted. To\nrestrict this to version 6 (IPv6) only, use [HttpServer.listenOn]\nwith a [ServerSocket] configured for IP version 6 connections\nonly.\n\nIf [port] has the value [:0:] an ephemeral port will be chosen by\nthe system. The actual port used can be retrieved using the\n[port] getter.\n\nThe optional argument [backlog] can be used to specify the listen\nbacklog for the underlying OS listen setup. If [backlog] has the\nvalue of [:0:] (the default) a reasonable value will be chosen by\nthe system.\n","children":[{"kind":"param","name":"address","id":"address"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"port","id":"port","line":"116"},{"ref":{"name":"int","refId":"dart.core/int"},"defaultValue":"0","isOptional":true,"isNamed":true,"kind":"param","name":"backlog","id":"backlog","line":"117"}],"line":"115"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"HttpServer","refId":"dart.io/HttpServer"}]},"isStatic":true,"kind":"method","name":"bindSecure","id":"bindSecure5()","comment":"\nThe [address] can either be a [String] or an\n[InternetAddress]. If [address] is a [String], [bind] will\nperform a [InternetAddress.lookup] and use the first value in the\nlist. To listen on the loopback adapter, which will allow only\nincoming connections from the local host, use the value\n[InternetAddress.LOOPBACK_IP_V4] or\n[InternetAddress.LOOPBACK_IP_V6]. To allow for incoming\nconnection from the network use either one of the values\n[InternetAddress.ANY_IP_V4] or [InternetAddress.ANY_IP_V6] to\nbind to all interfaces or the IP address of a specific interface.\n\nIf an IP version 6 (IPv6) address is used, both IP version 6\n(IPv6) and version 4 (IPv4) connections will be accepted. To\nrestrict this to version 6 (IPv6) only, use [HttpServer.listenOn]\nwith a [ServerSocket] configured for IP version 6 connections\nonly.\n\nIf [port] has the value [:0:] an ephemeral port will be chosen by\nthe system. The actual port used can be retrieved using the\n[port] getter.\n\nThe optional argument [backlog] can be used to specify the listen\nbacklog for the underlying OS listen setup. If [backlog] has the\nvalue of [:0:] (the default) a reasonable value will be chosen by\nthe system.\n\nThe certificate with nickname or distinguished name (DN) [certificateName]\nis looked up in the certificate database, and is used as the server\ncertificate. If [requestClientCertificate] is true, the server will\nrequest clients to authenticate with a client certificate.\n","children":[{"kind":"param","name":"address","id":"address"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"port","id":"port","line":"154"},{"ref":{"name":"int","refId":"dart.core/int"},"defaultValue":"0","isOptional":true,"isNamed":true,"kind":"param","name":"backlog","id":"backlog","line":"155"},{"ref":{"name":"String","refId":"dart.core/String"},"isOptional":true,"isNamed":true,"kind":"param","name":"certificateName","id":"certificateName","line":"156"},{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"false","isOptional":true,"isNamed":true,"kind":"param","name":"requestClientCertificate","id":"requestClientCertificate","line":"157"}],"line":"153"},{"returnType":{"name":"Future","refId":"dart.async/Future"},"kind":"method","name":"close","id":"close1()","comment":"\nPermanently stops this [HttpServer] from listening for new\nconnections.  This closes the [Stream] of [HttpRequest]s with a\ndone event. The returned future completes when the server is\nstopped. For a server started using [bind] or [bindSecure] this\nmeans that the port listened on no longer in use.\n\nIf [force] is `true`, active connections will be closed immediately.\n","children":[{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"false","isOptional":true,"isNamed":true,"kind":"param","name":"force","id":"force"}],"line":"181"},{"isSetter":true,"kind":"method","name":"sessionTimeout=","id":"sessionTimeout=1()","comment":"\nSets the timeout, in seconds, for sessions of this [HttpServer].\nThe default timeout is 20 minutes.\n","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"timeout","id":"timeout"}],"line":"201"},{"returnType":{"name":"HttpConnectionsInfo","refId":"dart.io/HttpConnectionsInfo"},"kind":"method","name":"connectionsInfo","id":"connectionsInfo0()","comment":"\nReturns an [HttpConnectionsInfo] object summarizing the number of\ncurrent connections handled by the server.\n","line":"207"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"property","name":"port","id":"port","comment":"\nReturns the port that the server is listening on. This can be\nused to get the actual port used when a value of 0 for [:port:] is\nspecified in the [bind] or [bindSecure] call.\n","line":"188"},{"ref":{"name":"InternetAddress","refId":"dart.io/InternetAddress"},"kind":"property","name":"address","id":"address","comment":"\nReturns the address that the server is listening on. This can be\nused to get the actual address used, when the address is fetched by\na lookup from a hostname.\n","line":"195"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"variable","name":"serverHeader","id":"serverHeader","comment":"\nSet and get the default value of the `Server` header for all responses\ngenerated by this [HttpServer]. The default value is\n`Dart/<version> (dart:io)`.\n\nIf the serverHeader is set to `null`, no default `Server` header will be\nadded to each response.\n","line":"217"},{"ref":{"name":"Duration","refId":"dart.core/Duration"},"kind":"variable","name":"idleTimeout","id":"idleTimeout","comment":"\nGet or set the timeout used for idle keep-alive connections. If no further\nrequest is seen within [idleTimeout] after the previous request was\ncompleted, the connection is droped.\n\nDefault is 120 seconds.\n\nTo disable, set [idleTimeout] to `null`.\n","line":"228"},{"returnType":{"name":"HttpServer","refId":"dart.io/HttpServer"},"kind":"constructor","name":"listenOn","id":"listenOn1()","comment":"\nAttaches the HTTP server to an existing [ServerSocket]. When the\n[HttpServer] is closed, the [HttpServer] will just detach itself,\nclosing current connections but not closing [serverSocket].\n","children":[{"ref":{"name":"ServerSocket","refId":"dart.io/ServerSocket"},"kind":"param","name":"serverSocket","id":"serverSocket"}],"line":"169"}],"uri":"dart-sdk/lib/io/http.dart","line":"84"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"kind":"class","name":"HttpStatus","id":"HttpStatus","comment":"\nHTTP status codes.\n","children":[{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"CONTINUE","id":"CONTINUE","line":"11"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"SWITCHING_PROTOCOLS","id":"SWITCHING_PROTOCOLS","line":"12"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"OK","id":"OK","line":"13"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"CREATED","id":"CREATED","line":"14"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"ACCEPTED","id":"ACCEPTED","line":"15"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"NON_AUTHORITATIVE_INFORMATION","id":"NON_AUTHORITATIVE_INFORMATION","line":"16"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"NO_CONTENT","id":"NO_CONTENT","line":"17"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"RESET_CONTENT","id":"RESET_CONTENT","line":"18"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"PARTIAL_CONTENT","id":"PARTIAL_CONTENT","line":"19"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"MULTIPLE_CHOICES","id":"MULTIPLE_CHOICES","line":"20"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"MOVED_PERMANENTLY","id":"MOVED_PERMANENTLY","line":"21"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"FOUND","id":"FOUND","line":"22"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"MOVED_TEMPORARILY","id":"MOVED_TEMPORARILY","line":"23"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"SEE_OTHER","id":"SEE_OTHER","line":"24"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"NOT_MODIFIED","id":"NOT_MODIFIED","line":"25"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"USE_PROXY","id":"USE_PROXY","line":"26"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"TEMPORARY_REDIRECT","id":"TEMPORARY_REDIRECT","line":"27"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"BAD_REQUEST","id":"BAD_REQUEST","line":"28"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"UNAUTHORIZED","id":"UNAUTHORIZED","line":"29"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"PAYMENT_REQUIRED","id":"PAYMENT_REQUIRED","line":"30"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"FORBIDDEN","id":"FORBIDDEN","line":"31"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"NOT_FOUND","id":"NOT_FOUND","line":"32"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"METHOD_NOT_ALLOWED","id":"METHOD_NOT_ALLOWED","line":"33"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"NOT_ACCEPTABLE","id":"NOT_ACCEPTABLE","line":"34"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"PROXY_AUTHENTICATION_REQUIRED","id":"PROXY_AUTHENTICATION_REQUIRED","line":"35"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"REQUEST_TIMEOUT","id":"REQUEST_TIMEOUT","line":"36"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"CONFLICT","id":"CONFLICT","line":"37"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"GONE","id":"GONE","line":"38"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"LENGTH_REQUIRED","id":"LENGTH_REQUIRED","line":"39"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"PRECONDITION_FAILED","id":"PRECONDITION_FAILED","line":"40"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"REQUEST_ENTITY_TOO_LARGE","id":"REQUEST_ENTITY_TOO_LARGE","line":"41"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"REQUEST_URI_TOO_LONG","id":"REQUEST_URI_TOO_LONG","line":"42"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"UNSUPPORTED_MEDIA_TYPE","id":"UNSUPPORTED_MEDIA_TYPE","line":"43"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"REQUESTED_RANGE_NOT_SATISFIABLE","id":"REQUESTED_RANGE_NOT_SATISFIABLE","line":"44"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"EXPECTATION_FAILED","id":"EXPECTATION_FAILED","line":"45"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"INTERNAL_SERVER_ERROR","id":"INTERNAL_SERVER_ERROR","line":"46"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"NOT_IMPLEMENTED","id":"NOT_IMPLEMENTED","line":"47"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"BAD_GATEWAY","id":"BAD_GATEWAY","line":"48"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"SERVICE_UNAVAILABLE","id":"SERVICE_UNAVAILABLE","line":"49"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"GATEWAY_TIMEOUT","id":"GATEWAY_TIMEOUT","line":"50"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"HTTP_VERSION_NOT_SUPPORTED","id":"HTTP_VERSION_NOT_SUPPORTED","line":"51"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"NETWORK_CONNECT_TIMEOUT_ERROR","id":"NETWORK_CONNECT_TIMEOUT_ERROR","line":"53"}],"uri":"dart-sdk/lib/io/http.dart","line":"10"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"kind":"class","name":"_FileSystemWatcher","id":"_FileSystemWatcher","children":[{"returnType":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"FileSystemEvent","refId":"dart.io/FileSystemEvent"}]},"isStatic":true,"kind":"method","name":"watch","id":"watch3()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"path","id":"path","line":"746"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"events","id":"events","line":"746"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"param","name":"recursive","id":"recursive","line":"746"}],"line":"745"},{"ref":{"name":"bool","refId":"dart.core/bool"},"isStatic":true,"kind":"property","name":"isSupported","id":"isSupported","line":"747"}],"isPrivate":true,"uri":"dart-sdk/lib/io/file_system_entity.dart","line":"744"},{"superclass":{"name":"FileSystemEvent","refId":"dart.io/FileSystemEvent"},"kind":"class","name":"FileSystemMoveEvent","id":"FileSystemMoveEvent","comment":"\nFile system event for moving of file system objects.\n","children":[{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"method","name":"toString","id":"toString0()","line":"734"},{"ref":{"name":"String","refId":"dart.core/String"},"isFinal":true,"kind":"variable","name":"destination","id":"destination","comment":"\nIf the underlaying implementation is able to identify the destination of\nthe moved file, [destination] will be set. Otherwise, it will be `null`.\n","line":"729"},{"kind":"constructor","name":"_","id":"_3()","children":[{"kind":"param","name":"path","id":"path"},{"kind":"param","name":"isDirectory","id":"isDirectory"},{"ref":{"name":"String","refId":"dart.core/String"},"initializedField":{"name":"destination","refId":"dart.io/FileSystemMoveEvent/destination"},"kind":"param","name":"destination","id":"destination"}],"isPrivate":true,"line":"731"}],"uri":"dart-sdk/lib/io/file_system_entity.dart","line":"724"},{"superclass":{"name":"FileSystemEvent","refId":"dart.io/FileSystemEvent"},"kind":"class","name":"FileSystemDeleteEvent","id":"FileSystemDeleteEvent","comment":"\nFile system event for deletion of file system objects.\n","children":[{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"method","name":"toString","id":"toString0()","line":"717"},{"kind":"constructor","name":"_","id":"_2()","children":[{"kind":"param","name":"path","id":"path"},{"kind":"param","name":"isDirectory","id":"isDirectory"}],"isPrivate":true,"line":"714"}],"uri":"dart-sdk/lib/io/file_system_entity.dart","line":"713"},{"superclass":{"name":"FileSystemEvent","refId":"dart.io/FileSystemEvent"},"kind":"class","name":"FileSystemModifyEvent","id":"FileSystemModifyEvent","comment":"\nFile system event for modifications of file system objects.\n","children":[{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"method","name":"toString","id":"toString0()","line":"705"},{"ref":{"name":"bool","refId":"dart.core/bool"},"isFinal":true,"kind":"variable","name":"contentChanged","id":"contentChanged","comment":"\nIf the content was changed and not only the attributes, [contentChanged]\nis `true`.\n","line":"700"},{"kind":"constructor","name":"_","id":"_3()","children":[{"kind":"param","name":"path","id":"path"},{"kind":"param","name":"isDirectory","id":"isDirectory"},{"ref":{"name":"bool","refId":"dart.core/bool"},"initializedField":{"name":"contentChanged","refId":"dart.io/FileSystemModifyEvent/contentChanged"},"kind":"param","name":"contentChanged","id":"contentChanged"}],"isPrivate":true,"line":"702"}],"uri":"dart-sdk/lib/io/file_system_entity.dart","line":"695"},{"superclass":{"name":"FileSystemEvent","refId":"dart.io/FileSystemEvent"},"kind":"class","name":"FileSystemCreateEvent","id":"FileSystemCreateEvent","comment":"\nFile system event for newly created file system objects.\n","children":[{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"method","name":"toString","id":"toString0()","line":"688"},{"kind":"constructor","name":"_","id":"_2()","children":[{"kind":"param","name":"path","id":"path"},{"kind":"param","name":"isDirectory","id":"isDirectory"}],"isPrivate":true,"line":"685"}],"uri":"dart-sdk/lib/io/file_system_entity.dart","line":"684"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"kind":"class","name":"FileSystemEvent","id":"FileSystemEvent","comment":"\nBase event class emitted by [FileSystemEntity.watch].\n","children":[{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"CREATE","id":"CREATE","comment":"\nBitfield for [FileSystemEntity.watch], to enable [FileSystemCreateEvent]s.\n","line":"634"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"MODIFY","id":"MODIFY","comment":"\nBitfield for [FileSystemEntity.watch], to enable [FileSystemModifyEvent]s.\n","line":"639"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"DELETE","id":"DELETE","comment":"\nBitfield for [FileSystemEntity.watch], to enable [FileSystemDeleteEvent]s.\n","line":"644"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"MOVE","id":"MOVE","comment":"\nBitfield for [FileSystemEntity.watch], to enable [FileSystemMoveEvent]s.\n","line":"649"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"ALL","id":"ALL","comment":"\nBitfield for [FileSystemEntity.watch], for enabling all of [CREATE],\n[MODIFY], [DELETE] and [MOVE].\n","line":"655"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"_MODIFY_ATTRIBUTES","id":"_MODIFY_ATTRIBUTES","isPrivate":true,"line":"657"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"_DELETE_SELF","id":"_DELETE_SELF","isPrivate":true,"line":"658"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"_IS_DIR","id":"_IS_DIR","isPrivate":true,"line":"659"},{"ref":{"name":"int","refId":"dart.core/int"},"isFinal":true,"kind":"variable","name":"type","id":"type","comment":"\nThe type of event. See [FileSystemEvent] for a list of events.\n","line":"664"},{"ref":{"name":"String","refId":"dart.core/String"},"isFinal":true,"kind":"variable","name":"path","id":"path","comment":"\nThe path that triggered the event. Depending on the platform and the\nFileSystemEntity, the path may be relative.\n","line":"670"},{"ref":{"name":"bool","refId":"dart.core/bool"},"isFinal":true,"kind":"variable","name":"isDirectory","id":"isDirectory","comment":"\nIs `true` if the event target was a directory.\n","line":"675"},{"kind":"constructor","name":"_","id":"_3()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"initializedField":{"name":"type","refId":"dart.io/FileSystemEvent/type"},"kind":"param","name":"type","id":"type"},{"ref":{"name":"String","refId":"dart.core/String"},"initializedField":{"name":"path","refId":"dart.io/FileSystemEvent/path"},"kind":"param","name":"path","id":"path"},{"ref":{"name":"bool","refId":"dart.core/bool"},"initializedField":{"name":"isDirectory","refId":"dart.io/FileSystemEvent/isDirectory"},"kind":"param","name":"isDirectory","id":"isDirectory"}],"isPrivate":true,"line":"677"}],"uri":"dart-sdk/lib/io/file_system_entity.dart","line":"630"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"kind":"class","name":"FileSystemEntity","id":"FileSystemEntity","comment":"\nA [FileSystemEntity] is a common super class for [File] and\n[Directory] objects.\n\n[FileSystemEntity] objects are returned from directory listing\noperations. To determine if a FileSystemEntity is a [File] or a\n[Directory], perform a type check:\n\n    if (entity is File) (entity as File).readAsStringSync();\n","children":[{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"bool","refId":"dart.core/bool"}]},"kind":"method","name":"exists","id":"exists0()","comment":"\nChecks whether the file system entity with this path exists. Returns\na [:Future<bool>:] that completes with the result.\n\nSince FileSystemEntity is abstract, every FileSystemEntity object\nis actually an instance of one of the subclasses [File],\n[Directory], and [Link].  Calling [exists] on an instance of one\nof these subclasses checks whether the object exists in the file\nsystem object exists and is of the correct type (file, directory,\nor link).  To check whether a path points to an object on the\nfile system, regardless of the object's type, use the [type]\nstatic method.\n\n","line":"180"},{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"method","name":"existsSync","id":"existsSync0()","comment":"\nSynchronously checks whether the file system entity with this path\nexists.\n\nSince FileSystemEntity is abstract, every FileSystemEntity object\nis actually an instance of one of the subclasses [File],\n[Directory], and [Link].  Calling [existsSync] on an instance of\none of these subclasses checks whether the object exists in the\nfile system object exists and is of the correct type (file,\ndirectory, or link).  To check whether a path points to an object\non the file system, regardless of the object's type, use the\n[typeSync] static method.\n","line":"195"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"FileSystemEntity","refId":"dart.io/FileSystemEntity"}]},"kind":"method","name":"rename","id":"rename1()","comment":"\nRenames this file system entity. Returns a `Future<FileSystemEntity>`\nthat completes with a [FileSystemEntity] instance for the renamed\nfile system entity.\n\nIf [newPath] identifies an existing entity of the same type, that entity\nis replaced. If [newPath] identifies an existing entity of a different\ntype, the operation fails and the future completes with an exception.\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"newPath","id":"newPath"}],"line":"206"},{"returnType":{"name":"FileSystemEntity","refId":"dart.io/FileSystemEntity"},"kind":"method","name":"renameSync","id":"renameSync1()","comment":"\nSynchronously renames this file system entity. Returns a [FileSystemEntity]\ninstance for the renamed entity.\n\nIf [newPath] identifies an existing entity of the same type, that entity\nis replaced. If [newPath] identifies an existing entity of a different\ntype, the operation fails and an exception is thrown.\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"newPath","id":"newPath"}],"line":"216"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"String","refId":"dart.core/String"}]},"kind":"method","name":"resolveSymbolicLinks","id":"resolveSymbolicLinks0()","comment":"\nResolves the path of a file system object relative to the\ncurrent working directory, resolving all symbolic links on\nthe path and resolving all '..' and '.' path segments.\n[resolveSymbolicLinks] returns a [:Future<String>:]\n\n[resolveSymbolicLinks] uses the operating system's native filesystem api\nto resolve the path, using the realpath function on linux and\nMac OS, and the GetFinalPathNameByHandle function on Windows.\nIf the path does not point to an existing file system object,\n[resolveSymbolicLinks] completes the returned Future with an FileSystemException.\n\nOn Windows, symbolic links are resolved to their target before applying\na '..' that follows, and on other platforms, the '..' is applied to the\nsymbolic link without resolving it.  The second behavior can be emulated\non Windows by processing any '..' segments before calling\n[resolveSymbolicLinks].  One way of doing this is with the URI class:\n[:new Uri.parse('.').resolveUri(new Uri.file(input)).toFilePath();],\nsince [resolve] removes '..' segments.\n","line":"238"},{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"method","name":"resolveSymbolicLinksSync","id":"resolveSymbolicLinksSync0()","comment":"\nResolves the path of a file system object relative to the\ncurrent working directory, resolving all symbolic links on\nthe path and resolving all '..' and '.' path segments.\n\n[resolveSymbolicLinksSync] uses the operating system's native\nfilesystem api to resolve the path, using the realpath function\non linux and Mac OS, and the GetFinalPathNameByHandle function on Windows.\nIf the path does not point to an existing file system object,\n[resolveSymbolicLinksSync] throws a FileSystemException.\n\nOn Windows, symbolic links are resolved to their target before applying\na '..' that follows, and on other platforms, the '..' is applied to the\nsymbolic link without resolving it.  The second behavior can be emulated\non Windows by processing any '..' segments before calling\n[resolveSymbolicLinks].  One way of doing this is with the URI class:\n[:new Uri.parse('.').resolveUri(new Uri.file(input)).toFilePath();],\nsince [resolve] removes '..' segments.\n","line":"269"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"FileStat","refId":"dart.io/FileStat"}]},"kind":"method","name":"stat","id":"stat0()","comment":"\nCalls the operating system's stat() function on the [path] of this\n[FileSystemEntity].  Identical to [:FileStat.stat(this.path):].\n\nReturns a [:Future<FileStat>:] object containing the data returned by\nstat().\n\nIf the call fails, completes the future with a [FileStat] object\nwith .type set to\nFileSystemEntityType.NOT_FOUND and the other fields invalid.\n","line":"287"},{"returnType":{"name":"FileStat","refId":"dart.io/FileStat"},"kind":"method","name":"statSync","id":"statSync0()","comment":"\nSynchronously calls the operating system's stat() function on the\n[path] of this [FileSystemEntity].\nIdentical to [:FileStat.statSync(this.path):].\n\nReturns a [FileStat] object containing the data returned by stat().\n\nIf the call fails, returns a [FileStat] object with .type set to\nFileSystemEntityType.NOT_FOUND and the other fields invalid.\n","line":"299"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"FileSystemEntity","refId":"dart.io/FileSystemEntity"}]},"kind":"method","name":"delete","id":"delete1()","comment":"\nDeletes this [FileSystemEntity].\n\nIf the [FileSystemEntity] is a directory, and if [recursive] is false,\nthe directory must be empty. Otherwise, if [recursive] is true, the\ndirectory and all sub-directories and files in the directories are\ndeleted. Links are not followed when deleting recursively. Only the link\nis deleted, not its target.\n\nIf [recursive] is true, the [FileSystemEntity] is deleted even if the type\nof the [FileSystemEntity] doesn't match the content of the file system.\nThis behavior allows [delete] to be used to unconditionally delete any file\nsystem object.\n\nReturns a [:Future<FileSystemEntity>:] that completes with this\n[FileSystemEntity] when the deletion is done. If the [FileSystemEntity]\ncannot be deleted, the future completes with an exception.\n","children":[{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"false","isOptional":true,"isNamed":true,"kind":"param","name":"recursive","id":"recursive"}],"line":"319"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"deleteSync","id":"deleteSync1()","comment":"\nSynchronously deletes this [FileSystemEntity].\n\nIf the [FileSystemEntity] is a directory, and if [recursive] is false,\nthe directory must be empty. Otherwise, if [recursive] is true, the\ndirectory and all sub-directories and files in the directories are\ndeleted. Links are not followed when deleting recursively. Only the link\nis deleted, not its target.\n\nIf [recursive] is true, the [FileSystemEntity] is deleted even if the type\nof the [FileSystemEntity] doesn't match the content of the file system.\nThis behavior allows [deleteSync] to be used to unconditionally delete any\nfile system object.\n\nThrows an exception if the [FileSystemEntity] cannot be deleted.\n","children":[{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"false","isOptional":true,"isNamed":true,"kind":"param","name":"recursive","id":"recursive"}],"line":"338"},{"returnType":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"FileSystemEvent","refId":"dart.io/FileSystemEvent"}]},"kind":"method","name":"watch","id":"watch2()","comment":"\nStart watching the [FileSystemEntity] for changes.\n\nThe implementation uses platform-dependent event-based APIs for receiving\nfile-system notifications, thus behavior depends on the platform.\n\n  * `Windows`: Uses `ReadDirectoryChangesW`. The implementation only\n    supports watching directories. Recursive watching is supported.\n  * `Linux`: Uses `inotify`. The implementation supports watching both\n    files and directories. Recursive watching is not supported.\n    Note: When watching files directly, delete events might not happen\n    as expected.\n  * `Mac OS`: Uses `FSEvents`. The implementation supports watching both\n    files and directories. Recursive watching is supported.\n\nThe system will start listening for events once the returned [Stream] is\nbeing listened to, not when the call to [watch] is issued.\n\nThe returned value is an endless broadcast [Stream], that only stops when\none of the following happends:\n\n  * The [Stream] is canceled, e.g. by calling `cancel` on the\n     [StreamSubscription].\n  * The [FileSystemEntity] being watches, is deleted.\n\nUse `events` to specify what events to listen for. The constants in\n[FileSystemEvent] can be or'ed together to mix events. Default is\n[FileSystemEvent.ALL].\n","children":[{"ref":{"name":"int","refId":"dart.core/int"},"defaultValue":"FileSystemEvent.ALL","isOptional":true,"isNamed":true,"kind":"param","name":"events","id":"events"},{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"false","isOptional":true,"isNamed":true,"kind":"param","name":"recursive","id":"recursive","line":"372"}],"line":"371"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"FileSystemEntity","refId":"dart.io/FileSystemEntity"}]},"kind":"method","name":"_delete","id":"_delete1()","children":[{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"false","isOptional":true,"isNamed":true,"kind":"param","name":"recursive","id":"recursive"}],"isPrivate":true,"line":"377"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_deleteSync","id":"_deleteSync1()","children":[{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"false","isOptional":true,"isNamed":true,"kind":"param","name":"recursive","id":"recursive"}],"isPrivate":true,"line":"378"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"bool","refId":"dart.core/bool"}]},"isStatic":true,"kind":"method","name":"identical","id":"identical2()","comment":"\nChecks whether two paths refer to the same object in the\nfile system. Returns a [:Future<bool>:] that completes with the result.\n\nComparing a link to its target returns false, as does comparing two links\nthat point to the same target.  To check the target of a link, use\nLink.target explicitly to fetch it.  Directory links appearing\ninside a path are followed, though, to find the file system object.\n\nCompletes the returned Future with an error if one of the paths points\nto an object that does not exist.\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"path1","id":"path1"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"path2","id":"path2"}],"line":"392"},{"returnType":{"name":"bool","refId":"dart.core/bool"},"isStatic":true,"kind":"method","name":"identicalSync","id":"identicalSync2()","comment":"\nSynchronously checks whether two paths refer to the same object in the\nfile system.\n\nComparing a link to its target returns false, as does comparing two links\nthat point to the same target.  To check the target of a link, use\nLink.target explicitly to fetch it.  Directory links appearing\ninside a path are followed, though, to find the file system object.\n\nThrows an error if one of the paths points to an object that does not\nexist.\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"path1","id":"path1"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"path2","id":"path2"}],"line":"454"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"FileSystemEntityType","refId":"dart.io/FileSystemEntityType"}]},"isStatic":true,"kind":"method","name":"type","id":"type2()","comment":"\nFinds the type of file system object that a path points to. Returns\na [:Future<FileSystemEntityType>:] that completes with the result.\n\n[FileSystemEntityType] has the constant instances FILE, DIRECTORY,\nLINK, and NOT_FOUND.  [type] will return LINK only if the optional\nnamed argument [followLinks] is false, and [path] points to a link.\nIf the path does not point to a file system object, or any other error\noccurs in looking up the path, NOT_FOUND is returned.  The only\nerror or exception that may be put on the returned future is ArgumentError,\ncaused by passing the wrong type of arguments to the function.\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"path","id":"path"},{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"true","isOptional":true,"isNamed":true,"kind":"param","name":"followLinks","id":"followLinks","line":"480"}],"line":"479"},{"returnType":{"name":"FileSystemEntityType","refId":"dart.io/FileSystemEntityType"},"isStatic":true,"kind":"method","name":"typeSync","id":"typeSync2()","comment":"\nSynchronously finds the type of file system object that a path points to.\nReturns a [FileSystemEntityType].\n\n[FileSystemEntityType] has the constant instances FILE, DIRECTORY,\nLINK, and NOT_FOUND.  [type] will return LINK only if the optional\nnamed argument [followLinks] is false, and [path] points to a link.\nIf the path does not point to a file system object, or any other error\noccurs in looking up the path, NOT_FOUND is returned.  The only\nerror or exception that may be thrown is ArgumentError,\ncaused by passing the wrong type of arguments to the function.\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"path","id":"path"},{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"true","isOptional":true,"isNamed":true,"kind":"param","name":"followLinks","id":"followLinks"}],"line":"495"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"bool","refId":"dart.core/bool"}]},"isStatic":true,"kind":"method","name":"isLink","id":"isLink1()","comment":"\nChecks if type(path, followLinks: false) returns\nFileSystemEntityType.LINK.\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"path","id":"path"}],"line":"502"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"bool","refId":"dart.core/bool"}]},"isStatic":true,"kind":"method","name":"isFile","id":"isFile1()","comment":"\nChecks if type(path) returns FileSystemEntityType.FILE.\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"path","id":"path"}],"line":"508"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"bool","refId":"dart.core/bool"}]},"isStatic":true,"kind":"method","name":"isDirectory","id":"isDirectory1()","comment":"\nChecks if type(path) returns FileSystemEntityType.DIRECTORY.\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"path","id":"path"}],"line":"514"},{"returnType":{"name":"bool","refId":"dart.core/bool"},"isStatic":true,"kind":"method","name":"isLinkSync","id":"isLinkSync1()","comment":"\nSynchronously checks if typeSync(path, followLinks: false) returns\nFileSystemEntityType.LINK.\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"path","id":"path"}],"line":"521"},{"returnType":{"name":"bool","refId":"dart.core/bool"},"isStatic":true,"kind":"method","name":"isFileSync","id":"isFileSync1()","comment":"\nSynchronously checks if typeSync(path) returns\nFileSystemEntityType.FILE.\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"path","id":"path"}],"line":"528"},{"returnType":{"name":"bool","refId":"dart.core/bool"},"isStatic":true,"kind":"method","name":"isDirectorySync","id":"isDirectorySync1()","comment":"\nSynchronously checks if typeSync(path) returns\nFileSystemEntityType.DIRECTORY.\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"path","id":"path"}],"line":"535"},{"isStatic":true,"kind":"method","name":"_getType","id":"_getType2()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"path","id":"path"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"param","name":"followLinks","id":"followLinks"}],"isPrivate":true,"line":"538"},{"isStatic":true,"kind":"method","name":"_identical","id":"_identical2()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"path1","id":"path1"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"path2","id":"path2"}],"isPrivate":true,"line":"539"},{"isStatic":true,"kind":"method","name":"_resolveSymbolicLinks","id":"_resolveSymbolicLinks1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"path","id":"path"}],"isPrivate":true,"line":"540"},{"returnType":{"name":"String","refId":"dart.core/String"},"isStatic":true,"kind":"method","name":"parentOf","id":"parentOf1()","comment":"\nRemoves the final path component of a path, using the platform's\npath separator to split the path.  Will not remove the root component\nof a Windows path, like \"C:\\\" or \"\\\\server_name\\\".\nIgnores trailing path separators, and leaves no trailing path separators.\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"path","id":"path"}],"line":"553"},{"returnType":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"method","name":"_getTypeSync","id":"_getTypeSync2()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"path","id":"path"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"param","name":"followLinks","id":"followLinks"}],"isPrivate":true,"line":"584"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"int","refId":"dart.core/int"}]},"isStatic":true,"kind":"method","name":"_getTypeAsync","id":"_getTypeAsync2()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"path","id":"path"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"param","name":"followLinks","id":"followLinks"}],"isPrivate":true,"line":"590"},{"isStatic":true,"kind":"method","name":"_throwIfError","id":"_throwIfError3()","children":[{"ref":{"name":"Object","refId":"dart.core/Object"},"kind":"param","name":"result","id":"result"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"msg","id":"msg"},{"ref":{"name":"String","refId":"dart.core/String"},"isOptional":true,"kind":"param","name":"path","id":"path"}],"isPrivate":true,"line":"600"},{"returnType":{"name":"String","refId":"dart.core/String"},"isStatic":true,"kind":"method","name":"_trimTrailingPathSeparators","id":"_trimTrailingPathSeparators1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"path","id":"path"}],"isPrivate":true,"line":"608"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"property","name":"path","id":"path","line":"164"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"isAbsolute","id":"isAbsolute","comment":"\nReturns a [bool] indicating whether this object's path is absolute.\n\nOn Windows, a path is absolute if it starts with \\\\ or a drive letter\nbetween a and z (upper or lower case) followed by :\\ or :/.\nOn non-Windows, a path is absolute if it starts with /.\n","line":"412"},{"ref":{"name":"FileSystemEntity","refId":"dart.io/FileSystemEntity"},"kind":"property","name":"absolute","id":"absolute","comment":"\nReturns a [FileSystemEntity] whose path is the absolute path to [this].\nThe type of the returned instance is the type of [this].\n\nThe absolute path is computed by prefixing\na relative path with the current working directory, and returning\nan absolute path unchanged.\n","line":"428"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"property","name":"_absolutePath","id":"_absolutePath","isPrivate":true,"line":"430"},{"ref":{"name":"bool","refId":"dart.core/bool"},"isStatic":true,"kind":"property","name":"isWatchSupported","id":"isWatchSupported","comment":"\nTest if [watch] is supported on the current system.\n\nMac OS 10.6 and below is not supported.\n","line":"465"},{"ref":{"name":"Directory","refId":"dart.io/Directory"},"kind":"property","name":"parent","id":"parent","comment":"\nThe directory containing [this].  If [this] is a root\ndirectory, returns [this].\n","line":"582"},{"ref":{"name":"RegExp","refId":"dart.core/RegExp"},"isStatic":true,"isFinal":true,"kind":"variable","name":"_absoluteWindowsPathPattern","id":"_absoluteWindowsPathPattern","isPrivate":true,"line":"402"},{"ref":{"name":"RegExp","refId":"dart.core/RegExp"},"isStatic":true,"isFinal":true,"kind":"variable","name":"_parentRegExp","id":"_parentRegExp","isPrivate":true,"line":"543"}],"uri":"dart-sdk/lib/io/file_system_entity.dart","line":"163"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"kind":"class","name":"FileStat","id":"FileStat","comment":"\nA FileStat object represents the result of calling the POSIX stat() function\non a file system object.  It is an immutable object, representing the\nsnapshotted values returned by the stat() call.\n","children":[{"returnType":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"isStatic":true,"kind":"method","name":"_statSync","id":"_statSync1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"path","id":"path"}],"isPrivate":true,"line":"45"},{"returnType":{"name":"FileStat","refId":"dart.io/FileStat"},"isStatic":true,"kind":"method","name":"statSync","id":"statSync1()","comment":"\nCalls the operating system's stat() function on [path].\nReturns a [FileStat] object containing the data returned by stat().\nIf the call fails, returns a [FileStat] object with .type set to\nFileSystemEntityType.NOT_FOUND and the other fields invalid.\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"path","id":"path"}],"line":"54"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"FileStat","refId":"dart.io/FileStat"}]},"isStatic":true,"kind":"method","name":"stat","id":"stat1()","comment":"\nAsynchronously calls the operating system's stat() function on [path].\nReturns a Future which completes with a [FileStat] object containing\nthe data returned by stat().\nIf the call fails, completes the future with a [FileStat] object with\n.type set to FileSystemEntityType.NOT_FOUND and the other fields invalid.\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"path","id":"path"}],"line":"73"},{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"method","name":"toString","id":"toString0()","line":"92"},{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"method","name":"modeString","id":"modeString0()","comment":"\nReturns the mode value as a human-readable string, in the format\n\"rwxrwxrwx\", reflecting the user, group, and world permissions to\nread, write, and execute the file system object, with \"-\" replacing the\nletter for missing permissions.  Extra permission bits may be represented\nby prepending \"(suid)\", \"(guid)\", and/or \"(sticky)\" to the mode string.\n","line":"107"},{"isStatic":true,"kind":"variable","name":"_TYPE","id":"_TYPE","isPrivate":true,"line":"31"},{"isStatic":true,"kind":"variable","name":"_CHANGED_TIME","id":"_CHANGED_TIME","isPrivate":true,"line":"32"},{"isStatic":true,"kind":"variable","name":"_MODIFIED_TIME","id":"_MODIFIED_TIME","isPrivate":true,"line":"33"},{"isStatic":true,"kind":"variable","name":"_ACCESSED_TIME","id":"_ACCESSED_TIME","isPrivate":true,"line":"34"},{"isStatic":true,"kind":"variable","name":"_MODE","id":"_MODE","isPrivate":true,"line":"35"},{"isStatic":true,"kind":"variable","name":"_SIZE","id":"_SIZE","isPrivate":true,"line":"36"},{"ref":{"name":"DateTime","refId":"dart.core/DateTime"},"isFinal":true,"kind":"variable","name":"changed","id":"changed","comment":"\nThe time of the last change to the data or metadata of the file system\nobject.  On Windows platforms, this is instead the file creation time.\n","line":"124"},{"ref":{"name":"DateTime","refId":"dart.core/DateTime"},"isFinal":true,"kind":"variable","name":"modified","id":"modified","comment":"\nThe time of the last change to the data of the file system\nobject.\n","line":"129"},{"ref":{"name":"DateTime","refId":"dart.core/DateTime"},"isFinal":true,"kind":"variable","name":"accessed","id":"accessed","comment":"\nThe time of the last access to the data of the file system\nobject.  On Windows platforms, this may have 1 day granularity, and be\nout of date by an hour.\n","line":"135"},{"ref":{"name":"FileSystemEntityType","refId":"dart.io/FileSystemEntityType"},"isFinal":true,"kind":"variable","name":"type","id":"type","comment":"\nThe type of the object (file, directory, or link).  If the call to\nstat() fails, the type of the returned object is NOT_FOUND.\n","line":"140"},{"ref":{"name":"int","refId":"dart.core/int"},"isFinal":true,"kind":"variable","name":"mode","id":"mode","comment":"\nThe mode of the file system object.  Permissions are encoded in the lower\n16 bits of this number, and can be decoded using the [modeString] getter.\n","line":"145"},{"ref":{"name":"int","refId":"dart.core/int"},"isFinal":true,"kind":"variable","name":"size","id":"size","comment":"\nThe size of the file system object.\n","line":"149"},{"kind":"constructor","name":"_internal","id":"_internal6()","children":[{"ref":{"name":"DateTime","refId":"dart.core/DateTime"},"initializedField":{"name":"changed","refId":"dart.io/FileStat/changed"},"kind":"param","name":"changed","id":"changed"},{"ref":{"name":"DateTime","refId":"dart.core/DateTime"},"initializedField":{"name":"modified","refId":"dart.io/FileStat/modified"},"kind":"param","name":"modified","id":"modified","line":"39"},{"ref":{"name":"DateTime","refId":"dart.core/DateTime"},"initializedField":{"name":"accessed","refId":"dart.io/FileStat/accessed"},"kind":"param","name":"accessed","id":"accessed","line":"40"},{"ref":{"name":"FileSystemEntityType","refId":"dart.io/FileSystemEntityType"},"initializedField":{"name":"type","refId":"dart.io/FileStat/type"},"kind":"param","name":"type","id":"type","line":"41"},{"ref":{"name":"int","refId":"dart.core/int"},"initializedField":{"name":"mode","refId":"dart.io/FileStat/mode"},"kind":"param","name":"mode","id":"mode","line":"42"},{"ref":{"name":"int","refId":"dart.core/int"},"initializedField":{"name":"size","refId":"dart.io/FileStat/size"},"kind":"param","name":"size","id":"size","line":"43"}],"isPrivate":true,"line":"38"}],"uri":"dart-sdk/lib/io/file_system_entity.dart","line":"29"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"kind":"class","name":"FileSystemEntityType","id":"FileSystemEntityType","children":[{"returnType":{"name":"FileSystemEntityType","refId":"dart.io/FileSystemEntityType"},"isStatic":true,"kind":"method","name":"_lookup","id":"_lookup1()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"type","id":"type"}],"isPrivate":true,"line":"18"},{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"method","name":"toString","id":"toString0()","line":"19"},{"isStatic":true,"kind":"variable","name":"FILE","id":"FILE","line":"8"},{"isStatic":true,"kind":"variable","name":"DIRECTORY","id":"DIRECTORY","line":"9"},{"isStatic":true,"kind":"variable","name":"LINK","id":"LINK","line":"10"},{"isStatic":true,"kind":"variable","name":"NOT_FOUND","id":"NOT_FOUND","line":"11"},{"isStatic":true,"kind":"variable","name":"_typeList","id":"_typeList","isPrivate":true,"line":"12"},{"ref":{"name":"int","refId":"dart.core/int"},"isFinal":true,"kind":"variable","name":"_type","id":"_type","isPrivate":true,"line":"21"},{"kind":"constructor","name":"_internal","id":"_internal1()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"initializedField":{"name":"_type","refId":"dart.io/FileSystemEntityType/_type"},"kind":"param","name":"_type","id":"_type","isPrivate":true}],"isPrivate":true,"line":"16"}],"uri":"dart-sdk/lib/io/file_system_entity.dart","line":"7"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"interfaces":[{"name":"RandomAccessFile","refId":"dart.io/RandomAccessFile"}],"kind":"class","name":"_RandomAccessFile","id":"_RandomAccessFile","children":[{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"RandomAccessFile","refId":"dart.io/RandomAccessFile"}]},"kind":"method","name":"close","id":"close0()","line":"577"},{"returnType":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"method","name":"_close","id":"_close1()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"id","id":"id"}],"isPrivate":true,"line":"588"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"closeSync","id":"closeSync0()","line":"590"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"method","name":"readByte","id":"readByte0()","line":"599"},{"isStatic":true,"kind":"method","name":"_readByte","id":"_readByte1()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"id","id":"id"}],"isPrivate":true,"line":"608"},{"returnType":{"name":"int","refId":"dart.core/int"},"kind":"method","name":"readByteSync","id":"readByteSync0()","line":"610"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]}]},"kind":"method","name":"read","id":"read1()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"bytes","id":"bytes"}],"line":"619"},{"isStatic":true,"kind":"method","name":"_read","id":"_read2()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"id","id":"id"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"bytes","id":"bytes"}],"isPrivate":true,"line":"631"},{"returnType":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"method","name":"readSync","id":"readSync1()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"bytes","id":"bytes"}],"line":"633"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"method","name":"readInto","id":"readInto3()","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"param","name":"buffer","id":"buffer"},{"ref":{"name":"int","refId":"dart.core/int"},"isOptional":true,"kind":"param","name":"start","id":"start"},{"ref":{"name":"int","refId":"dart.core/int"},"isOptional":true,"kind":"param","name":"end","id":"end"}],"line":"645"},{"returnType":{"name":"void","refId":"void"},"isStatic":true,"kind":"method","name":"_checkReadWriteListArguments","id":"_checkReadWriteListArguments3()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"length","id":"length"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"start","id":"start"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"end","id":"end"}],"isPrivate":true,"line":"665"},{"isStatic":true,"kind":"method","name":"_readInto","id":"_readInto4()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"id","id":"id"},{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"param","name":"buffer","id":"buffer"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"start","id":"start"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"end","id":"end"}],"isPrivate":true,"line":"673"},{"returnType":{"name":"int","refId":"dart.core/int"},"kind":"method","name":"readIntoSync","id":"readIntoSync3()","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"param","name":"buffer","id":"buffer"},{"ref":{"name":"int","refId":"dart.core/int"},"isOptional":true,"kind":"param","name":"start","id":"start"},{"ref":{"name":"int","refId":"dart.core/int"},"isOptional":true,"kind":"param","name":"end","id":"end"}],"line":"675"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"RandomAccessFile","refId":"dart.io/RandomAccessFile"}]},"kind":"method","name":"writeByte","id":"writeByte1()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"value","id":"value"}],"line":"693"},{"isStatic":true,"kind":"method","name":"_writeByte","id":"_writeByte2()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"id","id":"id"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"value","id":"value"}],"isPrivate":true,"line":"705"},{"returnType":{"name":"int","refId":"dart.core/int"},"kind":"method","name":"writeByteSync","id":"writeByteSync1()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"value","id":"value"}],"line":"707"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"RandomAccessFile","refId":"dart.io/RandomAccessFile"}]},"kind":"method","name":"writeFrom","id":"writeFrom3()","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"param","name":"buffer","id":"buffer"},{"ref":{"name":"int","refId":"dart.core/int"},"isOptional":true,"kind":"param","name":"start","id":"start"},{"ref":{"name":"int","refId":"dart.core/int"},"isOptional":true,"kind":"param","name":"end","id":"end"}],"line":"719"},{"isStatic":true,"kind":"method","name":"_writeFrom","id":"_writeFrom4()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"id","id":"id"},{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"param","name":"buffer","id":"buffer"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"start","id":"start"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"end","id":"end"}],"isPrivate":true,"line":"746"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"writeFromSync","id":"writeFromSync3()","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"param","name":"buffer","id":"buffer"},{"ref":{"name":"int","refId":"dart.core/int"},"isOptional":true,"kind":"param","name":"start","id":"start"},{"ref":{"name":"int","refId":"dart.core/int"},"isOptional":true,"kind":"param","name":"end","id":"end"}],"line":"748"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"RandomAccessFile","refId":"dart.io/RandomAccessFile"}]},"kind":"method","name":"writeString","id":"writeString2()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"string","id":"string"},{"ref":{"name":"Encoding","refId":"dart.convert/Encoding"},"defaultValue":"UTF8","isOptional":true,"isNamed":true,"kind":"param","name":"encoding","id":"encoding","line":"771"}],"line":"770"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"writeStringSync","id":"writeStringSync2()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"string","id":"string"},{"ref":{"name":"Encoding","refId":"dart.convert/Encoding"},"defaultValue":"UTF8","isOptional":true,"isNamed":true,"kind":"param","name":"encoding","id":"encoding"}],"line":"779"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"method","name":"position","id":"position0()","line":"787"},{"isStatic":true,"kind":"method","name":"_position","id":"_position1()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"id","id":"id"}],"isPrivate":true,"line":"796"},{"returnType":{"name":"int","refId":"dart.core/int"},"kind":"method","name":"positionSync","id":"positionSync0()","line":"798"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"RandomAccessFile","refId":"dart.io/RandomAccessFile"}]},"kind":"method","name":"setPosition","id":"setPosition1()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"position","id":"position"}],"line":"807"},{"isStatic":true,"kind":"method","name":"_setPosition","id":"_setPosition2()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"id","id":"id"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"position","id":"position"}],"isPrivate":true,"line":"817"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"setPositionSync","id":"setPositionSync1()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"position","id":"position"}],"line":"819"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"RandomAccessFile","refId":"dart.io/RandomAccessFile"}]},"kind":"method","name":"truncate","id":"truncate1()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"length","id":"length"}],"line":"827"},{"isStatic":true,"kind":"method","name":"_truncate","id":"_truncate2()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"id","id":"id"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"length","id":"length"}],"isPrivate":true,"line":"836"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"truncateSync","id":"truncateSync1()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"length","id":"length"}],"line":"838"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"method","name":"length","id":"length0()","line":"846"},{"isStatic":true,"kind":"method","name":"_length","id":"_length1()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"id","id":"id"}],"isPrivate":true,"line":"855"},{"returnType":{"name":"int","refId":"dart.core/int"},"kind":"method","name":"lengthSync","id":"lengthSync0()","line":"857"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"RandomAccessFile","refId":"dart.io/RandomAccessFile"}]},"kind":"method","name":"flush","id":"flush0()","line":"866"},{"isStatic":true,"kind":"method","name":"_flush","id":"_flush1()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"id","id":"id"}],"isPrivate":true,"line":"877"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"flushSync","id":"flushSync0()","line":"879"},{"returnType":{"name":"Future","refId":"dart.async/Future"},"kind":"method","name":"_dispatch","id":"_dispatch3()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"request","id":"request"},{"ref":{"name":"List","refId":"dart.core/List"},"kind":"param","name":"data","id":"data"},{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"false","isOptional":true,"isNamed":true,"kind":"param","name":"markClosed","id":"markClosed"}],"isPrivate":true,"line":"889"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_checkAvailable","id":"_checkAvailable0()","isPrivate":true,"line":"909"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"closed","id":"closed","line":"887"},{"ref":{"name":"String","refId":"dart.core/String"},"isFinal":true,"kind":"variable","name":"path","id":"path","line":"570"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"_id","id":"_id","isPrivate":true,"line":"571"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"variable","name":"_asyncDispatched","id":"_asyncDispatched","isPrivate":true,"line":"572"},{"ref":{"name":"SendPort","refId":"dart.isolate/SendPort"},"kind":"variable","name":"_fileService","id":"_fileService","isPrivate":true,"line":"573"},{"kind":"constructor","name":"","id":"2()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"initializedField":{"name":"_id","refId":"dart.io/_RandomAccessFile/_id"},"kind":"param","name":"_id","id":"_id","isPrivate":true},{"ref":{"name":"String","refId":"dart.core/String"},"initializedField":{"name":"path","refId":"dart.io/_RandomAccessFile/path"},"kind":"param","name":"path","id":"path"}],"line":"575"}],"isPrivate":true,"uri":"dart-sdk/lib/io/file_impl.dart","line":"569"},{"superclass":{"name":"FileSystemEntity","refId":"dart.io/FileSystemEntity"},"interfaces":[{"name":"File","refId":"dart.io/File"}],"kind":"class","name":"_File","id":"_File","children":[{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"bool","refId":"dart.core/bool"}]},"kind":"method","name":"exists","id":"exists0()","line":"236"},{"isStatic":true,"kind":"method","name":"_exists","id":"_exists1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"path","id":"path"}],"isPrivate":true,"line":"245"},{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"method","name":"existsSync","id":"existsSync0()","line":"247"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"FileStat","refId":"dart.io/FileStat"}]},"kind":"method","name":"stat","id":"stat0()","line":"255"},{"returnType":{"name":"FileStat","refId":"dart.io/FileStat"},"kind":"method","name":"statSync","id":"statSync0()","line":"257"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"File","refId":"dart.io/File"}]},"kind":"method","name":"create","id":"create1()","children":[{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"false","isOptional":true,"isNamed":true,"kind":"param","name":"recursive","id":"recursive"}],"line":"259"},{"isStatic":true,"kind":"method","name":"_create","id":"_create1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"path","id":"path"}],"isPrivate":true,"line":"272"},{"isStatic":true,"kind":"method","name":"_createLink","id":"_createLink2()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"path","id":"path"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"target","id":"target"}],"isPrivate":true,"line":"274"},{"isStatic":true,"kind":"method","name":"_linkTarget","id":"_linkTarget1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"path","id":"path"}],"isPrivate":true,"line":"276"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"createSync","id":"createSync1()","children":[{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"false","isOptional":true,"isNamed":true,"kind":"param","name":"recursive","id":"recursive"}],"line":"278"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"File","refId":"dart.io/File"}]},"kind":"method","name":"_delete","id":"_delete1()","children":[{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"false","isOptional":true,"isNamed":true,"kind":"param","name":"recursive","id":"recursive"}],"isPrivate":true,"line":"286"},{"isStatic":true,"kind":"method","name":"_deleteNative","id":"_deleteNative1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"path","id":"path"}],"isPrivate":true,"line":"298"},{"isStatic":true,"kind":"method","name":"_deleteLinkNative","id":"_deleteLinkNative1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"path","id":"path"}],"isPrivate":true,"line":"300"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_deleteSync","id":"_deleteSync1()","children":[{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"false","isOptional":true,"isNamed":true,"kind":"param","name":"recursive","id":"recursive"}],"isPrivate":true,"line":"302"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"File","refId":"dart.io/File"}]},"kind":"method","name":"rename","id":"rename1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"newPath","id":"newPath"}],"line":"310"},{"isStatic":true,"kind":"method","name":"_rename","id":"_rename2()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"oldPath","id":"oldPath"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"newPath","id":"newPath"}],"isPrivate":true,"line":"320"},{"isStatic":true,"kind":"method","name":"_renameLink","id":"_renameLink2()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"oldPath","id":"oldPath"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"newPath","id":"newPath"}],"isPrivate":true,"line":"322"},{"returnType":{"name":"File","refId":"dart.io/File"},"kind":"method","name":"renameSync","id":"renameSync1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"newPath","id":"newPath"}],"line":"324"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"File","refId":"dart.io/File"}]},"kind":"method","name":"copy","id":"copy1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"newPath","id":"newPath"}],"line":"330"},{"isStatic":true,"kind":"method","name":"_copy","id":"_copy2()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"oldPath","id":"oldPath"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"newPath","id":"newPath"}],"isPrivate":true,"line":"340"},{"returnType":{"name":"File","refId":"dart.io/File"},"kind":"method","name":"copySync","id":"copySync1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"newPath","id":"newPath"}],"line":"342"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"RandomAccessFile","refId":"dart.io/RandomAccessFile"}]},"kind":"method","name":"open","id":"open1()","children":[{"ref":{"name":"FileMode","refId":"dart.io/FileMode"},"defaultValue":"FileMode.READ","isOptional":true,"isNamed":true,"kind":"param","name":"mode","id":"mode"}],"line":"348"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"method","name":"length","id":"length0()","line":"362"},{"isStatic":true,"kind":"method","name":"_lengthFromPath","id":"_lengthFromPath1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"path","id":"path"}],"isPrivate":true,"line":"374"},{"returnType":{"name":"int","refId":"dart.core/int"},"kind":"method","name":"lengthSync","id":"lengthSync0()","line":"376"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"DateTime","refId":"dart.core/DateTime"}]},"kind":"method","name":"lastModified","id":"lastModified0()","line":"382"},{"isStatic":true,"kind":"method","name":"_lastModified","id":"_lastModified1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"path","id":"path"}],"isPrivate":true,"line":"393"},{"returnType":{"name":"DateTime","refId":"dart.core/DateTime"},"kind":"method","name":"lastModifiedSync","id":"lastModifiedSync0()","line":"395"},{"isStatic":true,"kind":"method","name":"_open","id":"_open2()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"path","id":"path"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"mode","id":"mode"}],"isPrivate":true,"line":"401"},{"returnType":{"name":"RandomAccessFile","refId":"dart.io/RandomAccessFile"},"kind":"method","name":"openSync","id":"openSync1()","children":[{"ref":{"name":"FileMode","refId":"dart.io/FileMode"},"defaultValue":"FileMode.READ","isOptional":true,"isNamed":true,"kind":"param","name":"mode","id":"mode"}],"line":"403"},{"returnType":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"method","name":"_openStdio","id":"_openStdio1()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"fd","id":"fd"}],"isPrivate":true,"line":"416"},{"returnType":{"name":"RandomAccessFile","refId":"dart.io/RandomAccessFile"},"isStatic":true,"kind":"method","name":"_openStdioSync","id":"_openStdioSync1()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"fd","id":"fd"}],"isPrivate":true,"line":"418"},{"returnType":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]}]},"kind":"method","name":"openRead","id":"openRead2()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"isOptional":true,"kind":"param","name":"start","id":"start"},{"ref":{"name":"int","refId":"dart.core/int"},"isOptional":true,"kind":"param","name":"end","id":"end"}],"line":"426"},{"returnType":{"name":"IOSink","refId":"dart.io/IOSink"},"kind":"method","name":"openWrite","id":"openWrite2()","children":[{"ref":{"name":"FileMode","refId":"dart.io/FileMode"},"defaultValue":"FileMode.WRITE","isOptional":true,"isNamed":true,"kind":"param","name":"mode","id":"mode"},{"ref":{"name":"Encoding","refId":"dart.convert/Encoding"},"defaultValue":"UTF8","isOptional":true,"isNamed":true,"kind":"param","name":"encoding","id":"encoding","line":"431"}],"line":"430"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]}]},"kind":"method","name":"readAsBytes","id":"readAsBytes0()","line":"441"},{"returnType":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"method","name":"readAsBytesSync","id":"readAsBytesSync0()","line":"456"},{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"method","name":"_tryDecode","id":"_tryDecode2()","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"param","name":"bytes","id":"bytes"},{"ref":{"name":"Encoding","refId":"dart.convert/Encoding"},"kind":"param","name":"encoding","id":"encoding"}],"isPrivate":true,"line":"467"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"String","refId":"dart.core/String"}]},"kind":"method","name":"readAsString","id":"readAsString1()","children":[{"ref":{"name":"Encoding","refId":"dart.convert/Encoding"},"defaultValue":"UTF8","isOptional":true,"isNamed":true,"kind":"param","name":"encoding","id":"encoding"}],"line":"476"},{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"method","name":"readAsStringSync","id":"readAsStringSync1()","children":[{"ref":{"name":"Encoding","refId":"dart.convert/Encoding"},"defaultValue":"UTF8","isOptional":true,"isNamed":true,"kind":"param","name":"encoding","id":"encoding"}],"line":"482"},{"returnType":{"name":"List","refId":"dart.core/List","arguments":[{"name":"String","refId":"dart.core/String"}]},"kind":"method","name":"_decodeLines","id":"_decodeLines2()","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"param","name":"bytes","id":"bytes"},{"ref":{"name":"Encoding","refId":"dart.convert/Encoding"},"kind":"param","name":"encoding","id":"encoding"}],"isPrivate":true,"line":"487"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"List","refId":"dart.core/List","arguments":[{"name":"String","refId":"dart.core/String"}]}]},"kind":"method","name":"readAsLines","id":"readAsLines1()","children":[{"ref":{"name":"Encoding","refId":"dart.convert/Encoding"},"defaultValue":"UTF8","isOptional":true,"isNamed":true,"kind":"param","name":"encoding","id":"encoding"}],"line":"505"},{"returnType":{"name":"List","refId":"dart.core/List","arguments":[{"name":"String","refId":"dart.core/String"}]},"kind":"method","name":"readAsLinesSync","id":"readAsLinesSync1()","children":[{"ref":{"name":"Encoding","refId":"dart.convert/Encoding"},"defaultValue":"UTF8","isOptional":true,"isNamed":true,"kind":"param","name":"encoding","id":"encoding"}],"line":"511"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"File","refId":"dart.io/File"}]},"kind":"method","name":"writeAsBytes","id":"writeAsBytes3()","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"param","name":"bytes","id":"bytes"},{"ref":{"name":"FileMode","refId":"dart.io/FileMode"},"defaultValue":"FileMode.WRITE","isOptional":true,"isNamed":true,"kind":"param","name":"mode","id":"mode","line":"516"},{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"false","isOptional":true,"isNamed":true,"kind":"param","name":"flush","id":"flush","line":"517"}],"line":"515"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"writeAsBytesSync","id":"writeAsBytesSync3()","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"param","name":"bytes","id":"bytes"},{"ref":{"name":"FileMode","refId":"dart.io/FileMode"},"defaultValue":"FileMode.WRITE","isOptional":true,"isNamed":true,"kind":"param","name":"mode","id":"mode","line":"533"},{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"false","isOptional":true,"isNamed":true,"kind":"param","name":"flush","id":"flush","line":"534"}],"line":"532"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"File","refId":"dart.io/File"}]},"kind":"method","name":"writeAsString","id":"writeAsString4()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"contents","id":"contents"},{"ref":{"name":"FileMode","refId":"dart.io/FileMode"},"defaultValue":"FileMode.WRITE","isOptional":true,"isNamed":true,"kind":"param","name":"mode","id":"mode","line":"542"},{"ref":{"name":"Encoding","refId":"dart.convert/Encoding"},"defaultValue":"UTF8","isOptional":true,"isNamed":true,"kind":"param","name":"encoding","id":"encoding","line":"543"},{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"false","isOptional":true,"isNamed":true,"kind":"param","name":"flush","id":"flush","line":"544"}],"line":"541"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"writeAsStringSync","id":"writeAsStringSync4()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"contents","id":"contents"},{"ref":{"name":"FileMode","refId":"dart.io/FileMode"},"defaultValue":"FileMode.WRITE","isOptional":true,"isNamed":true,"kind":"param","name":"mode","id":"mode","line":"553"},{"ref":{"name":"Encoding","refId":"dart.convert/Encoding"},"defaultValue":"UTF8","isOptional":true,"isNamed":true,"kind":"param","name":"encoding","id":"encoding","line":"554"},{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"false","isOptional":true,"isNamed":true,"kind":"param","name":"flush","id":"flush","line":"555"}],"line":"552"},{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"method","name":"toString","id":"toString0()","line":"559"},{"isStatic":true,"kind":"method","name":"throwIfError","id":"throwIfError3()","children":[{"ref":{"name":"Object","refId":"dart.core/Object"},"kind":"param","name":"result","id":"result"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"msg","id":"msg"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"path","id":"path"}],"line":"561"},{"ref":{"name":"File","refId":"dart.io/File"},"kind":"property","name":"absolute","id":"absolute","line":"253"},{"ref":{"name":"String","refId":"dart.core/String"},"isFinal":true,"kind":"variable","name":"path","id":"path","line":"226"},{"kind":"constructor","name":"","id":"1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"initializedField":{"name":"path","refId":"dart.io/_File/path"},"kind":"param","name":"path","id":"path"}],"line":"229"}],"isPrivate":true,"uri":"dart-sdk/lib/io/file_impl.dart","line":"225"},{"superclass":{"name":"StreamConsumer","refId":"dart.async/StreamConsumer","arguments":[{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]}]},"kind":"class","name":"_FileStreamConsumer","id":"_FileStreamConsumer","children":[{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"File","refId":"dart.io/File"}]},"kind":"method","name":"addStream","id":"addStream1()","children":[{"ref":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]}]},"kind":"param","name":"stream","id":"stream"}],"line":"189"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"File","refId":"dart.io/File"}]},"kind":"method","name":"close","id":"close0()","line":"218"},{"ref":{"name":"File","refId":"dart.io/File"},"kind":"variable","name":"_file","id":"_file","isPrivate":true,"line":"176"},{"ref":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"RandomAccessFile","refId":"dart.io/RandomAccessFile"}]},"kind":"variable","name":"_openFuture","id":"_openFuture","isPrivate":true,"line":"177"},{"ref":{"name":"StreamSubscription","refId":"dart.async/StreamSubscription"},"kind":"variable","name":"_subscription","id":"_subscription","isPrivate":true,"line":"178"},{"kind":"constructor","name":"","id":"2()","children":[{"ref":{"name":"File","refId":"dart.io/File"},"initializedField":{"name":"_file","refId":"dart.io/_FileStreamConsumer/_file"},"kind":"param","name":"_file","id":"_file","isPrivate":true},{"ref":{"name":"FileMode","refId":"dart.io/FileMode"},"kind":"param","name":"mode","id":"mode"}],"line":"180"},{"kind":"constructor","name":"fromStdio","id":"fromStdio1()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"fd","id":"fd"}],"line":"184"}],"isPrivate":true,"uri":"dart-sdk/lib/io/file_impl.dart","line":"175"},{"superclass":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]}]},"kind":"class","name":"_FileStream","id":"_FileStream","children":[{"returnType":{"name":"StreamSubscription","refId":"dart.async/StreamSubscription","arguments":[{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]}]},"kind":"method","name":"listen","id":"listen4()","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"onData","id":"onData","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"param","name":"event","id":"event","uri":"dart-sdk/lib/io/file_impl.dart","line":"41"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]},{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"isNamed":true,"kind":"param","name":"onError","id":"onError","line":"42"},{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"isNamed":true,"kind":"param","name":"onDone","id":"onDone","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","uri":"dart-sdk/lib/core/function.dart","line":"13"}],"line":"43"},{"ref":{"name":"bool","refId":"dart.core/bool"},"isOptional":true,"isNamed":true,"kind":"param","name":"cancelOnError","id":"cancelOnError","line":"44"}],"line":"41"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_setupController","id":"_setupController0()","isPrivate":true,"line":"51"},{"returnType":{"name":"Future","refId":"dart.async/Future"},"kind":"method","name":"_closeFile","id":"_closeFile0()","isPrivate":true,"line":"62"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_readBlock","id":"_readBlock0()","isPrivate":true,"line":"82"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_start","id":"_start0()","isPrivate":true,"line":"132"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_resume","id":"_resume0()","isPrivate":true,"line":"164"},{"ref":{"name":"StreamController","refId":"dart.async/StreamController","arguments":[{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]}]},"kind":"variable","name":"_controller","id":"_controller","isPrivate":true,"line":"13"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"variable","name":"_path","id":"_path","isPrivate":true,"line":"16"},{"ref":{"name":"RandomAccessFile","refId":"dart.io/RandomAccessFile"},"kind":"variable","name":"_openedFile","id":"_openedFile","isPrivate":true,"line":"17"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"_position","id":"_position","isPrivate":true,"line":"18"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"_end","id":"_end","isPrivate":true,"line":"19"},{"ref":{"name":"Completer","refId":"dart.async/Completer"},"isFinal":true,"kind":"variable","name":"_closeCompleter","id":"_closeCompleter","isPrivate":true,"line":"20"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"variable","name":"_paused","id":"_paused","isPrivate":true,"line":"23"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"variable","name":"_unsubscribed","id":"_unsubscribed","isPrivate":true,"line":"24"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"variable","name":"_readInProgress","id":"_readInProgress","isPrivate":true,"line":"27"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"variable","name":"_closed","id":"_closed","isPrivate":true,"line":"28"},{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"variable","name":"_currentBlock","id":"_currentBlock","isPrivate":true,"line":"31"},{"kind":"constructor","name":"","id":"3()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"initializedField":{"name":"_path","refId":"dart.io/_FileStream/_path"},"kind":"param","name":"_path","id":"_path","isPrivate":true},{"ref":{"name":"int","refId":"dart.core/int"},"initializedField":{"name":"_position","refId":"dart.io/_FileStream/_position"},"kind":"param","name":"_position","id":"_position","isPrivate":true},{"ref":{"name":"int","refId":"dart.core/int"},"initializedField":{"name":"_end","refId":"dart.io/_FileStream/_end"},"kind":"param","name":"_end","id":"_end","isPrivate":true}],"line":"33"},{"kind":"constructor","name":"forStdin","id":"forStdin0()","line":"37"}],"isPrivate":true,"uri":"dart-sdk/lib/io/file_impl.dart","line":"11"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"interfaces":[{"name":"IOException","refId":"dart.io/IOException"}],"isThrowable":true,"kind":"class","name":"FileSystemException","id":"FileSystemException","children":[{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"method","name":"toString","id":"toString0()","line":"571"},{"ref":{"name":"String","refId":"dart.core/String"},"isFinal":true,"kind":"variable","name":"message","id":"message","line":"564"},{"ref":{"name":"String","refId":"dart.core/String"},"isFinal":true,"kind":"variable","name":"path","id":"path","line":"565"},{"ref":{"name":"OSError","refId":"dart.io/OSError"},"isFinal":true,"kind":"variable","name":"osError","id":"osError","line":"566"},{"kind":"constructor","name":"","id":"3()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"defaultValue":"\"\"","isOptional":true,"initializedField":{"name":"message","refId":"dart.io/FileSystemException/message"},"kind":"param","name":"message","id":"message"},{"ref":{"name":"String","refId":"dart.core/String"},"defaultValue":"\"\"","isOptional":true,"initializedField":{"name":"path","refId":"dart.io/FileSystemException/path"},"kind":"param","name":"path","id":"path","line":"568"},{"ref":{"name":"OSError","refId":"dart.io/OSError"},"isOptional":true,"initializedField":{"name":"osError","refId":"dart.io/FileSystemException/osError"},"kind":"param","name":"osError","id":"osError","line":"569"}],"line":"567"}],"uri":"dart-sdk/lib/io/file.dart","line":"563"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"kind":"class","name":"RandomAccessFile","id":"RandomAccessFile","comment":"\n[RandomAccessFile] provides random access to the data in a\nfile. [RandomAccessFile] objects are obtained by calling the\n[:open:] method on a [File] object.\n","children":[{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"RandomAccessFile","refId":"dart.io/RandomAccessFile"}]},"kind":"method","name":"close","id":"close0()","comment":"\nCloses the file. Returns a [:Future<RandomAccessFile>:] that\ncompletes with this RandomAccessFile when it has been closed.\n","line":"373"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"closeSync","id":"closeSync0()","comment":"\nSynchronously closes the file.\n\nThrows a [FileSystemException] if the operation fails.\n","line":"380"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"method","name":"readByte","id":"readByte0()","comment":"\nReads a byte from the file. Returns a [:Future<int>:] that\ncompletes with the byte, or with -1 if end-of-file has been reached.\n","line":"386"},{"returnType":{"name":"int","refId":"dart.core/int"},"kind":"method","name":"readByteSync","id":"readByteSync0()","comment":"\nSynchronously reads a single byte from the file. If end-of-file\nhas been reached -1 is returned.\n\nThrows a [FileSystemException] if the operation fails.\n","line":"394"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]}]},"kind":"method","name":"read","id":"read1()","comment":"\nReads [bytes] bytes from a file and returns the result as a list of bytes.\n","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"bytes","id":"bytes"}],"line":"399"},{"returnType":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"method","name":"readSync","id":"readSync1()","comment":"\nSynchronously reads a maximum of [bytes] bytes from a file and\nreturns the result in a list of bytes.\n\nThrows a [FileSystemException] if the operation fails.\n","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"bytes","id":"bytes"}],"line":"407"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"method","name":"readInto","id":"readInto3()","comment":"\nReads into an existing List<int> from the file. If [start] is present, the\nbytes will be filled into [buffer] from at index [start], otherwise index\n0. If [end] is present, the [end] - [start] bytes will be read into\n[buffer], otherwise up to [buffer.length]. If [end] == [start] nothing\nhappends.\n\nReturns a [:Future<int>:] that completes with the number of bytes read.\n","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"param","name":"buffer","id":"buffer"},{"ref":{"name":"int","refId":"dart.core/int"},"isOptional":true,"kind":"param","name":"start","id":"start"},{"ref":{"name":"int","refId":"dart.core/int"},"isOptional":true,"kind":"param","name":"end","id":"end"}],"line":"418"},{"returnType":{"name":"int","refId":"dart.core/int"},"kind":"method","name":"readIntoSync","id":"readIntoSync3()","comment":"\nSynchronously reads into an existing List<int> from the file. If [start] is\npresent, the bytes will be filled into [buffer] from at index [start],\notherwise index 0.  If [end] is present, the [end] - [start] bytes will be\nread into [buffer], otherwise up to [buffer.length]. If [end] == [start]\nnothing happends.\n\nThrows a [FileSystemException] if the operation fails.\n","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"param","name":"buffer","id":"buffer"},{"ref":{"name":"int","refId":"dart.core/int"},"isOptional":true,"kind":"param","name":"start","id":"start"},{"ref":{"name":"int","refId":"dart.core/int"},"isOptional":true,"kind":"param","name":"end","id":"end"}],"line":"429"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"RandomAccessFile","refId":"dart.io/RandomAccessFile"}]},"kind":"method","name":"writeByte","id":"writeByte1()","comment":"\nWrites a single byte to the file. Returns a\n[:Future<RandomAccessFile>:] that completes with this\nRandomAccessFile when the write completes.\n","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"value","id":"value"}],"line":"436"},{"returnType":{"name":"int","refId":"dart.core/int"},"kind":"method","name":"writeByteSync","id":"writeByteSync1()","comment":"\nSynchronously writes a single byte to the file. Returns the\nnumber of bytes successfully written.\n\nThrows a [FileSystemException] if the operation fails.\n","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"value","id":"value"}],"line":"444"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"RandomAccessFile","refId":"dart.io/RandomAccessFile"}]},"kind":"method","name":"writeFrom","id":"writeFrom3()","comment":"\nWrites from a [List<int>] to the file. It will read the buffer from index\n[start] to index [end]. If [start] is omitted, it'll start from index 0.\nIf [end] is omitted, it will write to end of [buffer].\n\nReturns a [:Future<RandomAccessFile>:] that completes with this\n[RandomAccessFile] when the write completes.\n","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"param","name":"buffer","id":"buffer"},{"ref":{"name":"int","refId":"dart.core/int"},"isOptional":true,"kind":"param","name":"start","id":"start"},{"ref":{"name":"int","refId":"dart.core/int"},"isOptional":true,"kind":"param","name":"end","id":"end"}],"line":"454"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"writeFromSync","id":"writeFromSync3()","comment":"\nSynchronously writes from a [List<int>] to the file. It will read the\nbuffer from index [start] to index [end]. If [start] is omitted, it'll\nstart from index 0. If [end] is omitted, it will write to the end of\n[buffer].\n\nThrows a [FileSystemException] if the operation fails.\n","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"param","name":"buffer","id":"buffer"},{"ref":{"name":"int","refId":"dart.core/int"},"isOptional":true,"kind":"param","name":"start","id":"start"},{"ref":{"name":"int","refId":"dart.core/int"},"isOptional":true,"kind":"param","name":"end","id":"end"}],"line":"464"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"RandomAccessFile","refId":"dart.io/RandomAccessFile"}]},"kind":"method","name":"writeString","id":"writeString2()","comment":"\nWrites a string to the file using the given [Encoding]. Returns a\n[:Future<RandomAccessFile>:] that completes with this\nRandomAccessFile when the write completes.\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"string","id":"string"},{"ref":{"name":"Encoding","refId":"dart.convert/Encoding"},"defaultValue":"UTF8","isOptional":true,"isNamed":true,"kind":"param","name":"encoding","id":"encoding","line":"472"}],"line":"471"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"writeStringSync","id":"writeStringSync2()","comment":"\nSynchronously writes a single string to the file using the given\n[Encoding].\n\nThrows a [FileSystemException] if the operation fails.\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"string","id":"string"},{"ref":{"name":"Encoding","refId":"dart.convert/Encoding"},"defaultValue":"UTF8","isOptional":true,"isNamed":true,"kind":"param","name":"encoding","id":"encoding","line":"481"}],"line":"480"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"method","name":"position","id":"position0()","comment":"\nGets the current byte position in the file. Returns a\n[:Future<int>:] that completes with the position.\n","line":"487"},{"returnType":{"name":"int","refId":"dart.core/int"},"kind":"method","name":"positionSync","id":"positionSync0()","comment":"\nSynchronously gets the current byte position in the file.\n\nThrows a [FileSystemException] if the operation fails.\n","line":"494"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"RandomAccessFile","refId":"dart.io/RandomAccessFile"}]},"kind":"method","name":"setPosition","id":"setPosition1()","comment":"\nSets the byte position in the file. Returns a\n[:Future<RandomAccessFile>:] that completes with this\nRandomAccessFile when the position has been set.\n","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"position","id":"position"}],"line":"501"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"setPositionSync","id":"setPositionSync1()","comment":"\nSynchronously sets the byte position in the file.\n\nThrows a [FileSystemException] if the operation fails.\n","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"position","id":"position"}],"line":"508"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"RandomAccessFile","refId":"dart.io/RandomAccessFile"}]},"kind":"method","name":"truncate","id":"truncate1()","comment":"\nTruncates (or extends) the file to [length] bytes. Returns a\n[:Future<RandomAccessFile>:] that completes with this\nRandomAccessFile when the truncation has been performed.\n","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"length","id":"length"}],"line":"515"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"truncateSync","id":"truncateSync1()","comment":"\nSynchronously truncates (or extends) the file to [length] bytes.\n\nThrows a [FileSystemException] if the operation fails.\n","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"length","id":"length"}],"line":"522"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"method","name":"length","id":"length0()","comment":"\nGets the length of the file. Returns a [:Future<int>:] that\ncompletes with the length in bytes.\n","line":"528"},{"returnType":{"name":"int","refId":"dart.core/int"},"kind":"method","name":"lengthSync","id":"lengthSync0()","comment":"\nSynchronously gets the length of the file.\n\nThrows a [FileSystemException] if the operation fails.\n","line":"535"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"RandomAccessFile","refId":"dart.io/RandomAccessFile"}]},"kind":"method","name":"flush","id":"flush0()","comment":"\nFlushes the contents of the file to disk. Returns a\n[:Future<RandomAccessFile>:] that completes with this\nRandomAccessFile when the flush operation completes.\n","line":"542"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"flushSync","id":"flushSync0()","comment":"\nSynchronously flushes the contents of the file to disk.\n\nThrows a [FileSystemException] if the operation fails.\n","line":"549"},{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"method","name":"toString","id":"toString0()","comment":"\nReturns a human-readable string for this RandomAccessFile instance.\n","line":"554"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"property","name":"path","id":"path","comment":"\nGets the path of the file underlying this RandomAccessFile.\n","line":"559"}],"uri":"dart-sdk/lib/io/file.dart","line":"368"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"interfaces":[{"name":"FileSystemEntity","refId":"dart.io/FileSystemEntity"}],"kind":"class","name":"File","id":"File","comment":"\nA reference to a file on the file system.\n\nIf [path] is a symbolic link, rather than a file, then\nthe methods of [File] operate on the ultimate target of the\nlink, except for File.delete and File.deleteSync, which operate on\nthe link.\n\nTo operate on the underlying file data there are two options:\n\n * Use streaming: read the contents of the file from the [Stream]\n   this.[openRead]() and write to the file by writing to the [IOSink]\n   this.[openWrite]().\n * Open the file for random access operations using [open].\n","children":[{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"File","refId":"dart.io/File"}]},"kind":"method","name":"create","id":"create1()","comment":"\nCreate the file. Returns a [:Future<File>:] that completes with\nthe file when it has been created.\n\nIf [recursive] is false, the default, the file is created only if\nall directories in the path exist. If [recursive] is true, all\nnon-existing path components are created.\n\nExisting files are left untouched by [create]. Calling [create] on an\nexisting file might fail if there are restrictive permissions on\nthe file.\n\nCompletes the future with a [FileSystemException] if the operation fails.\n","children":[{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"false","isOptional":true,"isNamed":true,"kind":"param","name":"recursive","id":"recursive"}],"line":"74"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"createSync","id":"createSync1()","comment":"\nSynchronously create the file. Existing files are left untouched\nby [createSync]. Calling [createSync] on an existing file might fail\nif there are restrictive permissions on the file.\n\nIf [recursive] is false, the default, the file is created\nonly if all directories in the path exist.\nIf [recursive] is true, all non-existing path components are created.\n\nThrows a [FileSystemException] if the operation fails.\n","children":[{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"false","isOptional":true,"isNamed":true,"kind":"param","name":"recursive","id":"recursive"}],"line":"87"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"File","refId":"dart.io/File"}]},"kind":"method","name":"rename","id":"rename1()","comment":"\nRenames this file. Returns a `Future<File>` that completes\nwith a [File] instance for the renamed file.\n\nIf [newPath] identifies an existing file, that file is\nreplaced. If [newPath] identifies an existing directory, the\noperation fails and the future completes with an exception.\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"newPath","id":"newPath"}],"line":"97"},{"returnType":{"name":"File","refId":"dart.io/File"},"kind":"method","name":"renameSync","id":"renameSync1()","comment":"\nSynchronously renames this file. Returns a [File]\ninstance for the renamed file.\n\nIf [newPath] identifies an existing file, that file is\nreplaced. If [newPath] identifies an existing directory the\noperation fails and an exception is thrown.\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"newPath","id":"newPath"}],"line":"107"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"File","refId":"dart.io/File"}]},"kind":"method","name":"copy","id":"copy1()","comment":"\nCopy this file. Returns a `Future<File>` that completes\nwith a [File] instance for the copied file.\n\nIf [newPath] identifies an existing file, that file is\nreplaced. If [newPath] identifies an existing directory, the\noperation fails and the future completes with an exception.\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"newPath","id":"newPath"}],"line":"117"},{"returnType":{"name":"File","refId":"dart.io/File"},"kind":"method","name":"copySync","id":"copySync1()","comment":"\nSynchronously copy this file. Returns a [File]\ninstance for the copied file.\n\nIf [newPath] identifies an existing file, that file is\nreplaced. If [newPath] identifies an existing directory the\noperation fails and an exception is thrown.\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"newPath","id":"newPath"}],"line":"127"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"method","name":"length","id":"length0()","comment":"\nGet the length of the file. Returns a [:Future<int>:] that\ncompletes with the length in bytes.\n","line":"133"},{"returnType":{"name":"int","refId":"dart.core/int"},"kind":"method","name":"lengthSync","id":"lengthSync0()","comment":"\nSynchronously get the length of the file.\n\nThrows a [FileSystemException] if the operation fails.\n","line":"140"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"DateTime","refId":"dart.core/DateTime"}]},"kind":"method","name":"lastModified","id":"lastModified0()","comment":"\nGet the last-modified time of the file. Returns a\n[:Future<DateTime>:] that completes with a [DateTime] object for the\nmodification date.\n","line":"156"},{"returnType":{"name":"DateTime","refId":"dart.core/DateTime"},"kind":"method","name":"lastModifiedSync","id":"lastModifiedSync0()","comment":"\nGet the last-modified time of the file. Throws an exception\nif the file does not exist.\n\nThrows a [FileSystemException] if the operation fails.\n","line":"164"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"RandomAccessFile","refId":"dart.io/RandomAccessFile"}]},"kind":"method","name":"open","id":"open1()","comment":"\nOpen the file for random access operations. Returns a\n[:Future<RandomAccessFile>:] that completes with the opened\nrandom access file. [RandomAccessFile]s must be closed using the\n[RandomAccessFile.close] method.\n\nFiles can be opened in three modes:\n\n[FileMode.READ]: open the file for reading.\n\n[FileMode.WRITE]: open the file for both reading and writing and\ntruncate the file to length zero. If the file does not exist the\nfile is created.\n\n[FileMode.APPEND]: same as [FileMode.WRITE] except that the file is\nnot truncated.\n","children":[{"ref":{"name":"FileMode","refId":"dart.io/FileMode"},"defaultValue":"FileMode.READ","isOptional":true,"isNamed":true,"kind":"param","name":"mode","id":"mode"}],"line":"183"},{"returnType":{"name":"RandomAccessFile","refId":"dart.io/RandomAccessFile"},"kind":"method","name":"openSync","id":"openSync1()","comment":"\nSynchronously open the file for random access operations. The\nresult is a [RandomAccessFile] on which random access operations\ncan be performed. Opened [RandomAccessFile]s must be closed using\nthe [RandomAccessFile.close] method.\n\nSee [open] for information on the [mode] argument.\n\nThrows a [FileSystemException] if the operation fails.\n","children":[{"ref":{"name":"FileMode","refId":"dart.io/FileMode"},"defaultValue":"FileMode.READ","isOptional":true,"isNamed":true,"kind":"param","name":"mode","id":"mode"}],"line":"195"},{"returnType":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]}]},"kind":"method","name":"openRead","id":"openRead2()","comment":"\nCreate a new independent [Stream] for the contents of this file.\n\nIf [start] is present, the file will be read from byte-offset [start].\nOtherwise from the beginning (index 0).\n\nIf [end] is present, only up to byte-index [end] will be read. Otherwise,\nuntil end of file.\n\nIn order to make sure that system resources are freed, the stream\nmust be read to completion or the subscription on the stream must\nbe cancelled.\n","children":[{"ref":{"name":"int","refId":"dart.core/int"},"isOptional":true,"kind":"param","name":"start","id":"start"},{"ref":{"name":"int","refId":"dart.core/int"},"isOptional":true,"kind":"param","name":"end","id":"end"}],"line":"210"},{"returnType":{"name":"IOSink","refId":"dart.io/IOSink"},"kind":"method","name":"openWrite","id":"openWrite2()","comment":"\nCreates a new independent [IOSink] for the file. The\n[IOSink] must be closed when no longer used, to free\nsystem resources.\n\nAn [IOSink] for a file can be opened in two modes:\n\n* [FileMode.WRITE]: truncates the file to length zero.\n* [FileMode.APPEND]: sets the initial write position to the end\n  of the file.\n\n When writing strings through the returned [IOSink] the encoding\n specified using [encoding] will be used. The returned [IOSink]\n has an [:encoding:] property which can be changed after the\n [IOSink] has been created.\n","children":[{"ref":{"name":"FileMode","refId":"dart.io/FileMode"},"defaultValue":"FileMode.WRITE","isOptional":true,"isNamed":true,"kind":"param","name":"mode","id":"mode"},{"ref":{"name":"Encoding","refId":"dart.convert/Encoding"},"defaultValue":"UTF8","isOptional":true,"isNamed":true,"kind":"param","name":"encoding","id":"encoding","line":"229"}],"line":"228"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]}]},"kind":"method","name":"readAsBytes","id":"readAsBytes0()","comment":"\nRead the entire file contents as a list of bytes. Returns a\n[:Future<List<int>>:] that completes with the list of bytes that\nis the contents of the file.\n","line":"236"},{"returnType":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"method","name":"readAsBytesSync","id":"readAsBytesSync0()","comment":"\nSynchronously read the entire file contents as a list of bytes.\n\nThrows a [FileSystemException] if the operation fails.\n","line":"243"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"String","refId":"dart.core/String"}]},"kind":"method","name":"readAsString","id":"readAsString1()","comment":"\nRead the entire file contents as a string using the given\n[Encoding].\n\nReturns a [:Future<String>:] that completes with the string once\nthe file contents has been read.\n","children":[{"ref":{"name":"Encoding","refId":"dart.convert/Encoding"},"defaultValue":"UTF8","isOptional":true,"isNamed":true,"kind":"param","name":"encoding","id":"encoding"}],"line":"252"},{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"method","name":"readAsStringSync","id":"readAsStringSync1()","comment":"\nSynchronously read the entire file contents as a string using the\ngiven [Encoding].\n\nThrows a [FileSystemException] if the operation fails.\n","children":[{"ref":{"name":"Encoding","refId":"dart.convert/Encoding"},"defaultValue":"UTF8","isOptional":true,"isNamed":true,"kind":"param","name":"encoding","id":"encoding"}],"line":"260"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"List","refId":"dart.core/List","arguments":[{"name":"String","refId":"dart.core/String"}]}]},"kind":"method","name":"readAsLines","id":"readAsLines1()","comment":"\nRead the entire file contents as lines of text using the given\n[Encoding].\n\nReturns a [:Future<List<String>>:] that completes with the lines\nonce the file contents has been read.\n","children":[{"ref":{"name":"Encoding","refId":"dart.convert/Encoding"},"defaultValue":"UTF8","isOptional":true,"isNamed":true,"kind":"param","name":"encoding","id":"encoding"}],"line":"269"},{"returnType":{"name":"List","refId":"dart.core/List","arguments":[{"name":"String","refId":"dart.core/String"}]},"kind":"method","name":"readAsLinesSync","id":"readAsLinesSync1()","comment":"\nSynchronously read the entire file contents as lines of text\nusing the given [Encoding].\n\nThrows a [FileSystemException] if the operation fails.\n","children":[{"ref":{"name":"Encoding","refId":"dart.convert/Encoding"},"defaultValue":"UTF8","isOptional":true,"isNamed":true,"kind":"param","name":"encoding","id":"encoding"}],"line":"277"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"File","refId":"dart.io/File"}]},"kind":"method","name":"writeAsBytes","id":"writeAsBytes3()","comment":"\nWrite a list of bytes to a file.\n\nOpens the file, writes the list of bytes to it, and closes the file.\nReturns a [:Future<File>:] that completes with this [File] object once\nthe entire operation has completed.\n\nBy default [writeAsBytes] creates the file for writing and truncates the\nfile if it already exists. In order to append the bytes to an existing\nfile, pass [FileMode.APPEND] as the optional mode parameter.\n\nIf the argument [flush] is set to `true`, the data written will be\nflushed to the file system before the returned future completes.\n","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"param","name":"bytes","id":"bytes"},{"ref":{"name":"FileMode","refId":"dart.io/FileMode"},"defaultValue":"FileMode.WRITE","isOptional":true,"isNamed":true,"kind":"param","name":"mode","id":"mode","line":"294"},{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"false","isOptional":true,"isNamed":true,"kind":"param","name":"flush","id":"flush","line":"295"}],"line":"293"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"writeAsBytesSync","id":"writeAsBytesSync3()","comment":"\nSynchronously write a list of bytes to a file.\n\nOpens the file, writes the list of bytes to it and closes the file.\n\nBy default [writeAsBytesSync] creates the file for writing and truncates\nthe file if it already exists. In order to append the bytes to an existing\nfile, pass [FileMode.APPEND] as the optional mode parameter.\n\nIf the [flush] argument is set to `true` data written will be\nflushed to the file system before returning.\n\nThrows a [FileSystemException] if the operation fails.\n","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"param","name":"bytes","id":"bytes"},{"ref":{"name":"FileMode","refId":"dart.io/FileMode"},"defaultValue":"FileMode.WRITE","isOptional":true,"isNamed":true,"kind":"param","name":"mode","id":"mode","line":"312"},{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"false","isOptional":true,"isNamed":true,"kind":"param","name":"flush","id":"flush","line":"313"}],"line":"311"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"File","refId":"dart.io/File"}]},"kind":"method","name":"writeAsString","id":"writeAsString4()","comment":"\nWrite a string to a file.\n\nOpens the file, writes the string in the given encoding, and closes the\nfile. Returns a [:Future<File>:] that completes with this [File] object\nonce the entire operation has completed.\n\nBy default [writeAsString] creates the file for writing and truncates the\nfile if it already exists. In order to append the bytes to an existing\nfile, pass [FileMode.APPEND] as the optional mode parameter.\n\nIf the argument [flush] is set to `true`, the data written will be\nflushed to the file system before the returned future completes.\n\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"contents","id":"contents"},{"ref":{"name":"FileMode","refId":"dart.io/FileMode"},"defaultValue":"FileMode.WRITE","isOptional":true,"isNamed":true,"kind":"param","name":"mode","id":"mode","line":"331"},{"ref":{"name":"Encoding","refId":"dart.convert/Encoding"},"defaultValue":"UTF8","isOptional":true,"isNamed":true,"kind":"param","name":"encoding","id":"encoding","line":"332"},{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"false","isOptional":true,"isNamed":true,"kind":"param","name":"flush","id":"flush","line":"333"}],"line":"330"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"writeAsStringSync","id":"writeAsStringSync4()","comment":"\nSynchronously write a string to a file.\n\nOpens the file, writes the string in the given encoding, and closes the\nfile.\n\nBy default [writeAsStringSync] creates the file for writing and\ntruncates the file if it already exists. In order to append the bytes\nto an existing file, pass [FileMode.APPEND] as the optional mode\nparameter.\n\nIf the [flush] argument is set to `true` data written will be\nflushed to the file system before returning.\n\nThrows a [FileSystemException] if the operation fails.\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"contents","id":"contents"},{"ref":{"name":"FileMode","refId":"dart.io/FileMode"},"defaultValue":"FileMode.WRITE","isOptional":true,"isNamed":true,"kind":"param","name":"mode","id":"mode","line":"352"},{"ref":{"name":"Encoding","refId":"dart.convert/Encoding"},"defaultValue":"UTF8","isOptional":true,"isNamed":true,"kind":"param","name":"encoding","id":"encoding","line":"353"},{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"false","isOptional":true,"isNamed":true,"kind":"param","name":"flush","id":"flush","line":"354"}],"line":"351"},{"ref":{"name":"File","refId":"dart.io/File"},"kind":"property","name":"absolute","id":"absolute","comment":"\nReturns a [File] instance whose path is the absolute path to [this].\n\nThe absolute path is computed by prefixing\na relative path with the current working directory, and returning\nan absolute path unchanged.\n","line":"149"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"property","name":"path","id":"path","comment":"\nGet the path of the file.\n","line":"359"},{"returnType":{"name":"File","refId":"dart.io/File"},"kind":"constructor","name":"","id":"1()","comment":"\nCreate a File object.\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"path","id":"path"}],"line":"51"},{"returnType":{"name":"File","refId":"dart.io/File"},"kind":"constructor","name":"fromUri","id":"fromUri1()","comment":"\nCreate a File object from a URI.\n\nIf [uri] cannot reference a file this throws [UnsupportedError].\n","children":[{"ref":{"name":"Uri","refId":"dart.core/Uri"},"kind":"param","name":"uri","id":"uri"}],"line":"58"}],"uri":"dart-sdk/lib/io/file.dart","line":"47"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"kind":"class","name":"FileMode","id":"FileMode","comment":"\nFileMode describes the modes in which a file can be opened.\n","children":[{"isStatic":true,"kind":"variable","name":"READ","id":"READ","comment":"The [FileMode] for opening a file only for reading.","line":"12"},{"isStatic":true,"kind":"variable","name":"WRITE","id":"WRITE","comment":"The [FileMode] for opening a file for reading and writing. The file will\nbe overwritten. If the file does not exist, it will be created.","line":"15"},{"isStatic":true,"kind":"variable","name":"APPEND","id":"APPEND","comment":"The [FileMode] for opening a file for reading a file and writing to the\nend of it. If the file does not exist, it will be created.","line":"18"},{"ref":{"name":"int","refId":"dart.core/int"},"isFinal":true,"kind":"variable","name":"_mode","id":"_mode","isPrivate":true,"line":"20"},{"kind":"constructor","name":"_internal","id":"_internal1()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"initializedField":{"name":"_mode","refId":"dart.io/FileMode/_mode"},"kind":"param","name":"_mode","id":"_mode","isPrivate":true}],"isPrivate":true,"line":"19"}],"uri":"dart-sdk/lib/io/file.dart","line":"10"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"kind":"class","name":"_EventHandler","id":"_EventHandler","children":[{"returnType":{"name":"void","refId":"void"},"isStatic":true,"kind":"method","name":"_sendData","id":"_sendData3()","children":[{"ref":{"name":"Object","refId":"dart.core/Object"},"kind":"param","name":"sender","id":"sender"},{"ref":{"name":"RawReceivePort","refId":"dart.isolate/RawReceivePort"},"kind":"param","name":"receivePort","id":"receivePort","line":"9"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"data","id":"data","line":"10"}],"isPrivate":true,"line":"8"}],"isPrivate":true,"uri":"dart-sdk/lib/io/eventhandler.dart","line":"7"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"kind":"class","name":"_AsyncDirectoryLister","id":"_AsyncDirectoryLister","children":[{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"onListen","id":"onListen0()","line":"286"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"onResume","id":"onResume0()","line":"299"},{"returnType":{"name":"Future","refId":"dart.async/Future"},"kind":"method","name":"onCancel","id":"onCancel0()","line":"303"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"next","id":"next0()","line":"313"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"close","id":"close0()","line":"353"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"error","id":"error1()","children":[{"kind":"param","name":"message","id":"message"}],"line":"368"},{"ref":{"name":"Stream","refId":"dart.async/Stream"},"kind":"property","name":"stream","id":"stream","line":"284"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"LIST_FILE","id":"LIST_FILE","line":"253"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"LIST_DIRECTORY","id":"LIST_DIRECTORY","line":"254"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"LIST_LINK","id":"LIST_LINK","line":"255"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"LIST_ERROR","id":"LIST_ERROR","line":"256"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"LIST_DONE","id":"LIST_DONE","line":"257"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"RESPONSE_TYPE","id":"RESPONSE_TYPE","line":"259"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"RESPONSE_PATH","id":"RESPONSE_PATH","line":"260"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"RESPONSE_COMPLETE","id":"RESPONSE_COMPLETE","line":"261"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"RESPONSE_ERROR","id":"RESPONSE_ERROR","line":"262"},{"ref":{"name":"String","refId":"dart.core/String"},"isFinal":true,"kind":"variable","name":"path","id":"path","line":"264"},{"ref":{"name":"bool","refId":"dart.core/bool"},"isFinal":true,"kind":"variable","name":"recursive","id":"recursive","line":"265"},{"ref":{"name":"bool","refId":"dart.core/bool"},"isFinal":true,"kind":"variable","name":"followLinks","id":"followLinks","line":"266"},{"ref":{"name":"StreamController","refId":"dart.async/StreamController"},"kind":"variable","name":"controller","id":"controller","line":"268"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"id","id":"id","line":"269"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"variable","name":"canceled","id":"canceled","line":"270"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"variable","name":"nextRunning","id":"nextRunning","line":"271"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"variable","name":"closed","id":"closed","line":"272"},{"ref":{"name":"Completer","refId":"dart.async/Completer"},"kind":"variable","name":"closeCompleter","id":"closeCompleter","line":"273"},{"kind":"constructor","name":"","id":"3()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"initializedField":{"name":"path","refId":"dart.io/_AsyncDirectoryLister/path"},"kind":"param","name":"path","id":"path"},{"ref":{"name":"bool","refId":"dart.core/bool"},"initializedField":{"name":"recursive","refId":"dart.io/_AsyncDirectoryLister/recursive"},"kind":"param","name":"recursive","id":"recursive","line":"276"},{"ref":{"name":"bool","refId":"dart.core/bool"},"initializedField":{"name":"followLinks","refId":"dart.io/_AsyncDirectoryLister/followLinks"},"kind":"param","name":"followLinks","id":"followLinks","line":"277"}],"line":"275"}],"isPrivate":true,"uri":"dart-sdk/lib/io/directory_impl.dart","line":"252"},{"superclass":{"name":"FileSystemEntity","refId":"dart.io/FileSystemEntity"},"interfaces":[{"name":"Directory","refId":"dart.io/Directory"}],"kind":"class","name":"_Directory","id":"_Directory","children":[{"isStatic":true,"kind":"method","name":"_current","id":"_current0()","isPrivate":true,"line":"17"},{"isStatic":true,"kind":"method","name":"_setCurrent","id":"_setCurrent1()","children":[{"kind":"param","name":"path","id":"path"}],"isPrivate":true,"line":"18"},{"isStatic":true,"kind":"method","name":"_createTemp","id":"_createTemp1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"path","id":"path"}],"isPrivate":true,"line":"19"},{"returnType":{"name":"String","refId":"dart.core/String"},"isStatic":true,"kind":"method","name":"_systemTemp","id":"_systemTemp0()","isPrivate":true,"line":"20"},{"returnType":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"method","name":"_exists","id":"_exists1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"path","id":"path"}],"isPrivate":true,"line":"21"},{"isStatic":true,"kind":"method","name":"_create","id":"_create1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"path","id":"path"}],"isPrivate":true,"line":"22"},{"isStatic":true,"kind":"method","name":"_deleteNative","id":"_deleteNative2()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"path","id":"path"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"param","name":"recursive","id":"recursive"}],"isPrivate":true,"line":"23"},{"isStatic":true,"kind":"method","name":"_rename","id":"_rename2()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"path","id":"path"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"newPath","id":"newPath"}],"isPrivate":true,"line":"24"},{"returnType":{"name":"List","refId":"dart.core/List"},"isStatic":true,"kind":"method","name":"_list","id":"_list3()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"path","id":"path"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"param","name":"recursive","id":"recursive"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"param","name":"followLinks","id":"followLinks"}],"isPrivate":true,"line":"25"},{"returnType":{"name":"void","refId":"void"},"isSetter":true,"isStatic":true,"kind":"method","name":"current=","id":"current=1()","children":[{"kind":"param","name":"path","id":"path"}],"line":"36"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"bool","refId":"dart.core/bool"}]},"kind":"method","name":"exists","id":"exists0()","line":"46"},{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"method","name":"existsSync","id":"existsSync0()","line":"55"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"FileStat","refId":"dart.io/FileStat"}]},"kind":"method","name":"stat","id":"stat0()","line":"65"},{"returnType":{"name":"FileStat","refId":"dart.io/FileStat"},"kind":"method","name":"statSync","id":"statSync0()","line":"67"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"method","name":"_computeExistingIndex","id":"_computeExistingIndex1()","children":[{"ref":{"name":"List","refId":"dart.core/List"},"kind":"param","name":"dirsToCreate","id":"dirsToCreate"}],"isPrivate":true,"line":"71"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"Directory","refId":"dart.io/Directory"}]},"kind":"method","name":"create","id":"create1()","children":[{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"false","isOptional":true,"isNamed":true,"kind":"param","name":"recursive","id":"recursive"}],"line":"93"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"createSync","id":"createSync1()","children":[{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"false","isOptional":true,"isNamed":true,"kind":"param","name":"recursive","id":"recursive"}],"line":"115"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"Directory","refId":"dart.io/Directory"}]},"kind":"method","name":"createTemp","id":"createTemp1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"isOptional":true,"kind":"param","name":"prefix","id":"prefix"}],"line":"130"},{"returnType":{"name":"Directory","refId":"dart.io/Directory"},"kind":"method","name":"createTempSync","id":"createTempSync1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"isOptional":true,"kind":"param","name":"prefix","id":"prefix"}],"line":"153"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"Directory","refId":"dart.io/Directory"}]},"kind":"method","name":"_delete","id":"_delete1()","children":[{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"false","isOptional":true,"isNamed":true,"kind":"param","name":"recursive","id":"recursive"}],"isPrivate":true,"line":"175"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_deleteSync","id":"_deleteSync1()","children":[{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"false","isOptional":true,"isNamed":true,"kind":"param","name":"recursive","id":"recursive"}],"isPrivate":true,"line":"185"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"Directory","refId":"dart.io/Directory"}]},"kind":"method","name":"rename","id":"rename1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"newPath","id":"newPath"}],"line":"192"},{"returnType":{"name":"Directory","refId":"dart.io/Directory"},"kind":"method","name":"renameSync","id":"renameSync1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"newPath","id":"newPath"}],"line":"202"},{"returnType":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"FileSystemEntity","refId":"dart.io/FileSystemEntity"}]},"kind":"method","name":"list","id":"list2()","children":[{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"false","isOptional":true,"isNamed":true,"kind":"param","name":"recursive","id":"recursive"},{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"true","isOptional":true,"isNamed":true,"kind":"param","name":"followLinks","id":"followLinks","line":"214"}],"line":"213"},{"returnType":{"name":"List","refId":"dart.core/List"},"kind":"method","name":"listSync","id":"listSync2()","children":[{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"false","isOptional":true,"isNamed":true,"kind":"param","name":"recursive","id":"recursive"},{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"true","isOptional":true,"isNamed":true,"kind":"param","name":"followLinks","id":"followLinks"}],"line":"221"},{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"method","name":"toString","id":"toString0()","line":"231"},{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"method","name":"_isErrorResponse","id":"_isErrorResponse1()","children":[{"kind":"param","name":"response","id":"response"}],"isPrivate":true,"line":"233"},{"kind":"method","name":"_exceptionOrErrorFromResponse","id":"_exceptionOrErrorFromResponse2()","children":[{"kind":"param","name":"response","id":"response"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"message","id":"message"}],"isPrivate":true,"line":"237"},{"ref":{"name":"Directory","refId":"dart.io/Directory"},"isStatic":true,"kind":"property","name":"current","id":"current","line":"27"},{"ref":{"name":"Directory","refId":"dart.io/Directory"},"kind":"property","name":"absolute","id":"absolute","line":"63"},{"ref":{"name":"Directory","refId":"dart.io/Directory"},"isStatic":true,"kind":"property","name":"systemTemp","id":"systemTemp","line":"128"},{"ref":{"name":"String","refId":"dart.core/String"},"isFinal":true,"kind":"variable","name":"path","id":"path","line":"8"},{"kind":"constructor","name":"","id":"1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"initializedField":{"name":"path","refId":"dart.io/_Directory/path"},"kind":"param","name":"path","id":"path"}],"line":"10"}],"isPrivate":true,"uri":"dart-sdk/lib/io/directory_impl.dart","line":"7"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"interfaces":[{"name":"FileSystemEntity","refId":"dart.io/FileSystemEntity"}],"kind":"class","name":"Directory","id":"Directory","comment":"\nA reference to a directory (or _folder_) on the file system.\n","children":[{"returnType":{"name":"void","refId":"void"},"isSetter":true,"isStatic":true,"kind":"method","name":"current=","id":"current=1()","comment":"\nSets the current working directory of the Dart process including\nall running isolates. The new value set can be either a [Directory]\nor a [String].\n\nThe new value is passed to the OS's system call unchanged, so a\nrelative path passed as the new working directory will be\nresolved by the OS.\n\nNote that setting the current working directory is a synchronous\noperation and that it changes the the working directory of *all*\nisolates.\n\nUse this with care - especially when working with asynchronous\noperations and multiple isolates. Changing the working directory,\nwhile asynchronous operations are pending or when other isolates\nare working with the file system, can lead to unexpected results.\n","children":[{"kind":"param","name":"path","id":"path"}],"line":"49"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"Directory","refId":"dart.io/Directory"}]},"kind":"method","name":"create","id":"create1()","comment":"\nCreates the directory with this name.\n\nIf [recursive] is false, only the last directory in the path is\ncreated. If [recursive] is true, all non-existing path components\nare created. If the directory already exists nothing is done.\n\nReturns a [:Future<Directory>:] that completes with this\ndirectory once it has been created. If the directory cannot be\ncreated the future completes with an exception.\n","children":[{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"false","isOptional":true,"isNamed":true,"kind":"param","name":"recursive","id":"recursive"}],"line":"64"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"createSync","id":"createSync1()","comment":"\nSynchronously creates the directory with this name.\n\nIf [recursive] is false, only the last directory in the path is\ncreated. If [recursive] is true, all non-existing path components\nare created. If the directory already exists nothing is done.\n\nIf the directory cannot be created an exception is thrown.\n","children":[{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"false","isOptional":true,"isNamed":true,"kind":"param","name":"recursive","id":"recursive"}],"line":"75"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"Directory","refId":"dart.io/Directory"}]},"kind":"method","name":"createTemp","id":"createTemp1()","comment":"\nCreates a temporary directory in this directory. Additional random\ncharacters are appended to [prefix] to produce a unique directory\nname. If [prefix] is missing or null, the empty string is used\nfor [prefix].\n\nReturns a [:Future<Directory>:] that completes with the newly\ncreated temporary directory.\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"isOptional":true,"kind":"param","name":"prefix","id":"prefix"}],"line":"96"},{"returnType":{"name":"Directory","refId":"dart.io/Directory"},"kind":"method","name":"createTempSync","id":"createTempSync1()","comment":"\nSynchronously creates a temporary directory in this directory.\nAdditional random characters are appended to [prefix] to produce\na unique directory name. If [prefix] is missing or null, the empty\nstring is used for [prefix].\n\nReturns the newly created temporary directory.\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"isOptional":true,"kind":"param","name":"prefix","id":"prefix"}],"line":"106"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"String","refId":"dart.core/String"}]},"kind":"method","name":"resolveSymbolicLinks","id":"resolveSymbolicLinks0()","line":"108"},{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"method","name":"resolveSymbolicLinksSync","id":"resolveSymbolicLinksSync0()","line":"110"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"Directory","refId":"dart.io/Directory"}]},"kind":"method","name":"rename","id":"rename1()","comment":"\nRenames this directory. Returns a [:Future<Directory>:] that completes\nwith a [Directory] instance for the renamed directory.\n\nIf newPath identifies an existing directory, that directory is\nreplaced. If newPath identifies an existing file, the operation\nfails and the future completes with an exception.\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"newPath","id":"newPath"}],"line":"120"},{"returnType":{"name":"Directory","refId":"dart.io/Directory"},"kind":"method","name":"renameSync","id":"renameSync1()","comment":"\nSynchronously renames this directory. Returns a [Directory]\ninstance for the renamed directory.\n\nIf newPath identifies an existing directory, that directory is\nreplaced. If newPath identifies an existing file the operation\nfails and an exception is thrown.\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"newPath","id":"newPath"}],"line":"130"},{"returnType":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"FileSystemEntity","refId":"dart.io/FileSystemEntity"}]},"kind":"method","name":"list","id":"list2()","comment":"\nLists the sub-directories and files of this [Directory].\nOptionally recurses into sub-directories.\n\nIf [followLinks] is false, then any symbolic links found\nare reported as [Link] objects, rather than as directories or files,\nand are not recursed into.\n\nIf [followLinks] is true, then working links are reported as\ndirectories or files, depending on\ntheir type, and links to directories are recursed into.\nBroken links are reported as [Link] objects.\nIf a symbolic link makes a loop in the file system, then a recursive\nlisting will not follow a link twice in the\nsame recursive descent, but will report it as a [Link]\nthe second time it is seen.\n\nThe result is a stream of [FileSystemEntity] objects\nfor the directories, files, and links.\n","children":[{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"false","isOptional":true,"isNamed":true,"kind":"param","name":"recursive","id":"recursive"},{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"true","isOptional":true,"isNamed":true,"kind":"param","name":"followLinks","id":"followLinks","line":"162"}],"line":"161"},{"returnType":{"name":"List","refId":"dart.core/List","arguments":[{"name":"FileSystemEntity","refId":"dart.io/FileSystemEntity"}]},"kind":"method","name":"listSync","id":"listSync2()","comment":"\nLists the sub-directories and files of this [Directory].\nOptionally recurses into sub-directories.\n\nIf [followLinks] is false, then any symbolic links found\nare reported as [Link] objects, rather than as directories or files,\nand are not recursed into.\n\nIf [followLinks] is true, then working links are reported as\ndirectories or files, depending on\ntheir type, and links to directories are recursed into.\nBroken links are reported as [Link] objects.\nIf a link makes a loop in the file system, then a recursive\nlisting will not follow a link twice in the\nsame recursive descent, but will report it as a [Link]\nthe second time it is seen.\n\nReturns a [List] containing [FileSystemEntity] objects for the\ndirectories, files, and links.\n","children":[{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"false","isOptional":true,"isNamed":true,"kind":"param","name":"recursive","id":"recursive"},{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"true","isOptional":true,"isNamed":true,"kind":"param","name":"followLinks","id":"followLinks","line":"185"}],"line":"184"},{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"method","name":"toString","id":"toString0()","comment":"\nReturns a human readable string for this Directory instance.\n","line":"190"},{"ref":{"name":"Directory","refId":"dart.io/Directory"},"isStatic":true,"kind":"property","name":"current","id":"current","comment":"\nCreates a directory object pointing to the current working\ndirectory.\n","line":"29"},{"ref":{"name":"Directory","refId":"dart.io/Directory"},"isStatic":true,"kind":"property","name":"systemTemp","id":"systemTemp","comment":"\nGets the system temp directory.\n\nGets the directory provided by the operating system for creating\ntemporary files and directories in.\nThe location of the system temp directory is platform-dependent,\nand may be set by an environment variable.\n","line":"85"},{"ref":{"name":"Directory","refId":"dart.io/Directory"},"kind":"property","name":"absolute","id":"absolute","comment":"\nReturns a [Directory] instance whose path is the absolute path to [this].\n\nThe absolute path is computed by prefixing\na relative path with the current working directory, and returning\nan absolute path unchanged.\n","line":"139"},{"ref":{"name":"String","refId":"dart.core/String"},"isFinal":true,"kind":"variable","name":"path","id":"path","comment":"\nGets the path of this directory.\n","line":"195"},{"returnType":{"name":"Directory","refId":"dart.io/Directory"},"kind":"constructor","name":"","id":"1()","comment":"\nCreates a directory object. The path is either an absolute path,\nor it is a relative path which is interpreted relative to the directory\nin which the Dart VM was started.\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"path","id":"path"}],"line":"16"},{"returnType":{"name":"Directory","refId":"dart.io/Directory"},"kind":"constructor","name":"fromUri","id":"fromUri1()","comment":"\nCreate a Directory object from a URI.\n\nIf [uri] cannot reference a directory this throws [UnsupportedError].\n","children":[{"ref":{"name":"Uri","refId":"dart.core/Uri"},"kind":"param","name":"uri","id":"uri"}],"line":"23"}],"uri":"dart-sdk/lib/io/directory.dart","line":"10"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"kind":"class","name":"_Filter","id":"_Filter","comment":"\nPrivate helper-class to handle native filters.\n","children":[{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"process","id":"process3()","comment":"\nCall to process a chunk of data. A call to [process] should only be made\nwhen [processed] returns [null].\n","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"param","name":"data","id":"data"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"start","id":"start"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"end","id":"end"}],"line":"270"},{"returnType":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"method","name":"processed","id":"processed2()","comment":"\nGet a chunk of processed data. When there are no more data available,\n[processed] will return [null]. Set [flush] to [false] for non-final\ncalls to improve performance of some filters.\n\nThe last call to [processed] should have [end] set to [true]. This will make\nsure a 'end' packet is written on the stream.\n","children":[{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"true","isOptional":true,"isNamed":true,"kind":"param","name":"flush","id":"flush"},{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"false","isOptional":true,"isNamed":true,"kind":"param","name":"end","id":"end"}],"line":"280"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"end","id":"end0()","comment":"\nMark the filter as closed. Always call this method for any filter created\nto avoid leaking resources. [end] can be called at any time, but any\nsuccessive calls to [process] or [processed] will fail.\n","line":"287"},{"returnType":{"name":"_Filter","refId":"dart.io/_Filter"},"isStatic":true,"kind":"method","name":"newZLibDeflateFilter","id":"newZLibDeflateFilter2()","children":[{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"param","name":"gzip","id":"gzip"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"level","id":"level"}],"line":"289"},{"returnType":{"name":"_Filter","refId":"dart.io/_Filter"},"isStatic":true,"kind":"method","name":"newZLibInflateFilter","id":"newZLibInflateFilter0()","line":"290"}],"isPrivate":true,"uri":"dart-sdk/lib/io/data_transformer.dart","line":"265"},{"superclass":{"name":"ByteConversionSink","refId":"dart.convert/ByteConversionSink"},"kind":"class","name":"_FilterSink","id":"_FilterSink","children":[{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"add","id":"add1()","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"param","name":"data","id":"data"}],"line":"213"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"addSlice","id":"addSlice4()","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"param","name":"data","id":"data"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"start","id":"start"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"end","id":"end"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"param","name":"isLast","id":"isLast"}],"line":"217"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"close","id":"close0()","line":"240"},{"ref":{"name":"_Filter","refId":"dart.io/_Filter"},"isFinal":true,"kind":"variable","name":"_filter","id":"_filter","isPrivate":true,"line":"206"},{"ref":{"name":"ByteConversionSink","refId":"dart.convert/ByteConversionSink"},"isFinal":true,"kind":"variable","name":"_sink","id":"_sink","isPrivate":true,"line":"207"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"variable","name":"_closed","id":"_closed","isPrivate":true,"line":"208"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"variable","name":"_empty","id":"_empty","isPrivate":true,"line":"209"},{"kind":"constructor","name":"","id":"2()","children":[{"ref":{"name":"ByteConversionSink","refId":"dart.convert/ByteConversionSink"},"initializedField":{"name":"_sink","refId":"dart.io/_FilterSink/_sink"},"kind":"param","name":"_sink","id":"_sink","isPrivate":true},{"ref":{"name":"_Filter","refId":"dart.io/_Filter"},"initializedField":{"name":"_filter","refId":"dart.io/_FilterSink/_filter"},"kind":"param","name":"_filter","id":"_filter","isPrivate":true}],"line":"211"}],"isPrivate":true,"uri":"dart-sdk/lib/io/data_transformer.dart","line":"205"},{"superclass":{"name":"_FilterSink","refId":"dart.io/_FilterSink"},"kind":"class","name":"_ZLibDecoderSink","id":"_ZLibDecoderSink","children":[{"kind":"constructor","name":"","id":"1()","children":[{"ref":{"name":"ByteConversionSink","refId":"dart.convert/ByteConversionSink"},"kind":"param","name":"sink","id":"sink"}],"line":"200"}],"isPrivate":true,"uri":"dart-sdk/lib/io/data_transformer.dart","line":"199"},{"superclass":{"name":"_FilterSink","refId":"dart.io/_FilterSink"},"kind":"class","name":"_ZLibEncoderSink","id":"_ZLibEncoderSink","children":[{"kind":"constructor","name":"","id":"3()","children":[{"ref":{"name":"ByteConversionSink","refId":"dart.convert/ByteConversionSink"},"kind":"param","name":"sink","id":"sink"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"param","name":"gzip","id":"gzip"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"level","id":"level"}],"line":"194"}],"isPrivate":true,"uri":"dart-sdk/lib/io/data_transformer.dart","line":"193"},{"superclass":{"name":"ByteConversionSink","refId":"dart.convert/ByteConversionSink"},"kind":"class","name":"_BufferSink","id":"_BufferSink","children":[{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"add","id":"add1()","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"param","name":"chunk","id":"chunk"}],"line":"176"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"addSlice","id":"addSlice4()","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"param","name":"chunk","id":"chunk"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"start","id":"start"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"end","id":"end"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"param","name":"isLast","id":"isLast"}],"line":"180"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"close","id":"close0()","line":"189"},{"ref":{"name":"BytesBuilder","refId":"dart.io/BytesBuilder"},"isFinal":true,"kind":"variable","name":"builder","id":"builder","line":"174"}],"isPrivate":true,"uri":"dart-sdk/lib/io/data_transformer.dart","line":"173"},{"superclass":{"name":"Converter","refId":"dart.convert/Converter","arguments":[{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]}]},"kind":"class","name":"ZLibDecoder","id":"ZLibDecoder","comment":"\nThe [ZLibDecoder] is the decoder used by [ZLibCodec] and [GZipCodec] to\ndecompress data.\n","children":[{"returnType":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"method","name":"convert","id":"convert1()","comment":"\nConvert a list of bytes using the options given to the [ZLibDecoder]\nconstructor.\n","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"param","name":"bytes","id":"bytes"}],"line":"150"},{"returnType":{"name":"ByteConversionSink","refId":"dart.convert/ByteConversionSink"},"kind":"method","name":"startChunkedConversion","id":"startChunkedConversion1()","comment":"\nStart a chunked conversion. While it accepts any [ChunkedConversionSink]\ntaking [List<int>]'s, the optimal sink to be passed as [sink] is a\n[ByteConversionSink].\n","children":[{"ref":{"name":"ChunkedConversionSink","refId":"dart.convert/ChunkedConversionSink","arguments":[{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]}]},"kind":"param","name":"sink","id":"sink","line":"164"}],"line":"163"},{"kind":"constructor","name":"","id":"0()","comment":"\nCreate a new [ZLibEncoder] converter.\n","line":"144"}],"uri":"dart-sdk/lib/io/data_transformer.dart","line":"139"},{"superclass":{"name":"Converter","refId":"dart.convert/Converter","arguments":[{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]}]},"kind":"class","name":"ZLibEncoder","id":"ZLibEncoder","comment":"\nThe [ZLibEncoder] is the encoder used by [ZLibCodec] and [GZipCodec] to\ncompress data.\n","children":[{"returnType":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"method","name":"convert","id":"convert1()","comment":"\nConvert a list of bytes using the options given to the [ZLibEncoder]\nconstructor.\n","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"param","name":"bytes","id":"bytes"}],"line":"111"},{"returnType":{"name":"ByteConversionSink","refId":"dart.convert/ByteConversionSink"},"kind":"method","name":"startChunkedConversion","id":"startChunkedConversion1()","comment":"\nStart a chunked conversion using the options given to the [ZLibEncoder]\nconstructor. While it accepts any [ChunkedConversionSink] taking\n[List<int>]'s, the optimal sink to be passed as [sink] is a\n[ByteConversionSink].\n","children":[{"ref":{"name":"ChunkedConversionSink","refId":"dart.convert/ChunkedConversionSink","arguments":[{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]}]},"kind":"param","name":"sink","id":"sink","line":"126"}],"line":"125"},{"ref":{"name":"bool","refId":"dart.core/bool"},"isFinal":true,"kind":"variable","name":"gzip","id":"gzip","comment":"\nIf [gzip] is true, `GZip` frames will be added to the compressed data.\n","line":"93"},{"ref":{"name":"int","refId":"dart.core/int"},"isFinal":true,"kind":"variable","name":"level","id":"level","comment":"\nThe compression level used by the encoder.\n","line":"98"},{"kind":"constructor","name":"","id":"2()","comment":"\nCreate a new [ZLibEncoder] converter. If the [gzip] flag is set, the\nencoder will wrap the encoded ZLib data in GZip frames.\n","children":[{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"false","isOptional":true,"isNamed":true,"initializedField":{"name":"gzip","refId":"dart.io/ZLibEncoder/gzip"},"kind":"param","name":"gzip","id":"gzip"},{"ref":{"name":"int","refId":"dart.core/int"},"defaultValue":"6","isOptional":true,"isNamed":true,"initializedField":{"name":"level","refId":"dart.io/ZLibEncoder/level"},"kind":"param","name":"level","id":"level"}],"line":"104"}],"uri":"dart-sdk/lib/io/data_transformer.dart","line":"89"},{"superclass":{"name":"Codec","refId":"dart.convert/Codec","arguments":[{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]}]},"kind":"class","name":"GZipCodec","id":"GZipCodec","comment":"\nThe [GZipCodec] encodes raw bytes to GZip compressed bytes and decodes GZip\ncompressed bytes to raw bytes.\n\nThe difference between [ZLibCodec] and [GZipCodec] is that the [GZipCodec]\nwraps the `ZLib` compressed bytes in `GZip` frames.\n","children":[{"ref":{"name":"Converter","refId":"dart.convert/Converter","arguments":[{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]}]},"kind":"property","name":"encoder","id":"encoder","comment":"\nGet a [Converter] for encoding to `GZip` compressed data.\n","line":"67"},{"ref":{"name":"Converter","refId":"dart.convert/Converter","arguments":[{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]}]},"kind":"property","name":"decoder","id":"decoder","comment":"\nGet a [Converter] for decoding `GZip` compressed data.\n","line":"73"},{"ref":{"name":"int","refId":"dart.core/int"},"isFinal":true,"kind":"variable","name":"level","id":"level","comment":"\nThe compression level of the [ZLibCodec].\n","line":"62"},{"kind":"constructor","name":"","id":"1()","comment":"\nThe compression-[level] can be set in the range of `1..10`, with `6` being\nthe default compression level. Levels above 6 will have higher compression\nrates at the cost of more CPU and memory usage. Levels below 6 will use\nless CPU and memory, but at the cost of lower compression rates.\n","children":[{"ref":{"name":"int","refId":"dart.core/int"},"defaultValue":"6","isOptional":true,"isNamed":true,"initializedField":{"name":"level","refId":"dart.io/GZipCodec/level"},"kind":"param","name":"level","id":"level"}],"line":"81"}],"uri":"dart-sdk/lib/io/data_transformer.dart","line":"58"},{"superclass":{"name":"Codec","refId":"dart.convert/Codec","arguments":[{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]}]},"kind":"class","name":"ZLibCodec","id":"ZLibCodec","comment":"\nThe [ZLibCodec] encodes raw bytes to ZLib compressed bytes and decodes ZLib\ncompressed bytes to raw bytes.\n","children":[{"ref":{"name":"Converter","refId":"dart.convert/Converter","arguments":[{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]}]},"kind":"property","name":"encoder","id":"encoder","comment":"\nGet a [Converter] for encoding to `ZLib` compressed data.\n","line":"27"},{"ref":{"name":"Converter","refId":"dart.convert/Converter","arguments":[{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]}]},"kind":"property","name":"decoder","id":"decoder","comment":"\nGet a [Converter] for decoding `ZLib` compressed data.\n","line":"33"},{"ref":{"name":"int","refId":"dart.core/int"},"isFinal":true,"kind":"variable","name":"level","id":"level","comment":"\nThe compression level of the [ZLibCodec].\n","line":"22"},{"kind":"constructor","name":"","id":"1()","comment":"\nThe compression-[level] can be set in the range of `1..10`, with `6` being\nthe default compression level. Levels above 6 will have higher compression\nrates at the cost of more CPU and memory usage. Levels below 6 will use\nless CPU and memory, but at the cost of lower compression rates.\n","children":[{"ref":{"name":"int","refId":"dart.core/int"},"defaultValue":"6","isOptional":true,"isNamed":true,"initializedField":{"name":"level","refId":"dart.io/ZLibCodec/level"},"kind":"param","name":"level","id":"level"}],"line":"41"}],"uri":"dart-sdk/lib/io/data_transformer.dart","line":"18"},{"superclass":{"name":"_HashBase","refId":"dart.io/_HashBase"},"kind":"class","name":"_SHA1","id":"_SHA1","children":[{"returnType":{"name":"_SHA1","refId":"dart.io/_SHA1"},"kind":"method","name":"newInstance","id":"newInstance0()","line":"400"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_updateHash","id":"_updateHash1()","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"param","name":"m","id":"m"}],"isPrivate":true,"line":"406"},{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"variable","name":"_w","id":"_w","isPrivate":true,"line":"447"},{"kind":"constructor","name":"","id":"0()","line":"391"}],"isPrivate":true,"uri":"dart-sdk/lib/io/crypto.dart","line":"389"},{"superclass":{"name":"_HashBase","refId":"dart.io/_HashBase"},"kind":"class","name":"_MD5","id":"_MD5","children":[{"returnType":{"name":"_MD5","refId":"dart.io/_MD5"},"kind":"method","name":"newInstance","id":"newInstance0()","line":"321"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_updateHash","id":"_updateHash1()","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"param","name":"m","id":"m"}],"isPrivate":true,"line":"346"},{"isStatic":true,"kind":"variable","name":"_k","id":"_k","isPrivate":true,"line":"325"},{"isStatic":true,"kind":"variable","name":"_r","id":"_r","isPrivate":true,"line":"338"},{"kind":"constructor","name":"","id":"0()","line":"313"}],"isPrivate":true,"uri":"dart-sdk/lib/io/crypto.dart","line":"312"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"kind":"class","name":"_HashBase","id":"_HashBase","children":[{"kind":"method","name":"add","id":"add1()","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"param","name":"data","id":"data"}],"line":"181"},{"returnType":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"method","name":"close","id":"close0()","line":"192"},{"kind":"method","name":"newInstance","id":"newInstance0()","line":"209"},{"kind":"method","name":"_updateHash","id":"_updateHash1()","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"param","name":"m","id":"m"}],"isPrivate":true,"line":"212"},{"kind":"method","name":"_add32","id":"_add322()","children":[{"kind":"param","name":"x","id":"x"},{"kind":"param","name":"y","id":"y"}],"isPrivate":true,"line":"215"},{"kind":"method","name":"_roundUp","id":"_roundUp2()","children":[{"kind":"param","name":"val","id":"val"},{"kind":"param","name":"n","id":"n"}],"isPrivate":true,"line":"216"},{"returnType":{"name":"int","refId":"dart.core/int"},"kind":"method","name":"_rotl32","id":"_rotl322()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"val","id":"val"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"shift","id":"shift"}],"isPrivate":true,"line":"219"},{"kind":"method","name":"_resultAsBytes","id":"_resultAsBytes0()","isPrivate":true,"line":"227"},{"kind":"method","name":"_bytesToChunk","id":"_bytesToChunk2()","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"param","name":"data","id":"data"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"dataIndex","id":"dataIndex"}],"isPrivate":true,"line":"236"},{"kind":"method","name":"_wordToBytes","id":"_wordToBytes1()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"word","id":"word"}],"isPrivate":true,"line":"254"},{"kind":"method","name":"_iterate","id":"_iterate0()","isPrivate":true,"line":"265"},{"kind":"method","name":"_finalizeData","id":"_finalizeData0()","isPrivate":true,"line":"280"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"property","name":"blockSize","id":"blockSize","line":"204"},{"ref":{"name":"int","refId":"dart.core/int"},"isFinal":true,"kind":"variable","name":"_chunkSizeInWords","id":"_chunkSizeInWords","isPrivate":true,"line":"301"},{"ref":{"name":"int","refId":"dart.core/int"},"isFinal":true,"kind":"variable","name":"_digestSizeInWords","id":"_digestSizeInWords","isPrivate":true,"line":"302"},{"ref":{"name":"bool","refId":"dart.core/bool"},"isFinal":true,"kind":"variable","name":"_bigEndianWords","id":"_bigEndianWords","isPrivate":true,"line":"303"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"_lengthInBytes","id":"_lengthInBytes","isPrivate":true,"line":"304"},{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"variable","name":"_pendingData","id":"_pendingData","isPrivate":true,"line":"305"},{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"variable","name":"_currentChunk","id":"_currentChunk","isPrivate":true,"line":"306"},{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"variable","name":"_h","id":"_h","isPrivate":true,"line":"307"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"variable","name":"_digestCalled","id":"_digestCalled","isPrivate":true,"line":"308"},{"kind":"constructor","name":"","id":"3()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"initializedField":{"name":"_chunkSizeInWords","refId":"dart.io/_HashBase/_chunkSizeInWords"},"kind":"param","name":"_chunkSizeInWords","id":"_chunkSizeInWords","isPrivate":true},{"ref":{"name":"int","refId":"dart.core/int"},"initializedField":{"name":"_digestSizeInWords","refId":"dart.io/_HashBase/_digestSizeInWords"},"kind":"param","name":"_digestSizeInWords","id":"_digestSizeInWords","isPrivate":true,"line":"173"},{"ref":{"name":"bool","refId":"dart.core/bool"},"initializedField":{"name":"_bigEndianWords","refId":"dart.io/_HashBase/_bigEndianWords"},"kind":"param","name":"_bigEndianWords","id":"_bigEndianWords","isPrivate":true,"line":"174"}],"line":"172"}],"isPrivate":true,"uri":"dart-sdk/lib/io/crypto.dart","line":"171"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"kind":"class","name":"_CryptoUtils","id":"_CryptoUtils","children":[{"returnType":{"name":"String","refId":"dart.core/String"},"isStatic":true,"kind":"method","name":"bytesToHex","id":"bytesToHex1()","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"param","name":"bytes","id":"bytes"}],"line":"8"},{"returnType":{"name":"String","refId":"dart.core/String"},"isStatic":true,"kind":"method","name":"bytesToBase64","id":"bytesToBase643()","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"param","name":"bytes","id":"bytes"},{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"false","isOptional":true,"kind":"param","name":"urlSafe","id":"urlSafe","line":"51"},{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"false","isOptional":true,"kind":"param","name":"addLineSeparator","id":"addLineSeparator","line":"52"}],"line":"50"},{"returnType":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"isStatic":true,"kind":"method","name":"base64StringToBytes","id":"base64StringToBytes2()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"input","id":"input"},{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"true","isOptional":true,"kind":"param","name":"ignoreInvalidCharacters","id":"ignoreInvalidCharacters","line":"108"}],"line":"107"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"PAD","id":"PAD","line":"16"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"CR","id":"CR","line":"17"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"LF","id":"LF","line":"18"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"LINE_LENGTH","id":"LINE_LENGTH","line":"19"},{"ref":{"name":"String","refId":"dart.core/String"},"isStatic":true,"kind":"variable","name":"_encodeTable","id":"_encodeTable","isPrivate":true,"line":"21"},{"ref":{"name":"String","refId":"dart.core/String"},"isStatic":true,"kind":"variable","name":"_encodeTableUrlSafe","id":"_encodeTableUrlSafe","isPrivate":true,"line":"24"},{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"isStatic":true,"kind":"variable","name":"_decodeTable","id":"_decodeTable","isPrivate":true,"line":"32"}],"isPrivate":true,"uri":"dart-sdk/lib/io/crypto.dart","line":"7"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"kind":"class","name":"_IOCrypto","id":"_IOCrypto","children":[{"returnType":{"name":"Uint8List","refId":"dart.typed_data/Uint8List"},"isStatic":true,"kind":"method","name":"getRandomBytes","id":"getRandomBytes1()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"count","id":"count"}],"line":"124"}],"isPrivate":true,"uri":"dart-sdk/lib/io/common.dart","line":"123"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"kind":"class","name":"_BufferAndStart","id":"_BufferAndStart","children":[{"ref":{"name":"List","refId":"dart.core/List"},"kind":"variable","name":"buffer","id":"buffer","line":"95"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"start","id":"start","line":"96"},{"kind":"constructor","name":"","id":"2()","children":[{"ref":{"name":"List","refId":"dart.core/List"},"initializedField":{"name":"buffer","refId":"dart.io/_BufferAndStart/buffer"},"kind":"param","name":"buffer","id":"buffer"},{"ref":{"name":"int","refId":"dart.core/int"},"initializedField":{"name":"start","refId":"dart.io/_BufferAndStart/start"},"kind":"param","name":"start","id":"start"}],"line":"94"}],"isPrivate":true,"uri":"dart-sdk/lib/io/common.dart","line":"93"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"kind":"class","name":"OSError","id":"OSError","comment":"\nAn [OSError] object holds information about an error from the\noperating system.\n","children":[{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"method","name":"toString","id":"toString0()","comment":"Converts an OSError object to a string representation. ","line":"61"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"noErrorCode","id":"noErrorCode","comment":"Constant used to indicate that no OS error code is available. ","line":"55"},{"ref":{"name":"String","refId":"dart.core/String"},"isFinal":true,"kind":"variable","name":"message","id":"message","comment":"\nError message supplied by the operating system. null if no message is\nassociated with the error.\n","line":"82"},{"ref":{"name":"int","refId":"dart.core/int"},"isFinal":true,"kind":"variable","name":"errorCode","id":"errorCode","comment":"\nError code supplied by the operating system. Will have the value\n[noErrorCode] if there is no error code associated with the error.\n","line":"88"},{"kind":"constructor","name":"","id":"2()","comment":"Creates an OSError object from a message and an errorCode. ","children":[{"ref":{"name":"String","refId":"dart.core/String"},"defaultValue":"\"\"","isOptional":true,"initializedField":{"name":"message","refId":"dart.io/OSError/message"},"kind":"param","name":"message","id":"message"},{"ref":{"name":"int","refId":"dart.core/int"},"defaultValue":"noErrorCode","isOptional":true,"initializedField":{"name":"errorCode","refId":"dart.io/OSError/errorCode"},"kind":"param","name":"errorCode","id":"errorCode"}],"line":"58"}],"uri":"dart-sdk/lib/io/common.dart","line":"53"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"interfaces":[{"name":"Exception","refId":"dart.core/Exception"}],"isThrowable":true,"kind":"class","name":"IOException","id":"IOException","comment":"\nBase class for all IO related exceptions.\n","children":[{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"method","name":"toString","id":"toString0()","line":"46"}],"uri":"dart-sdk/lib/io/common.dart","line":"45"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"kind":"class","name":"BytesBuilder","id":"BytesBuilder","comment":"\nBuilds a list of bytes, allowing bytes and lists of bytes to be added at the\nend.\n\nUsed to efficiently collect bytes and lists of bytes, using an internal\nbuffer. Note that it's optimized for IO, using an initial buffer of 1K bytes.\n","children":[{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"add","id":"add1()","comment":"\nAppends [bytes] to the current contents of the builder.\n\nEach value of [bytes] will be bit-representation truncated to the range\n0 .. 255.\n","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"param","name":"bytes","id":"bytes"}],"line":"32"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"addByte","id":"addByte1()","comment":"\nAppend [byte] to the current contents of the builder.\n\nThe [byte] will be bit-representation truncated to the range 0 .. 255.\n","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"byte","id":"byte"}],"line":"64"},{"returnType":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"method","name":"takeBytes","id":"takeBytes0()","comment":"\nReturns the contents of `this` and clears `this`.\n\nThe list returned is a view of the the internal buffer, limited to the\n[length].\n","line":"72"},{"returnType":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"method","name":"toBytes","id":"toBytes0()","comment":"\nReturns a copy of the current contents of the builder.\n\nLeaves the contents of the builder intact.\n","line":"84"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"clear","id":"clear0()","comment":"\nClear the contents of the builder.\n","line":"108"},{"returnType":{"name":"int","refId":"dart.core/int"},"kind":"method","name":"_pow2roundup","id":"_pow2roundup1()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"x","id":"x"}],"isPrivate":true,"line":"113"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"property","name":"length","id":"length","comment":"\nThe number of bytes in the builder.\n","line":"93"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"isEmpty","id":"isEmpty","comment":"\nReturns `true` if the buffer is empty.\n","line":"98"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"isNotEmpty","id":"isNotEmpty","comment":"\nReturns `true` if the buffer is not empty.\n","line":"103"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"_INIT_SIZE","id":"_INIT_SIZE","isPrivate":true,"line":"16"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"_length","id":"_length","isPrivate":true,"line":"18"},{"ref":{"name":"Uint8List","refId":"dart.typed_data/Uint8List"},"kind":"variable","name":"_buffer","id":"_buffer","isPrivate":true,"line":"19"},{"kind":"constructor","name":"","id":"0()","comment":"\nConstruct a new empty [BytesBuilder].\n","line":"24"}],"uri":"dart-sdk/lib/io/bytes_builder.dart","line":"14"}],"uri":"dart-sdk/lib/io/io.dart","line":"15"}