{"dependencies":[{"kind":"library","name":"dart:core","id":"dart.core","comment":"\n\nBuilt-in types, collections,\nand other core functionality for every Dart program.\n\nThis library is automatically imported.\n\nSome classes in this library,\nsuch as [String] and [num],\nsupport Dart's built-in data types.\nOther classes, such as [List] and [Map], provide data structures\nfor managing collections of objects.\nAnd still other classes represent commonly used types of data\nsuch as URIs, dates and times, and errors.\n\n## Numbers and booleans\n\n[int] and [double] provide support for Dart's built-in numerical data types:\nintegers and double-precision floating point numbers, respectively.\nAn object of type [bool] is either true or false.\nVariables of these types can be constructed from literals:\n\n    int meaningOfLife = 42;\n    double valueOfPi  = 3.141592;\n    bool visible      = true;\n\n## Strings and regular expressions\n\nA [String] is immutable and represents a sequence of characters.\n\n    String shakespeareQuote = \"All the world's a stage, ...\";\n\n[StringBuffer] provides a way to construct strings efficiently.\n\n    StringBuffer moreShakespeare = new StringBuffer();\n    moreShakespeare.write('And all the men and women ');\n    moreShakespeare.write('merely players; ...');\n\nThe String and StringBuffer classes implement string concatenation,\ninterpolation, and other string manipulation features.\n\n    String philosophy = 'Live on ';\n    String get palindrome => philosophy + philosophy.split('').reversed.join();\n\n[RegExp] implements Dart regular expressions,\nwhich provide a grammar for matching patterns within text.\nFor example, here's a regular expression that matches\na string of one or more digits:\n\n    var numbers = new RegExp(r'\\d+');\n\nDart regular expressions have the same syntax and semantics as\nJavaScript regular expressions. See\n<http://ecma-international.org/ecma-262/5.1/#sec-15.10>\nfor the specification of JavaScript regular expressions.\n\n## Collections\n\nThe dart:core library provides basic collections,\nsuch as [List], [Map], and [Set].\n\nA List is an ordered collection of objects, with a length.\nLists are sometimes called arrays.\nUse a List when you need to access objects by index.\n\n    List superheroes = [ 'Batman', 'Superman', 'Harry Potter' ];\n\nA Set is an unordered collection of unique objects.\nYou cannot get an item by index (position).\nAdding a duplicate item has no effect.\n\n    Set villains = new Set();\n    villains.add('Joker');\n    villains.addAll( ['Lex Luther', 'Voldemort'] );\n\nA Map is an unordered collection of key-value pairs.\nMaps are sometimes called associative arrays because\nmaps associate a key to some value for easy retrieval.\nKeys are unique.\nUse a Map when you need to access objects\nby a unique identifier.\n\n    Map sidekicks = { 'Batman': 'Robin',\n                      'Superman': 'Lois Lane',\n                      'Harry Potter': 'Ron and Hermione' };\n\nIn addition to these classes,\ndart:core contains [Iterable],\nan interface that defines functionality\ncommon in collections of objects.\nExamples include the ability\nto run a function on each element in the collection,\nto apply a test to each element,\nto retrieve an object, and to determine length.\n\nIterable is implemented by List and Set,\nand used by Map for its keys and values.\n\nFor other kinds of collections, check out the\n[dart:collection](#dart-collection) library.\n\n## Date and time\n\nUse [DateTime] to represent a point in time\nand [Duration] to represent a span of time.\n\nYou can create DateTime objects with constructors\nor by parsing a correctly formatted string.\n\n    DateTime now = new DateTime.now();\n    DateTime berlinWallFell = new DateTime(1989, 11, 9);\n    DateTime moonLanding = DateTime.parse(\"1969-07-20\");\n\nCreate a Duration object specifying the individual time units.\n\n    Duration timeRemaining = new Duration(hours:56, minutes:14);\n\nIn addition to DateTime and Duration,\ndart:core contains the [Stopwatch] class for measuring elapsed time.\n\n## Uri\n\nA [Uri] object represents a uniform resource identifier,\nwhich identifies a resource on the web.\n\n    Uri dartlang = Uri.parse('http://dartlang.org/');\n\n## Errors\n\nThe [Error] class represents the occurrence of an error\nduring runtime.\nSubclasses of this class represent specific kinds of errors.\n\n## Other documentation\n\nFor more information about how to use the built-in types, refer to\n[Built-in Types](http://www.dartlang.org/docs/dart-up-and-running/contents/ch02.html#built-in-types)\nin Chapter 2 of\n[Dart: Up and Running](http://www.dartlang.org/docs/dart-up-and-running/).\n\nAlso, see\n[dart:core - Numbers, Collections, Strings, and More](http://www.dartlang.org/docs/dart-up-and-running/contents/ch03.html#ch03-dartcore---strings-collections-and-more)\nfor more coverage of classes in this package.\n\nThe\n[Dart Language Specification](http://www.dartlang.org/docs/spec/)\nprovides technical details.\n","children":[{"kind":"class","name":"Object","id":"Object","comment":"\nThe base class for all Dart objects.\n\nBecause Object is the root of the Dart class hierarchy,\nevery other Dart class is a subclass of Object.\n\nWhen you define a class, you should override [toString]\nto return a string describing an instance of that class.\nYou might also need to define [hashCode] and [==], as described in the\n[Implementing map keys]\n(http://www.dartlang.org/docs/dart-up-and-running/contents/ch03.html#ch03-implementing-map-keys)\nsection of the [library tour]\n(http://www.dartlang.org/docs/dart-up-and-running/contents/ch03.html).\n","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"isOperator":true,"kind":"method","name":"==","id":"==1()","comment":"\nThe equality operator.\n\nThe default behavior for all [Object]s is to return true if and\nonly if [:this:] and [other] are the same object.\n\nOverride this method to specify a different equality relation on\na class. The overriding method must still be an equivalence relation.\nThat is, it must be:\n\n * Total: It must return a boolean for all arguments. It should never throw\n   or return `null`.\n\n * Reflexive: For all objects `o`, `o == o` must be true.\n\n * Symmetric: For all objects `o1` and `o2`, `o1 == o2` and `o2 == o1` must\n   either both be true, or both be false.\n\n * Transitive: For all objects `o1`, `o2`, and `o3`, if `o1 == o2` and\n   `o2 == o3` are true, then `o1 == o3` must be true.\n\nThe method should also be consistent over time, so equality of two objects\nshould not change over time, or at least only change if one of the objects\nwas modified.\n\nIf a subclass overrides the equality operator it should override\nthe [hashCode] method as well to maintain consistency.\n","children":[{"kind":"param","name":"other","id":"other"}],"line":"59"},{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"method","name":"toString","id":"toString0()","comment":"\nReturns a string representation of this object.\n","line":"78"},{"kind":"method","name":"noSuchMethod","id":"noSuchMethod1()","comment":"\n[noSuchMethod] is invoked when users invoke a non-existent method\non an object. The name of the method and the arguments of the\ninvocation are passed to [noSuchMethod] in an [Invocation].\nIf [noSuchMethod] returns a value, that value becomes the result of\nthe original invocation.\n\nThe default behavior of [noSuchMethod] is to throw a\n[NoSuchMethodError].\n","children":[{"ref":{"name":"Invocation","refId":"dart.core/Invocation"},"kind":"param","name":"invocation","id":"invocation"}],"line":"90"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"property","name":"hashCode","id":"hashCode","comment":"\nGet a hash code for this object.\n\nAll objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator [:==:]. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.\n\nIf a subclass overrides [hashCode] it should override the\nequality operator as well to maintain consistency.\n","line":"73"},{"ref":{"name":"Type","refId":"dart.core/Type"},"kind":"property","name":"runtimeType","id":"runtimeType","comment":"\nA representation of the runtime type of the object.\n","line":"95"},{"kind":"constructor","name":"","id":"0()","comment":"\nCreates a new [Object] instance.\n\n[Object] instances have no meaningful state, and are only useful\nthrough their identity. An [Object] instance is equal to itself\nonly.\n","line":"29"}],"uri":"dart-sdk/lib/core/object.dart","line":"21"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"isThrowable":true,"kind":"class","name":"Exception","id":"Exception","comment":"\nA marker interface implemented by all core library exceptions.\n\nAn [Exception] is intended to convey information to the user about a failure,\nso that the error can be addressed programmatically. It is intended to be\ncaught, and it should contain useful data fields.\n\nCreating instances of [Exception] directly with [:new Exception(\"message\"):]\nis discouraged, and only included as a temporary measure during development,\nuntil the actual exceptions used by a library are done.\n","children":[{"returnType":{"name":"Exception","refId":"dart.core/Exception"},"kind":"constructor","name":"","id":"1()","children":[{"isOptional":true,"kind":"param","name":"message","id":"message"}],"line":"21"}],"uri":"dart-sdk/lib/core/exceptions.dart","line":"20"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isThrowable":true,"kind":"class","name":"Error","id":"Error","children":[{"returnType":{"name":"String","refId":"dart.core/String"},"isStatic":true,"kind":"method","name":"safeToString","id":"safeToString1()","comment":"\nSafely convert a value to a [String] description.\n\nThe conversion is guaranteed to not throw, so it won't use the object's\ntoString method.\n","children":[{"ref":{"name":"Object","refId":"dart.core/Object"},"kind":"param","name":"object","id":"object"}],"line":"14"},{"returnType":{"name":"String","refId":"dart.core/String"},"isStatic":true,"kind":"method","name":"_objectToString","id":"_objectToString1()","children":[{"ref":{"name":"Object","refId":"dart.core/Object"},"kind":"param","name":"object","id":"object"}],"isPrivate":true,"line":"65"},{"ref":{"name":"StackTrace","refId":"dart.core/StackTrace"},"kind":"property","name":"stackTrace","id":"stackTrace","line":"67"}],"uri":"dart-sdk/lib/core/errors.dart","line":"7"}],"uri":"dart-sdk/lib/core/core.dart","line":"153"}],"kind":"library","name":"dart:async","id":"dart.async","comment":"\nSupport for asynchronous programming,\nwith classes such as Future and Stream.\n\nFor an introduction to asynchronous programming in Dart, see the\n[dart:async section of the language tour]\n(https://www.dartlang.org/docs/dart-up-and-running/contents/ch03.html#ch03-asynchronous-programming).\n\n## Other resources\n\n* [Using Future Based APIs]\n(https://www.dartlang.org/articles/using-future-based-apis/): A first look at\nFutures and how to use them to write asynchronous Dart code.\n\n* [Futures and Error Handling]\n(https://www.dartlang.org/articles/futures-and-error-handling/): Everything\nyou wanted to know about handling errors and exceptions when working with\nFutures (but were afraid to ask).\n\n* [The Event Loop and Dart](https://www.dartlang.org/articles/event-loop/):\nLearn how Dart handles the event queue and microtask queue, so you can write\nbetter asynchronous code with fewer surprises.\n\n* [Asynchronous Unit Testing with Dart]\n(https://www.dartlang.org/articles/dart-unit-tests/#asynchronous-tests): How\nto test asynchronous code.\n","children":[{"kind":"method","name":"runZoned","id":"runZoned4()","comment":"\nRuns [body] in its own zone.\n\nIf [onError] is non-null the zone is considered an error zone. All uncaught\nerrors, synchronous or asynchronous, in the zone are caught and handled\nby the callback.\n\nErrors may never cross error-zone boundaries. This is intuitive for leaving\na zone, but it also applies for errors that would enter an error-zone.\nErrors that try to cross error-zone boundaries are considered uncaught.\n\n    var future = new Future.value(499);\n    runZoned(() {\n      future = future.then((_) { throw \"error in first error-zone\"; });\n      runZoned(() {\n        future = future.catchError((e) { print(\"Never reached!\"); });\n      }, onError: (e) { print(\"unused error handler\"); });\n    }, onError: (e) { print(\"catches error of first error-zone.\"); });\n\nExample:\n\n    runZoned(() {\n      new Future(() { throw \"asynchronous error\"; });\n    }, onError: print);  // Will print \"asynchronous error\".\n","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"body","id":"body","children":[{"kind":"functiontype","name":"Function","id":"Function","uri":"dart-sdk/lib/core/function.dart","line":"13"}]},{"ref":{"name":"Map","refId":"dart.core/Map","arguments":[{"name":"Symbol","refId":"dart.core/Symbol"}]},"isOptional":true,"isNamed":true,"kind":"param","name":"zoneValues","id":"zoneValues","line":"890"},{"ref":{"name":"ZoneSpecification","refId":"dart.async/ZoneSpecification"},"isOptional":true,"isNamed":true,"kind":"param","name":"zoneSpecification","id":"zoneSpecification","line":"891"},{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"isNamed":true,"kind":"param","name":"onError","id":"onError","line":"892"}],"uri":"dart-sdk/lib/async/zone.dart","line":"889"},{"returnType":{"name":"Zone","refId":"dart.async/Zone"},"kind":"method","name":"_rootFork","id":"_rootFork5()","children":[{"ref":{"name":"Zone","refId":"dart.async/Zone"},"kind":"param","name":"self","id":"self"},{"ref":{"name":"ZoneDelegate","refId":"dart.async/ZoneDelegate"},"kind":"param","name":"parent","id":"parent"},{"ref":{"name":"Zone","refId":"dart.async/Zone"},"kind":"param","name":"zone","id":"zone"},{"ref":{"name":"ZoneSpecification","refId":"dart.async/ZoneSpecification"},"kind":"param","name":"specification","id":"specification","line":"767"},{"ref":{"name":"Map","refId":"dart.core/Map","arguments":[{"name":"Symbol","refId":"dart.core/Symbol"}]},"kind":"param","name":"zoneValues","id":"zoneValues","line":"768"}],"isPrivate":true,"uri":"dart-sdk/lib/async/zone.dart","line":"766"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_printToZone","id":"_printToZone1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"line","id":"line"}],"isPrivate":true,"uri":"dart-sdk/lib/async/zone.dart","line":"762"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_rootPrint","id":"_rootPrint4()","children":[{"ref":{"name":"Zone","refId":"dart.async/Zone"},"kind":"param","name":"self","id":"self"},{"ref":{"name":"ZoneDelegate","refId":"dart.async/ZoneDelegate"},"kind":"param","name":"parent","id":"parent"},{"ref":{"name":"Zone","refId":"dart.async/Zone"},"kind":"param","name":"zone","id":"zone"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"line","id":"line"}],"isPrivate":true,"uri":"dart-sdk/lib/async/zone.dart","line":"758"},{"returnType":{"name":"Timer","refId":"dart.async/Timer"},"kind":"method","name":"_rootCreatePeriodicTimer","id":"_rootCreatePeriodicTimer5()","children":[{"ref":{"name":"Zone","refId":"dart.async/Zone"},"kind":"param","name":"self","id":"self","line":"750"},{"ref":{"name":"ZoneDelegate","refId":"dart.async/ZoneDelegate"},"kind":"param","name":"parent","id":"parent","line":"750"},{"ref":{"name":"Zone","refId":"dart.async/Zone"},"kind":"param","name":"zone","id":"zone","line":"750"},{"ref":{"name":"Duration","refId":"dart.core/Duration"},"kind":"param","name":"duration","id":"duration","line":"751"},{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"callback","id":"callback","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"Timer","refId":"dart.async/Timer"},"kind":"param","name":"timer","id":"timer","uri":"dart-sdk/lib/async/zone.dart","line":"751"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}],"line":"751"}],"isPrivate":true,"uri":"dart-sdk/lib/async/zone.dart","line":"749"},{"returnType":{"name":"Timer","refId":"dart.async/Timer"},"kind":"method","name":"_rootCreateTimer","id":"_rootCreateTimer5()","children":[{"ref":{"name":"Zone","refId":"dart.async/Zone"},"kind":"param","name":"self","id":"self"},{"ref":{"name":"ZoneDelegate","refId":"dart.async/ZoneDelegate"},"kind":"param","name":"parent","id":"parent"},{"ref":{"name":"Zone","refId":"dart.async/Zone"},"kind":"param","name":"zone","id":"zone"},{"ref":{"name":"Duration","refId":"dart.core/Duration"},"kind":"param","name":"duration","id":"duration","line":"742"},{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"callback","id":"callback","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","uri":"dart-sdk/lib/core/function.dart","line":"13"}],"line":"742"}],"isPrivate":true,"uri":"dart-sdk/lib/async/zone.dart","line":"741"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_rootScheduleMicrotask","id":"_rootScheduleMicrotask4()","children":[{"ref":{"name":"Zone","refId":"dart.async/Zone"},"kind":"param","name":"self","id":"self"},{"ref":{"name":"ZoneDelegate","refId":"dart.async/ZoneDelegate"},"kind":"param","name":"parent","id":"parent"},{"ref":{"name":"Zone","refId":"dart.async/Zone"},"kind":"param","name":"zone","id":"zone"},{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"f","id":"f","children":[{"kind":"functiontype","name":"Function","id":"Function","uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"isPrivate":true,"uri":"dart-sdk/lib/async/zone.dart","line":"734"},{"returnType":{"name":"ZoneBinaryCallback","refId":"dart.async/ZoneBinaryCallback"},"kind":"method","name":"_rootRegisterBinaryCallback","id":"_rootRegisterBinaryCallback4()","children":[{"ref":{"name":"Zone","refId":"dart.async/Zone"},"kind":"param","name":"self","id":"self","line":"730"},{"ref":{"name":"ZoneDelegate","refId":"dart.async/ZoneDelegate"},"kind":"param","name":"parent","id":"parent","line":"730"},{"ref":{"name":"Zone","refId":"dart.async/Zone"},"kind":"param","name":"zone","id":"zone","line":"730"},{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"f","id":"f","children":[{"kind":"functiontype","name":"Function","id":"Function","children":[{"kind":"param","name":"arg1","id":"arg1","uri":"dart-sdk/lib/async/zone.dart","line":"730"},{"kind":"param","name":"arg2","id":"arg2","uri":"dart-sdk/lib/async/zone.dart","line":"730"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}],"line":"730"}],"isPrivate":true,"uri":"dart-sdk/lib/async/zone.dart","line":"729"},{"returnType":{"name":"ZoneUnaryCallback","refId":"dart.async/ZoneUnaryCallback"},"kind":"method","name":"_rootRegisterUnaryCallback","id":"_rootRegisterUnaryCallback4()","children":[{"ref":{"name":"Zone","refId":"dart.async/Zone"},"kind":"param","name":"self","id":"self","line":"725"},{"ref":{"name":"ZoneDelegate","refId":"dart.async/ZoneDelegate"},"kind":"param","name":"parent","id":"parent","line":"725"},{"ref":{"name":"Zone","refId":"dart.async/Zone"},"kind":"param","name":"zone","id":"zone","line":"725"},{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"f","id":"f","children":[{"kind":"functiontype","name":"Function","id":"Function","children":[{"kind":"param","name":"arg","id":"arg","uri":"dart-sdk/lib/async/zone.dart","line":"725"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}],"line":"725"}],"isPrivate":true,"uri":"dart-sdk/lib/async/zone.dart","line":"724"},{"returnType":{"name":"ZoneCallback","refId":"dart.async/ZoneCallback"},"kind":"method","name":"_rootRegisterCallback","id":"_rootRegisterCallback4()","children":[{"ref":{"name":"Zone","refId":"dart.async/Zone"},"kind":"param","name":"self","id":"self","line":"720"},{"ref":{"name":"ZoneDelegate","refId":"dart.async/ZoneDelegate"},"kind":"param","name":"parent","id":"parent","line":"720"},{"ref":{"name":"Zone","refId":"dart.async/Zone"},"kind":"param","name":"zone","id":"zone","line":"720"},{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"f","id":"f","children":[{"kind":"functiontype","name":"Function","id":"Function","uri":"dart-sdk/lib/core/function.dart","line":"13"}],"line":"720"}],"isPrivate":true,"uri":"dart-sdk/lib/async/zone.dart","line":"719"},{"kind":"method","name":"_rootRunBinary","id":"_rootRunBinary6()","children":[{"ref":{"name":"Zone","refId":"dart.async/Zone"},"kind":"param","name":"self","id":"self"},{"ref":{"name":"ZoneDelegate","refId":"dart.async/ZoneDelegate"},"kind":"param","name":"parent","id":"parent"},{"ref":{"name":"Zone","refId":"dart.async/Zone"},"kind":"param","name":"zone","id":"zone"},{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"f","id":"f","children":[{"kind":"functiontype","name":"Function","id":"Function","children":[{"kind":"param","name":"arg1","id":"arg1","uri":"dart-sdk/lib/async/zone.dart","line":"707"},{"kind":"param","name":"arg2","id":"arg2","uri":"dart-sdk/lib/async/zone.dart","line":"707"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}],"line":"707"},{"kind":"param","name":"arg1","id":"arg1","line":"707"},{"kind":"param","name":"arg2","id":"arg2","line":"707"}],"isPrivate":true,"uri":"dart-sdk/lib/async/zone.dart","line":"706"},{"kind":"method","name":"_rootRunUnary","id":"_rootRunUnary5()","children":[{"ref":{"name":"Zone","refId":"dart.async/Zone"},"kind":"param","name":"self","id":"self"},{"ref":{"name":"ZoneDelegate","refId":"dart.async/ZoneDelegate"},"kind":"param","name":"parent","id":"parent"},{"ref":{"name":"Zone","refId":"dart.async/Zone"},"kind":"param","name":"zone","id":"zone"},{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"f","id":"f","children":[{"kind":"functiontype","name":"Function","id":"Function","children":[{"kind":"param","name":"arg","id":"arg","uri":"dart-sdk/lib/async/zone.dart","line":"694"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]},{"kind":"param","name":"arg","id":"arg"}],"isPrivate":true,"uri":"dart-sdk/lib/async/zone.dart","line":"694"},{"kind":"method","name":"_rootRun","id":"_rootRun4()","children":[{"ref":{"name":"Zone","refId":"dart.async/Zone"},"kind":"param","name":"self","id":"self"},{"ref":{"name":"ZoneDelegate","refId":"dart.async/ZoneDelegate"},"kind":"param","name":"parent","id":"parent"},{"ref":{"name":"Zone","refId":"dart.async/Zone"},"kind":"param","name":"zone","id":"zone"},{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"f","id":"f","children":[{"kind":"functiontype","name":"Function","id":"Function","uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"isPrivate":true,"uri":"dart-sdk/lib/async/zone.dart","line":"682"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_rootHandleUncaughtError","id":"_rootHandleUncaughtError5()","children":[{"ref":{"name":"Zone","refId":"dart.async/Zone"},"kind":"param","name":"self","id":"self","line":"668"},{"ref":{"name":"ZoneDelegate","refId":"dart.async/ZoneDelegate"},"kind":"param","name":"parent","id":"parent","line":"668"},{"ref":{"name":"Zone","refId":"dart.async/Zone"},"kind":"param","name":"zone","id":"zone","line":"668"},{"kind":"param","name":"error","id":"error","line":"668"},{"ref":{"name":"StackTrace","refId":"dart.core/StackTrace"},"kind":"param","name":"stackTrace","id":"stackTrace","line":"668"}],"isPrivate":true,"uri":"dart-sdk/lib/async/zone.dart","line":"667"},{"returnType":{"name":"Timer","refId":"dart.async/Timer"},"kind":"method","name":"_createPeriodicTimer","id":"_createPeriodicTimer2()","children":[{"ref":{"name":"Duration","refId":"dart.core/Duration"},"kind":"param","name":"duration","id":"duration"},{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"callback","id":"callback","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"Timer","refId":"dart.async/Timer"},"kind":"param","name":"timer","id":"timer","uri":"dart-sdk/lib/async/timer.dart","line":"100"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}],"line":"100"}],"isPrivate":true,"uri":"dart-sdk/lib/async/timer.dart","line":"99"},{"returnType":{"name":"Timer","refId":"dart.async/Timer"},"kind":"method","name":"_createTimer","id":"_createTimer2()","children":[{"ref":{"name":"Duration","refId":"dart.core/Duration"},"kind":"param","name":"duration","id":"duration"},{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"callback","id":"callback","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"isPrivate":true,"uri":"dart-sdk/lib/async/timer.dart","line":"98"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_cancelAndValue","id":"_cancelAndValue3()","comment":"Helper function to cancel a subscription and wait for the potential future,\n  before completing with a value. ","children":[{"ref":{"name":"StreamSubscription","refId":"dart.async/StreamSubscription"},"kind":"param","name":"subscription","id":"subscription"},{"ref":{"name":"_Future","refId":"dart.async/_Future"},"kind":"param","name":"future","id":"future"},{"kind":"param","name":"value","id":"value"}],"isPrivate":true,"uri":"dart-sdk/lib/async/stream_pipe.dart","line":"39"},{"kind":"method","name":"_cancelAndErrorClosure","id":"_cancelAndErrorClosure2()","comment":"Helper function to make an onError argument to [_runUserCode]. ","children":[{"ref":{"name":"StreamSubscription","refId":"dart.async/StreamSubscription"},"kind":"param","name":"subscription","id":"subscription"},{"ref":{"name":"_Future","refId":"dart.async/_Future"},"kind":"param","name":"future","id":"future"}],"isPrivate":true,"uri":"dart-sdk/lib/async/stream_pipe.dart","line":"33"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_cancelAndError","id":"_cancelAndError4()","comment":"Helper function to cancel a subscription and wait for the potential future,\n  before completing with an error. ","children":[{"ref":{"name":"StreamSubscription","refId":"dart.async/StreamSubscription"},"kind":"param","name":"subscription","id":"subscription"},{"ref":{"name":"_Future","refId":"dart.async/_Future"},"kind":"param","name":"future","id":"future","line":"21"},{"kind":"param","name":"error","id":"error","line":"22"},{"ref":{"name":"StackTrace","refId":"dart.core/StackTrace"},"kind":"param","name":"stackTrace","id":"stackTrace","line":"23"}],"isPrivate":true,"uri":"dart-sdk/lib/async/stream_pipe.dart","line":"20"},{"kind":"method","name":"_runUserCode","id":"_runUserCode3()","comment":"Runs user code and takes actions depending on success or failure. ","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"userCode","id":"userCode","children":[{"kind":"functiontype","name":"Function","id":"Function","uri":"dart-sdk/lib/core/function.dart","line":"13"}]},{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"onSuccess","id":"onSuccess","children":[{"kind":"functiontype","name":"Function","id":"Function","children":[{"kind":"param","name":"value","id":"value","uri":"dart-sdk/lib/async/stream_pipe.dart","line":"9"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}],"line":"9"},{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"onError","id":"onError","children":[{"kind":"functiontype","name":"Function","id":"Function","children":[{"kind":"param","name":"error","id":"error","uri":"dart-sdk/lib/async/stream_pipe.dart","line":"10"},{"ref":{"name":"StackTrace","refId":"dart.core/StackTrace"},"kind":"param","name":"stackTrace","id":"stackTrace","uri":"dart-sdk/lib/async/stream_pipe.dart","line":"10"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}],"line":"10"}],"isPrivate":true,"uri":"dart-sdk/lib/async/stream_pipe.dart","line":"8"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_nullDoneHandler","id":"_nullDoneHandler0()","comment":"Default done handler, does nothing. ","isPrivate":true,"uri":"dart-sdk/lib/async/stream_impl.dart","line":"569"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_nullErrorHandler","id":"_nullErrorHandler2()","comment":"Default error handler, reports the error to the current zone's handler. ","children":[{"kind":"param","name":"error","id":"error"},{"ref":{"name":"StackTrace","refId":"dart.core/StackTrace"},"isOptional":true,"kind":"param","name":"stackTrace","id":"stackTrace"}],"isPrivate":true,"uri":"dart-sdk/lib/async/stream_impl.dart","line":"564"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_nullDataHandler","id":"_nullDataHandler1()","comment":"Default data handler, does nothing. ","children":[{"kind":"param","name":"value","id":"value"}],"isPrivate":true,"uri":"dart-sdk/lib/async/stream_impl.dart","line":"561"},{"returnType":{"name":"Future","refId":"dart.async/Future"},"kind":"method","name":"_runGuarded","id":"_runGuarded1()","children":[{"ref":{"name":"_NotificationHandler","refId":"dart.async/_NotificationHandler"},"kind":"param","name":"notificationHandler","id":"notificationHandler"}],"isPrivate":true,"uri":"dart-sdk/lib/async/stream_controller.dart","line":"600"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"scheduleMicrotask","id":"scheduleMicrotask1()","comment":"\nRuns a function asynchronously.\n\nCallbacks registered through this function are always executed in order and\nare guaranteed to run before other asynchronous events (like [Timer] events,\nor DOM events).\n\n**Warning:** it is possible to starve the DOM by registering asynchronous\ncallbacks through this method. For example the following program runs\nthe callbacks without ever giving the Timer callback a chance to execute:\n\n    Timer.run(() { print(\"executed\"); });  // Will never be executed.\n    foo() {\n      scheduleMicrotask(foo);  // Schedules [foo] in front of other events.\n    }\n    main() {\n      foo();\n    }\n\n## Other resources\n\n* [The Event Loop and Dart](https://www.dartlang.org/articles/event-loop/):\nLearn how Dart handles the event queue and microtask queue, so you can write\nbetter asynchronous code with fewer surprises.\n","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"callback","id":"callback","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"uri":"dart-sdk/lib/async/schedule_microtask.dart","line":"63"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_scheduleAsyncCallback","id":"_scheduleAsyncCallback1()","children":[{"kind":"param","name":"callback","id":"callback"}],"isPrivate":true,"uri":"dart-sdk/lib/async/schedule_microtask.dart","line":"28"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_asyncRunCallback","id":"_asyncRunCallback0()","isPrivate":true,"uri":"dart-sdk/lib/async/schedule_microtask.dart","line":"12"},{"returnType":{"name":"Function","refId":"dart.core/Function"},"kind":"method","name":"_registerErrorHandler","id":"_registerErrorHandler2()","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"errorHandler","id":"errorHandler"},{"ref":{"name":"Zone","refId":"dart.async/Zone"},"kind":"param","name":"zone","id":"zone"}],"isPrivate":true,"uri":"dart-sdk/lib/async/async_error.dart","line":"16"},{"kind":"method","name":"_invokeErrorHandler","id":"_invokeErrorHandler3()","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"errorHandler","id":"errorHandler"},{"ref":{"name":"Object","refId":"dart.core/Object"},"kind":"param","name":"error","id":"error","line":"8"},{"ref":{"name":"StackTrace","refId":"dart.core/StackTrace"},"kind":"param","name":"stackTrace","id":"stackTrace","line":"8"}],"isPrivate":true,"uri":"dart-sdk/lib/async/async_error.dart","line":"7"},{"kind":"variable","name":"_ROOT_ZONE","id":"_ROOT_ZONE","isPrivate":true,"uri":"dart-sdk/lib/async/zone.dart","line":"861"},{"ref":{"name":"Queue","refId":"dart.collection/Queue","arguments":[{"name":"_AsyncCallback","refId":"dart.async/_AsyncCallback"}]},"kind":"variable","name":"_asyncCallbacks","id":"_asyncCallbacks","isPrivate":true,"uri":"dart-sdk/lib/async/schedule_microtask.dart","line":"10"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"variable","name":"_callbacksAreEnqueued","id":"_callbacksAreEnqueued","isPrivate":true,"uri":"dart-sdk/lib/async/schedule_microtask.dart","line":"9"},{"superclass":{"name":"_BaseZone","refId":"dart.async/_BaseZone"},"kind":"class","name":"_RootZone","id":"_RootZone","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"method","name":"inSameErrorZone","id":"inSameErrorZone1()","children":[{"ref":{"name":"Zone","refId":"dart.async/Zone"},"kind":"param","name":"otherZone","id":"otherZone"}],"line":"820"},{"isOperator":true,"kind":"method","name":"[]","id":"[]1()","children":[{"ref":{"name":"Symbol","refId":"dart.core/Symbol"},"kind":"param","name":"key","id":"key"}],"line":"822"},{"kind":"method","name":"handleUncaughtError","id":"handleUncaughtError2()","children":[{"kind":"param","name":"error","id":"error"},{"ref":{"name":"StackTrace","refId":"dart.core/StackTrace"},"kind":"param","name":"stackTrace","id":"stackTrace"}],"line":"826"},{"returnType":{"name":"Zone","refId":"dart.async/Zone"},"kind":"method","name":"fork","id":"fork2()","children":[{"ref":{"name":"ZoneSpecification","refId":"dart.async/ZoneSpecification"},"isOptional":true,"isNamed":true,"kind":"param","name":"specification","id":"specification"},{"ref":{"name":"Map","refId":"dart.core/Map"},"isOptional":true,"isNamed":true,"kind":"param","name":"zoneValues","id":"zoneValues"}],"line":"829"},{"kind":"method","name":"run","id":"run1()","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"f","id":"f","children":[{"kind":"functiontype","name":"Function","id":"Function","uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"832"},{"kind":"method","name":"runUnary","id":"runUnary2()","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"f","id":"f","children":[{"kind":"functiontype","name":"Function","id":"Function","children":[{"kind":"param","name":"arg","id":"arg","uri":"dart-sdk/lib/async/zone.dart","line":"834"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]},{"kind":"param","name":"arg","id":"arg"}],"line":"834"},{"kind":"method","name":"runBinary","id":"runBinary3()","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"f","id":"f","children":[{"kind":"functiontype","name":"Function","id":"Function","children":[{"kind":"param","name":"arg1","id":"arg1","uri":"dart-sdk/lib/async/zone.dart","line":"836"},{"kind":"param","name":"arg2","id":"arg2","uri":"dart-sdk/lib/async/zone.dart","line":"836"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]},{"kind":"param","name":"arg1","id":"arg1"},{"kind":"param","name":"arg2","id":"arg2"}],"line":"836"},{"returnType":{"name":"ZoneCallback","refId":"dart.async/ZoneCallback"},"kind":"method","name":"registerCallback","id":"registerCallback1()","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"f","id":"f","children":[{"kind":"functiontype","name":"Function","id":"Function","uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"839"},{"returnType":{"name":"ZoneUnaryCallback","refId":"dart.async/ZoneUnaryCallback"},"kind":"method","name":"registerUnaryCallback","id":"registerUnaryCallback1()","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"f","id":"f","children":[{"kind":"functiontype","name":"Function","id":"Function","children":[{"kind":"param","name":"arg","id":"arg","uri":"dart-sdk/lib/async/zone.dart","line":"842"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"842"},{"returnType":{"name":"ZoneBinaryCallback","refId":"dart.async/ZoneBinaryCallback"},"kind":"method","name":"registerBinaryCallback","id":"registerBinaryCallback1()","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"f","id":"f","children":[{"kind":"functiontype","name":"Function","id":"Function","children":[{"kind":"param","name":"arg1","id":"arg1","uri":"dart-sdk/lib/async/zone.dart","line":"845"},{"kind":"param","name":"arg2","id":"arg2","uri":"dart-sdk/lib/async/zone.dart","line":"845"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"845"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"scheduleMicrotask","id":"scheduleMicrotask1()","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"f","id":"f","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"848"},{"returnType":{"name":"Timer","refId":"dart.async/Timer"},"kind":"method","name":"createTimer","id":"createTimer2()","children":[{"ref":{"name":"Duration","refId":"dart.core/Duration"},"kind":"param","name":"duration","id":"duration"},{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"f","id":"f","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"852"},{"returnType":{"name":"Timer","refId":"dart.async/Timer"},"kind":"method","name":"createPeriodicTimer","id":"createPeriodicTimer2()","children":[{"ref":{"name":"Duration","refId":"dart.core/Duration"},"kind":"param","name":"duration","id":"duration"},{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"f","id":"f","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"Timer","refId":"dart.async/Timer"},"kind":"param","name":"timer","id":"timer","uri":"dart-sdk/lib/async/zone.dart","line":"855"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"855"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"print","id":"print1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"line","id":"line"}],"line":"858"},{"ref":{"name":"Zone","refId":"dart.async/Zone"},"kind":"property","name":"parent","id":"parent","line":"816"},{"ref":{"name":"ZoneSpecification","refId":"dart.async/ZoneSpecification"},"kind":"property","name":"_specification","id":"_specification","isPrivate":true,"line":"817"},{"ref":{"name":"Zone","refId":"dart.async/Zone"},"kind":"property","name":"_errorZone","id":"_errorZone","isPrivate":true,"line":"818"},{"kind":"constructor","name":"","id":"0()","line":"814"}],"isPrivate":true,"uri":"dart-sdk/lib/async/zone.dart","line":"813"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"interfaces":[{"name":"ZoneSpecification","refId":"dart.async/ZoneSpecification"}],"kind":"class","name":"_RootZoneSpecification","id":"_RootZoneSpecification","children":[{"ref":{"name":"HandleUncaughtErrorHandler","refId":"dart.async/HandleUncaughtErrorHandler"},"kind":"property","name":"handleUncaughtError","id":"handleUncaughtError","line":"795"},{"ref":{"name":"RunHandler","refId":"dart.async/RunHandler"},"kind":"property","name":"run","id":"run","line":"797"},{"ref":{"name":"RunUnaryHandler","refId":"dart.async/RunUnaryHandler"},"kind":"property","name":"runUnary","id":"runUnary","line":"798"},{"ref":{"name":"RunBinaryHandler","refId":"dart.async/RunBinaryHandler"},"kind":"property","name":"runBinary","id":"runBinary","line":"799"},{"ref":{"name":"RegisterCallbackHandler","refId":"dart.async/RegisterCallbackHandler"},"kind":"property","name":"registerCallback","id":"registerCallback","line":"800"},{"ref":{"name":"RegisterUnaryCallbackHandler","refId":"dart.async/RegisterUnaryCallbackHandler"},"kind":"property","name":"registerUnaryCallback","id":"registerUnaryCallback","line":"801"},{"ref":{"name":"RegisterBinaryCallbackHandler","refId":"dart.async/RegisterBinaryCallbackHandler"},"kind":"property","name":"registerBinaryCallback","id":"registerBinaryCallback","line":"803"},{"ref":{"name":"ScheduleMicrotaskHandler","refId":"dart.async/ScheduleMicrotaskHandler"},"kind":"property","name":"scheduleMicrotask","id":"scheduleMicrotask","line":"805"},{"ref":{"name":"CreateTimerHandler","refId":"dart.async/CreateTimerHandler"},"kind":"property","name":"createTimer","id":"createTimer","line":"806"},{"ref":{"name":"CreatePeriodicTimerHandler","refId":"dart.async/CreatePeriodicTimerHandler"},"kind":"property","name":"createPeriodicTimer","id":"createPeriodicTimer","line":"807"},{"ref":{"name":"PrintHandler","refId":"dart.async/PrintHandler"},"kind":"property","name":"print","id":"print","line":"809"},{"ref":{"name":"ForkHandler","refId":"dart.async/ForkHandler"},"kind":"property","name":"fork","id":"fork","line":"810"},{"kind":"constructor","name":"","id":"0()","line":"793"}],"isPrivate":true,"uri":"dart-sdk/lib/async/zone.dart","line":"792"},{"superclass":{"name":"_BaseZone","refId":"dart.async/_BaseZone"},"kind":"class","name":"_CustomizedZone","id":"_CustomizedZone","comment":"\nDefault implementation of a [Zone].\n","children":[{"isOperator":true,"kind":"method","name":"[]","id":"[]1()","children":[{"ref":{"name":"Symbol","refId":"dart.core/Symbol"},"kind":"param","name":"key","id":"key"}],"line":"607"},{"kind":"method","name":"handleUncaughtError","id":"handleUncaughtError2()","children":[{"kind":"param","name":"error","id":"error"},{"ref":{"name":"StackTrace","refId":"dart.core/StackTrace"},"kind":"param","name":"stackTrace","id":"stackTrace"}],"line":"618"},{"returnType":{"name":"Zone","refId":"dart.async/Zone"},"kind":"method","name":"fork","id":"fork2()","children":[{"ref":{"name":"ZoneSpecification","refId":"dart.async/ZoneSpecification"},"isOptional":true,"isNamed":true,"kind":"param","name":"specification","id":"specification"},{"ref":{"name":"Map","refId":"dart.core/Map"},"isOptional":true,"isNamed":true,"kind":"param","name":"zoneValues","id":"zoneValues"}],"line":"622"},{"kind":"method","name":"run","id":"run1()","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"f","id":"f","children":[{"kind":"functiontype","name":"Function","id":"Function","uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"626"},{"kind":"method","name":"runUnary","id":"runUnary2()","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"f","id":"f","children":[{"kind":"functiontype","name":"Function","id":"Function","children":[{"kind":"param","name":"arg","id":"arg","uri":"dart-sdk/lib/async/zone.dart","line":"630"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]},{"kind":"param","name":"arg","id":"arg"}],"line":"630"},{"kind":"method","name":"runBinary","id":"runBinary3()","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"f","id":"f","children":[{"kind":"functiontype","name":"Function","id":"Function","children":[{"kind":"param","name":"arg1","id":"arg1","uri":"dart-sdk/lib/async/zone.dart","line":"634"},{"kind":"param","name":"arg2","id":"arg2","uri":"dart-sdk/lib/async/zone.dart","line":"634"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]},{"kind":"param","name":"arg1","id":"arg1"},{"kind":"param","name":"arg2","id":"arg2"}],"line":"634"},{"returnType":{"name":"ZoneCallback","refId":"dart.async/ZoneCallback"},"kind":"method","name":"registerCallback","id":"registerCallback1()","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"f","id":"f","children":[{"kind":"functiontype","name":"Function","id":"Function","uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"638"},{"returnType":{"name":"ZoneUnaryCallback","refId":"dart.async/ZoneUnaryCallback"},"kind":"method","name":"registerUnaryCallback","id":"registerUnaryCallback1()","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"f","id":"f","children":[{"kind":"functiontype","name":"Function","id":"Function","children":[{"kind":"param","name":"arg","id":"arg","uri":"dart-sdk/lib/async/zone.dart","line":"642"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"642"},{"returnType":{"name":"ZoneBinaryCallback","refId":"dart.async/ZoneBinaryCallback"},"kind":"method","name":"registerBinaryCallback","id":"registerBinaryCallback1()","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"f","id":"f","children":[{"kind":"functiontype","name":"Function","id":"Function","children":[{"kind":"param","name":"arg1","id":"arg1","uri":"dart-sdk/lib/async/zone.dart","line":"646"},{"kind":"param","name":"arg2","id":"arg2","uri":"dart-sdk/lib/async/zone.dart","line":"646"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"646"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"scheduleMicrotask","id":"scheduleMicrotask1()","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"f","id":"f","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"650"},{"returnType":{"name":"Timer","refId":"dart.async/Timer"},"kind":"method","name":"createTimer","id":"createTimer2()","children":[{"ref":{"name":"Duration","refId":"dart.core/Duration"},"kind":"param","name":"duration","id":"duration"},{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"f","id":"f","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"654"},{"returnType":{"name":"Timer","refId":"dart.async/Timer"},"kind":"method","name":"createPeriodicTimer","id":"createPeriodicTimer2()","children":[{"ref":{"name":"Duration","refId":"dart.core/Duration"},"kind":"param","name":"duration","id":"duration"},{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"f","id":"f","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"Timer","refId":"dart.async/Timer"},"kind":"param","name":"timer","id":"timer","uri":"dart-sdk/lib/async/zone.dart","line":"658"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"658"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"print","id":"print1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"line","id":"line"}],"line":"662"},{"ref":{"name":"Zone","refId":"dart.async/Zone"},"kind":"property","name":"_errorZone","id":"_errorZone","isPrivate":true,"line":"602"},{"ref":{"name":"_BaseZone","refId":"dart.async/_BaseZone"},"isFinal":true,"kind":"variable","name":"parent","id":"parent","line":"594"},{"ref":{"name":"ZoneSpecification","refId":"dart.async/ZoneSpecification"},"isFinal":true,"kind":"variable","name":"_specification","id":"_specification","isPrivate":true,"line":"595"},{"ref":{"name":"Map","refId":"dart.core/Map","arguments":[{"name":"Symbol","refId":"dart.core/Symbol"}]},"isFinal":true,"kind":"variable","name":"_map","id":"_map","comment":"The zone's value map.","isPrivate":true,"line":"598"},{"kind":"constructor","name":"","id":"3()","children":[{"ref":{"name":"_BaseZone","refId":"dart.async/_BaseZone"},"initializedField":{"name":"parent","refId":"dart.async/_CustomizedZone/parent"},"kind":"param","name":"parent","id":"parent"},{"ref":{"name":"ZoneSpecification","refId":"dart.async/ZoneSpecification"},"initializedField":{"name":"_specification","refId":"dart.async/_CustomizedZone/_specification"},"kind":"param","name":"_specification","id":"_specification","isPrivate":true},{"ref":{"name":"Map","refId":"dart.core/Map","arguments":[{"name":"Symbol","refId":"dart.core/Symbol"}]},"initializedField":{"name":"_map","refId":"dart.async/_CustomizedZone/_map"},"kind":"param","name":"_map","id":"_map","isPrivate":true}],"line":"600"}],"isPrivate":true,"uri":"dart-sdk/lib/async/zone.dart","line":"593"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"interfaces":[{"name":"Zone","refId":"dart.async/Zone"}],"kind":"class","name":"_BaseZone","id":"_BaseZone","comment":"\nBase class for Zone implementations.\n","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"method","name":"inSameErrorZone","id":"inSameErrorZone1()","children":[{"ref":{"name":"Zone","refId":"dart.async/Zone"},"kind":"param","name":"otherZone","id":"otherZone"}],"line":"534"},{"kind":"method","name":"runGuarded","id":"runGuarded1()","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"f","id":"f","children":[{"kind":"functiontype","name":"Function","id":"Function","uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"536"},{"kind":"method","name":"runUnaryGuarded","id":"runUnaryGuarded2()","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"f","id":"f","children":[{"kind":"functiontype","name":"Function","id":"Function","children":[{"kind":"param","name":"arg","id":"arg","uri":"dart-sdk/lib/async/zone.dart","line":"544"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]},{"kind":"param","name":"arg","id":"arg"}],"line":"544"},{"kind":"method","name":"runBinaryGuarded","id":"runBinaryGuarded3()","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"f","id":"f","children":[{"kind":"functiontype","name":"Function","id":"Function","children":[{"kind":"param","name":"arg1","id":"arg1","uri":"dart-sdk/lib/async/zone.dart","line":"552"},{"kind":"param","name":"arg2","id":"arg2","uri":"dart-sdk/lib/async/zone.dart","line":"552"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]},{"kind":"param","name":"arg1","id":"arg1"},{"kind":"param","name":"arg2","id":"arg2"}],"line":"552"},{"returnType":{"name":"ZoneCallback","refId":"dart.async/ZoneCallback"},"kind":"method","name":"bindCallback","id":"bindCallback2()","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"f","id":"f","children":[{"kind":"functiontype","name":"Function","id":"Function","uri":"dart-sdk/lib/core/function.dart","line":"13"}]},{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"true","isOptional":true,"isNamed":true,"kind":"param","name":"runGuarded","id":"runGuarded"}],"line":"560"},{"returnType":{"name":"ZoneUnaryCallback","refId":"dart.async/ZoneUnaryCallback"},"kind":"method","name":"bindUnaryCallback","id":"bindUnaryCallback2()","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"f","id":"f","children":[{"kind":"functiontype","name":"Function","id":"Function","children":[{"kind":"param","name":"arg","id":"arg","uri":"dart-sdk/lib/async/zone.dart","line":"569"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]},{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"true","isOptional":true,"isNamed":true,"kind":"param","name":"runGuarded","id":"runGuarded"}],"line":"569"},{"returnType":{"name":"ZoneBinaryCallback","refId":"dart.async/ZoneBinaryCallback"},"kind":"method","name":"bindBinaryCallback","id":"bindBinaryCallback2()","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"f","id":"f","children":[{"kind":"functiontype","name":"Function","id":"Function","children":[{"kind":"param","name":"arg1","id":"arg1","uri":"dart-sdk/lib/async/zone.dart","line":"579"},{"kind":"param","name":"arg2","id":"arg2","uri":"dart-sdk/lib/async/zone.dart","line":"579"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}],"line":"579"},{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"true","isOptional":true,"isNamed":true,"kind":"param","name":"runGuarded","id":"runGuarded","line":"579"}],"line":"578"},{"ref":{"name":"_BaseZone","refId":"dart.async/_BaseZone"},"kind":"property","name":"parent","id":"parent","comment":"The parent zone.","line":"523"},{"ref":{"name":"ZoneSpecification","refId":"dart.async/ZoneSpecification"},"kind":"property","name":"_specification","id":"_specification","comment":"The zone's handlers.","isPrivate":true,"line":"525"},{"ref":{"name":"Zone","refId":"dart.async/Zone"},"kind":"property","name":"_errorZone","id":"_errorZone","comment":"\nThe closest error-handling zone.\n\nReturns `this` if `this` has an error-handler. Otherwise returns the\nparent's error-zone.\n","isPrivate":true,"line":"532"},{"kind":"constructor","name":"","id":"0()","line":"520"}],"isPrivate":true,"uri":"dart-sdk/lib/async/zone.dart","line":"519"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"interfaces":[{"name":"ZoneDelegate","refId":"dart.async/ZoneDelegate"}],"kind":"class","name":"_ZoneDelegate","id":"_ZoneDelegate","children":[{"kind":"method","name":"handleUncaughtError","id":"handleUncaughtError3()","children":[{"ref":{"name":"Zone","refId":"dart.async/Zone"},"kind":"param","name":"zone","id":"zone"},{"kind":"param","name":"error","id":"error"},{"ref":{"name":"StackTrace","refId":"dart.core/StackTrace"},"kind":"param","name":"stackTrace","id":"stackTrace"}],"line":"403"},{"kind":"method","name":"run","id":"run2()","children":[{"ref":{"name":"Zone","refId":"dart.async/Zone"},"kind":"param","name":"zone","id":"zone"},{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"f","id":"f","children":[{"kind":"functiontype","name":"Function","id":"Function","uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"412"},{"kind":"method","name":"runUnary","id":"runUnary3()","children":[{"ref":{"name":"Zone","refId":"dart.async/Zone"},"kind":"param","name":"zone","id":"zone"},{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"f","id":"f","children":[{"kind":"functiontype","name":"Function","id":"Function","children":[{"kind":"param","name":"arg","id":"arg","uri":"dart-sdk/lib/async/zone.dart","line":"421"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]},{"kind":"param","name":"arg","id":"arg"}],"line":"421"},{"kind":"method","name":"runBinary","id":"runBinary4()","children":[{"ref":{"name":"Zone","refId":"dart.async/Zone"},"kind":"param","name":"zone","id":"zone"},{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"f","id":"f","children":[{"kind":"functiontype","name":"Function","id":"Function","children":[{"kind":"param","name":"arg1","id":"arg1","uri":"dart-sdk/lib/async/zone.dart","line":"430"},{"kind":"param","name":"arg2","id":"arg2","uri":"dart-sdk/lib/async/zone.dart","line":"430"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]},{"kind":"param","name":"arg1","id":"arg1"},{"kind":"param","name":"arg2","id":"arg2"}],"line":"430"},{"returnType":{"name":"ZoneCallback","refId":"dart.async/ZoneCallback"},"kind":"method","name":"registerCallback","id":"registerCallback2()","children":[{"ref":{"name":"Zone","refId":"dart.async/Zone"},"kind":"param","name":"zone","id":"zone"},{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"f","id":"f","children":[{"kind":"functiontype","name":"Function","id":"Function","uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"439"},{"returnType":{"name":"ZoneUnaryCallback","refId":"dart.async/ZoneUnaryCallback"},"kind":"method","name":"registerUnaryCallback","id":"registerUnaryCallback2()","children":[{"ref":{"name":"Zone","refId":"dart.async/Zone"},"kind":"param","name":"zone","id":"zone"},{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"f","id":"f","children":[{"kind":"functiontype","name":"Function","id":"Function","children":[{"kind":"param","name":"arg","id":"arg","uri":"dart-sdk/lib/async/zone.dart","line":"448"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"448"},{"returnType":{"name":"ZoneBinaryCallback","refId":"dart.async/ZoneBinaryCallback"},"kind":"method","name":"registerBinaryCallback","id":"registerBinaryCallback2()","children":[{"ref":{"name":"Zone","refId":"dart.async/Zone"},"kind":"param","name":"zone","id":"zone"},{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"f","id":"f","children":[{"kind":"functiontype","name":"Function","id":"Function","children":[{"kind":"param","name":"arg1","id":"arg1","uri":"dart-sdk/lib/async/zone.dart","line":"457"},{"kind":"param","name":"arg2","id":"arg2","uri":"dart-sdk/lib/async/zone.dart","line":"457"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"457"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"scheduleMicrotask","id":"scheduleMicrotask2()","children":[{"ref":{"name":"Zone","refId":"dart.async/Zone"},"kind":"param","name":"zone","id":"zone"},{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"f","id":"f","children":[{"kind":"functiontype","name":"Function","id":"Function","uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"466"},{"returnType":{"name":"Timer","refId":"dart.async/Timer"},"kind":"method","name":"createTimer","id":"createTimer3()","children":[{"ref":{"name":"Zone","refId":"dart.async/Zone"},"kind":"param","name":"zone","id":"zone"},{"ref":{"name":"Duration","refId":"dart.core/Duration"},"kind":"param","name":"duration","id":"duration"},{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"f","id":"f","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"476"},{"returnType":{"name":"Timer","refId":"dart.async/Timer"},"kind":"method","name":"createPeriodicTimer","id":"createPeriodicTimer3()","children":[{"ref":{"name":"Zone","refId":"dart.async/Zone"},"kind":"param","name":"zone","id":"zone"},{"ref":{"name":"Duration","refId":"dart.core/Duration"},"kind":"param","name":"period","id":"period"},{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"f","id":"f","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"Timer","refId":"dart.async/Timer"},"kind":"param","name":"timer","id":"timer","uri":"dart-sdk/lib/async/zone.dart","line":"485"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"485"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"print","id":"print2()","children":[{"ref":{"name":"Zone","refId":"dart.async/Zone"},"kind":"param","name":"zone","id":"zone"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"line","id":"line"}],"line":"494"},{"returnType":{"name":"Zone","refId":"dart.async/Zone"},"kind":"method","name":"fork","id":"fork3()","children":[{"ref":{"name":"Zone","refId":"dart.async/Zone"},"kind":"param","name":"zone","id":"zone"},{"ref":{"name":"ZoneSpecification","refId":"dart.async/ZoneSpecification"},"kind":"param","name":"specification","id":"specification"},{"ref":{"name":"Map","refId":"dart.core/Map","arguments":[{"name":"Symbol","refId":"dart.core/Symbol"}]},"kind":"param","name":"zoneValues","id":"zoneValues","line":"504"}],"line":"503"},{"ref":{"name":"Zone","refId":"dart.async/Zone"},"kind":"property","name":"_zone","id":"_zone","isPrivate":true,"line":"399"},{"ref":{"name":"_BaseZone","refId":"dart.async/_BaseZone"},"isFinal":true,"kind":"variable","name":"_degelationTarget","id":"_degelationTarget","isPrivate":true,"line":"397"},{"kind":"constructor","name":"","id":"1()","children":[{"ref":{"name":"_BaseZone","refId":"dart.async/_BaseZone"},"initializedField":{"name":"_degelationTarget","refId":"dart.async/_ZoneDelegate/_degelationTarget"},"kind":"param","name":"_degelationTarget","id":"_degelationTarget","isPrivate":true}],"line":"401"}],"isPrivate":true,"uri":"dart-sdk/lib/async/zone.dart","line":"396"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"kind":"class","name":"Zone","id":"Zone","comment":"\nA Zone represents the asynchronous version of a dynamic extent. Asynchronous\ncallbacks are executed in the zone they have been queued in. For example,\nthe callback of a `future.then` is executed in the same zone as the one where\nthe `then` was invoked.\n","children":[{"kind":"method","name":"handleUncaughtError","id":"handleUncaughtError2()","children":[{"kind":"param","name":"error","id":"error"},{"ref":{"name":"StackTrace","refId":"dart.core/StackTrace"},"kind":"param","name":"stackTrace","id":"stackTrace"}],"line":"239"},{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"method","name":"inSameErrorZone","id":"inSameErrorZone1()","comment":"\nReturns true if `this` and [otherZone] are in the same error zone.\n\nTwo zones are in the same error zone if they share the same\n[handleUncaughtError] callback.\n","children":[{"ref":{"name":"Zone","refId":"dart.async/Zone"},"kind":"param","name":"otherZone","id":"otherZone"}],"line":"254"},{"returnType":{"name":"Zone","refId":"dart.async/Zone"},"kind":"method","name":"fork","id":"fork2()","comment":"\nCreates a new zone as a child of `this`.\n","children":[{"ref":{"name":"ZoneSpecification","refId":"dart.async/ZoneSpecification"},"isOptional":true,"isNamed":true,"kind":"param","name":"specification","id":"specification"},{"ref":{"name":"Map","refId":"dart.core/Map","arguments":[{"name":"Symbol","refId":"dart.core/Symbol"}]},"isOptional":true,"isNamed":true,"kind":"param","name":"zoneValues","id":"zoneValues","line":"260"}],"line":"259"},{"kind":"method","name":"run","id":"run1()","comment":"\nExecutes the given function [f] in this zone.\n","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"f","id":"f","children":[{"kind":"functiontype","name":"Function","id":"Function","uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"265"},{"kind":"method","name":"runUnary","id":"runUnary2()","comment":"\nExecutes the given callback [f] with argument [arg] in this zone.\n","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"f","id":"f","children":[{"kind":"functiontype","name":"Function","id":"Function","children":[{"kind":"param","name":"arg","id":"arg","uri":"dart-sdk/lib/async/zone.dart","line":"270"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]},{"kind":"param","name":"arg","id":"arg"}],"line":"270"},{"kind":"method","name":"runBinary","id":"runBinary3()","comment":"\nExecutes the given callback [f] with argument [arg1] and [arg2] in this\nzone.\n","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"f","id":"f","children":[{"kind":"functiontype","name":"Function","id":"Function","children":[{"kind":"param","name":"arg1","id":"arg1","uri":"dart-sdk/lib/async/zone.dart","line":"276"},{"kind":"param","name":"arg2","id":"arg2","uri":"dart-sdk/lib/async/zone.dart","line":"276"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]},{"kind":"param","name":"arg1","id":"arg1"},{"kind":"param","name":"arg2","id":"arg2"}],"line":"276"},{"kind":"method","name":"runGuarded","id":"runGuarded1()","comment":"\nExecutes the given function [f] in this zone.\n\nSame as [run] but catches uncaught errors and gives them to\n[handleUncaughtError].\n","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"f","id":"f","children":[{"kind":"functiontype","name":"Function","id":"Function","uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"284"},{"kind":"method","name":"runUnaryGuarded","id":"runUnaryGuarded2()","comment":"\nExecutes the given callback [f] in this zone.\n\nSame as [runUnary] but catches uncaught errors and gives them to\n[handleUncaughtError].\n","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"f","id":"f","children":[{"kind":"functiontype","name":"Function","id":"Function","children":[{"kind":"param","name":"arg","id":"arg","uri":"dart-sdk/lib/async/zone.dart","line":"292"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]},{"kind":"param","name":"arg","id":"arg"}],"line":"292"},{"kind":"method","name":"runBinaryGuarded","id":"runBinaryGuarded3()","comment":"\nExecutes the given callback [f] in this zone.\n\nSame as [runBinary] but catches uncaught errors and gives them to\n[handleUncaughtError].\n","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"f","id":"f","children":[{"kind":"functiontype","name":"Function","id":"Function","children":[{"kind":"param","name":"arg1","id":"arg1","uri":"dart-sdk/lib/async/zone.dart","line":"300"},{"kind":"param","name":"arg2","id":"arg2","uri":"dart-sdk/lib/async/zone.dart","line":"300"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]},{"kind":"param","name":"arg1","id":"arg1"},{"kind":"param","name":"arg2","id":"arg2"}],"line":"300"},{"returnType":{"name":"ZoneCallback","refId":"dart.async/ZoneCallback"},"kind":"method","name":"registerCallback","id":"registerCallback1()","comment":"\nRegisters the given callback in this zone.\n\nIt is good practice to register asynchronous or delayed callbacks before\ninvoking [run]. This gives the zone a chance to wrap the callback and\nto store information with the callback. For example, a zone may decide\nto store the stack trace (at the time of the registration) with the\ncallback.\n\nReturns a potentially new callback that should be used in place of the\ngiven [callback].\n","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"callback","id":"callback","children":[{"kind":"functiontype","name":"Function","id":"Function","uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"314"},{"returnType":{"name":"ZoneUnaryCallback","refId":"dart.async/ZoneUnaryCallback"},"kind":"method","name":"registerUnaryCallback","id":"registerUnaryCallback1()","comment":"\nRegisters the given callback in this zone.\n\nSimilar to [registerCallback] but with a unary callback.\n","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"callback","id":"callback","children":[{"kind":"functiontype","name":"Function","id":"Function","children":[{"kind":"param","name":"arg","id":"arg","uri":"dart-sdk/lib/async/zone.dart","line":"321"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"321"},{"returnType":{"name":"ZoneBinaryCallback","refId":"dart.async/ZoneBinaryCallback"},"kind":"method","name":"registerBinaryCallback","id":"registerBinaryCallback1()","comment":"\nRegisters the given callback in this zone.\n\nSimilar to [registerCallback] but with a unary callback.\n","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"callback","id":"callback","children":[{"kind":"functiontype","name":"Function","id":"Function","children":[{"kind":"param","name":"arg1","id":"arg1","uri":"dart-sdk/lib/async/zone.dart","line":"328"},{"kind":"param","name":"arg2","id":"arg2","uri":"dart-sdk/lib/async/zone.dart","line":"328"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"328"},{"returnType":{"name":"ZoneCallback","refId":"dart.async/ZoneCallback"},"kind":"method","name":"bindCallback","id":"bindCallback2()","comment":"\n Equivalent to:\n\n     ZoneCallback registered = registerCallback(f);\n     if (runGuarded) return () => this.runGuarded(registered);\n     return () => this.run(registered);\n\n","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"f","id":"f","children":[{"kind":"functiontype","name":"Function","id":"Function","uri":"dart-sdk/lib/core/function.dart","line":"13"}]},{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"true","isOptional":true,"isNamed":true,"kind":"param","name":"runGuarded","id":"runGuarded"}],"line":"338"},{"returnType":{"name":"ZoneUnaryCallback","refId":"dart.async/ZoneUnaryCallback"},"kind":"method","name":"bindUnaryCallback","id":"bindUnaryCallback2()","comment":"\n Equivalent to:\n\n     ZoneCallback registered = registerUnaryCallback(f);\n     if (runGuarded) return (arg) => this.runUnaryGuarded(registered, arg);\n     return (arg) => thin.runUnary(registered, arg);\n","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"f","id":"f","children":[{"kind":"functiontype","name":"Function","id":"Function","children":[{"kind":"param","name":"arg","id":"arg","uri":"dart-sdk/lib/async/zone.dart","line":"347"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]},{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"true","isOptional":true,"isNamed":true,"kind":"param","name":"runGuarded","id":"runGuarded"}],"line":"347"},{"returnType":{"name":"ZoneBinaryCallback","refId":"dart.async/ZoneBinaryCallback"},"kind":"method","name":"bindBinaryCallback","id":"bindBinaryCallback2()","comment":"\n Equivalent to:\n\n     ZoneCallback registered = registerBinaryCallback(f);\n     if (runGuarded) {\n       return (arg1, arg2) => this.runBinaryGuarded(registered, arg);\n     }\n     return (arg1, arg2) => thin.runBinary(registered, arg1, arg2);\n","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"f","id":"f","children":[{"kind":"functiontype","name":"Function","id":"Function","children":[{"kind":"param","name":"arg1","id":"arg1","uri":"dart-sdk/lib/async/zone.dart","line":"359"},{"kind":"param","name":"arg2","id":"arg2","uri":"dart-sdk/lib/async/zone.dart","line":"359"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}],"line":"359"},{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"true","isOptional":true,"isNamed":true,"kind":"param","name":"runGuarded","id":"runGuarded","line":"359"}],"line":"358"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"scheduleMicrotask","id":"scheduleMicrotask1()","comment":"\nRuns [f] asynchronously in this zone.\n","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"f","id":"f","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"364"},{"returnType":{"name":"Timer","refId":"dart.async/Timer"},"kind":"method","name":"createTimer","id":"createTimer2()","comment":"\nCreates a Timer where the callback is executed in this zone.\n","children":[{"ref":{"name":"Duration","refId":"dart.core/Duration"},"kind":"param","name":"duration","id":"duration"},{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"callback","id":"callback","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"369"},{"returnType":{"name":"Timer","refId":"dart.async/Timer"},"kind":"method","name":"createPeriodicTimer","id":"createPeriodicTimer2()","comment":"\nCreates a periodic Timer where the callback is executed in this zone.\n","children":[{"ref":{"name":"Duration","refId":"dart.core/Duration"},"kind":"param","name":"period","id":"period"},{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"callback","id":"callback","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"Timer","refId":"dart.async/Timer"},"kind":"param","name":"timer","id":"timer","uri":"dart-sdk/lib/async/zone.dart","line":"374"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"374"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"print","id":"print1()","comment":"\nPrints the given [line].\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"line","id":"line"}],"line":"379"},{"isOperator":true,"kind":"method","name":"[]","id":"[]1()","comment":"\nRetrieves the zone-value associated with [key].\n\nIf this zone does not contain the value looks up the same key in the\nparent zone. If the [key] is not found returns `null`.\n","children":[{"ref":{"name":"Symbol","refId":"dart.core/Symbol"},"kind":"param","name":"key","id":"key"}],"line":"393"},{"ref":{"name":"Zone","refId":"dart.async/Zone"},"isStatic":true,"kind":"property","name":"current","id":"current","line":"237"},{"ref":{"name":"Zone","refId":"dart.async/Zone"},"kind":"property","name":"parent","id":"parent","comment":"\nReturns the parent zone.\n\nReturns `null` if `this` is the [ROOT] zone.\n","line":"246"},{"ref":{"name":"Zone","refId":"dart.async/Zone"},"kind":"property","name":"_errorZone","id":"_errorZone","comment":"\nThe error zone is the one that is responsible for dealing with uncaught\nerrors. Errors are not allowed to cross zones with different error-zones.\n","isPrivate":true,"line":"385"},{"ref":{"name":"Zone","refId":"dart.async/Zone"},"isStatic":true,"kind":"variable","name":"ROOT","id":"ROOT","comment":"The root zone that is implicitly created.","line":"232"},{"ref":{"name":"Zone","refId":"dart.async/Zone"},"isStatic":true,"kind":"variable","name":"_current","id":"_current","comment":"The currently running zone.","isPrivate":true,"line":"235"},{"kind":"constructor","name":"_","id":"_0()","isPrivate":true,"line":"229"}],"uri":"dart-sdk/lib/async/zone.dart","line":"227"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"kind":"class","name":"ZoneDelegate","id":"ZoneDelegate","comment":"\nThis class wraps zones for delegation.\n\nWhen forwarding to parent zones one can't just invoke the parent zone's\nexposed functions (like [Zone.run]), but one needs to provide more\ninformation (like the zone the `run` was initiated). Zone callbacks thus\nreceive more information including this [ZoneDelegate] class. When delegating\nto the parent zone one should go through the given instance instead of\ndirectly invoking the parent zone.\n","children":[{"kind":"method","name":"handleUncaughtError","id":"handleUncaughtError3()","children":[{"ref":{"name":"Zone","refId":"dart.async/Zone"},"kind":"param","name":"zone","id":"zone"},{"kind":"param","name":"error","id":"error"},{"ref":{"name":"StackTrace","refId":"dart.core/StackTrace"},"kind":"param","name":"stackTrace","id":"stackTrace"}],"line":"207"},{"kind":"method","name":"run","id":"run2()","children":[{"ref":{"name":"Zone","refId":"dart.async/Zone"},"kind":"param","name":"zone","id":"zone"},{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"f","id":"f","children":[{"kind":"functiontype","name":"Function","id":"Function","uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"208"},{"kind":"method","name":"runUnary","id":"runUnary3()","children":[{"ref":{"name":"Zone","refId":"dart.async/Zone"},"kind":"param","name":"zone","id":"zone"},{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"f","id":"f","children":[{"kind":"functiontype","name":"Function","id":"Function","children":[{"kind":"param","name":"arg","id":"arg","uri":"dart-sdk/lib/async/zone.dart","line":"209"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]},{"kind":"param","name":"arg","id":"arg"}],"line":"209"},{"kind":"method","name":"runBinary","id":"runBinary4()","children":[{"ref":{"name":"Zone","refId":"dart.async/Zone"},"kind":"param","name":"zone","id":"zone"},{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"f","id":"f","children":[{"kind":"functiontype","name":"Function","id":"Function","children":[{"kind":"param","name":"arg1","id":"arg1","uri":"dart-sdk/lib/async/zone.dart","line":"210"},{"kind":"param","name":"arg2","id":"arg2","uri":"dart-sdk/lib/async/zone.dart","line":"210"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]},{"kind":"param","name":"arg1","id":"arg1"},{"kind":"param","name":"arg2","id":"arg2"}],"line":"210"},{"returnType":{"name":"ZoneCallback","refId":"dart.async/ZoneCallback"},"kind":"method","name":"registerCallback","id":"registerCallback2()","children":[{"ref":{"name":"Zone","refId":"dart.async/Zone"},"kind":"param","name":"zone","id":"zone"},{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"f","id":"f","children":[{"kind":"functiontype","name":"Function","id":"Function","uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"211"},{"returnType":{"name":"ZoneUnaryCallback","refId":"dart.async/ZoneUnaryCallback"},"kind":"method","name":"registerUnaryCallback","id":"registerUnaryCallback2()","children":[{"ref":{"name":"Zone","refId":"dart.async/Zone"},"kind":"param","name":"zone","id":"zone"},{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"f","id":"f","children":[{"kind":"functiontype","name":"Function","id":"Function","children":[{"kind":"param","name":"arg","id":"arg","uri":"dart-sdk/lib/async/zone.dart","line":"212"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"212"},{"returnType":{"name":"ZoneBinaryCallback","refId":"dart.async/ZoneBinaryCallback"},"kind":"method","name":"registerBinaryCallback","id":"registerBinaryCallback2()","children":[{"ref":{"name":"Zone","refId":"dart.async/Zone"},"kind":"param","name":"zone","id":"zone"},{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"f","id":"f","children":[{"kind":"functiontype","name":"Function","id":"Function","children":[{"kind":"param","name":"arg1","id":"arg1","uri":"dart-sdk/lib/async/zone.dart","line":"213"},{"kind":"param","name":"arg2","id":"arg2","uri":"dart-sdk/lib/async/zone.dart","line":"213"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"213"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"scheduleMicrotask","id":"scheduleMicrotask2()","children":[{"ref":{"name":"Zone","refId":"dart.async/Zone"},"kind":"param","name":"zone","id":"zone"},{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"f","id":"f","children":[{"kind":"functiontype","name":"Function","id":"Function","uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"214"},{"returnType":{"name":"Timer","refId":"dart.async/Timer"},"kind":"method","name":"createTimer","id":"createTimer3()","children":[{"ref":{"name":"Zone","refId":"dart.async/Zone"},"kind":"param","name":"zone","id":"zone"},{"ref":{"name":"Duration","refId":"dart.core/Duration"},"kind":"param","name":"duration","id":"duration"},{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"f","id":"f","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"215"},{"returnType":{"name":"Timer","refId":"dart.async/Timer"},"kind":"method","name":"createPeriodicTimer","id":"createPeriodicTimer3()","children":[{"ref":{"name":"Zone","refId":"dart.async/Zone"},"kind":"param","name":"zone","id":"zone"},{"ref":{"name":"Duration","refId":"dart.core/Duration"},"kind":"param","name":"period","id":"period"},{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"f","id":"f","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"Timer","refId":"dart.async/Timer"},"kind":"param","name":"timer","id":"timer","uri":"dart-sdk/lib/async/zone.dart","line":"216"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"216"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"print","id":"print2()","children":[{"ref":{"name":"Zone","refId":"dart.async/Zone"},"kind":"param","name":"zone","id":"zone"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"line","id":"line"}],"line":"217"},{"returnType":{"name":"Zone","refId":"dart.async/Zone"},"kind":"method","name":"fork","id":"fork3()","children":[{"ref":{"name":"Zone","refId":"dart.async/Zone"},"kind":"param","name":"zone","id":"zone"},{"ref":{"name":"ZoneSpecification","refId":"dart.async/ZoneSpecification"},"kind":"param","name":"specification","id":"specification"},{"ref":{"name":"Map","refId":"dart.core/Map"},"kind":"param","name":"zoneValues","id":"zoneValues"}],"line":"218"},{"ref":{"name":"Zone","refId":"dart.async/Zone"},"kind":"property","name":"_zone","id":"_zone","comment":"The [Zone] this class wraps.","isPrivate":true,"line":"205"}],"uri":"dart-sdk/lib/async/zone.dart","line":"203"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"interfaces":[{"name":"ZoneSpecification","refId":"dart.async/ZoneSpecification"}],"kind":"class","name":"_ZoneSpecification","id":"_ZoneSpecification","comment":"\nInternal [ZoneSpecification] class.\n\nThe implementation wants to rely on the fact that the getters cannot change\ndynamically. We thus require users to go through the redirecting\n[ZoneSpecification] constructor which instantiates this class.\n","children":[{"isFinal":true,"kind":"variable","name":"handleUncaughtError","id":"handleUncaughtError","line":"179"},{"isFinal":true,"kind":"variable","name":"run","id":"run","line":"180"},{"isFinal":true,"kind":"variable","name":"runUnary","id":"runUnary","line":"181"},{"isFinal":true,"kind":"variable","name":"runBinary","id":"runBinary","line":"182"},{"isFinal":true,"kind":"variable","name":"registerCallback","id":"registerCallback","line":"183"},{"isFinal":true,"kind":"variable","name":"registerUnaryCallback","id":"registerUnaryCallback","line":"184"},{"isFinal":true,"kind":"variable","name":"registerBinaryCallback","id":"registerBinaryCallback","line":"185"},{"isFinal":true,"kind":"variable","name":"scheduleMicrotask","id":"scheduleMicrotask","line":"186"},{"isFinal":true,"kind":"variable","name":"createTimer","id":"createTimer","line":"187"},{"isFinal":true,"kind":"variable","name":"createPeriodicTimer","id":"createPeriodicTimer","line":"188"},{"isFinal":true,"kind":"variable","name":"print","id":"print","line":"189"},{"isFinal":true,"kind":"variable","name":"fork","id":"fork","line":"190"},{"kind":"constructor","name":"","id":"12()","children":[{"defaultValue":"null","isOptional":true,"isNamed":true,"initializedField":{"name":"handleUncaughtError","refId":"dart.async/_ZoneSpecification/handleUncaughtError"},"kind":"param","name":"handleUncaughtError","id":"handleUncaughtError","line":"164"},{"defaultValue":"null","isOptional":true,"isNamed":true,"initializedField":{"name":"run","refId":"dart.async/_ZoneSpecification/run"},"kind":"param","name":"run","id":"run","line":"165"},{"defaultValue":"null","isOptional":true,"isNamed":true,"initializedField":{"name":"runUnary","refId":"dart.async/_ZoneSpecification/runUnary"},"kind":"param","name":"runUnary","id":"runUnary","line":"166"},{"defaultValue":"null","isOptional":true,"isNamed":true,"initializedField":{"name":"runBinary","refId":"dart.async/_ZoneSpecification/runBinary"},"kind":"param","name":"runBinary","id":"runBinary","line":"167"},{"defaultValue":"null","isOptional":true,"isNamed":true,"initializedField":{"name":"registerCallback","refId":"dart.async/_ZoneSpecification/registerCallback"},"kind":"param","name":"registerCallback","id":"registerCallback","line":"168"},{"defaultValue":"null","isOptional":true,"isNamed":true,"initializedField":{"name":"registerUnaryCallback","refId":"dart.async/_ZoneSpecification/registerUnaryCallback"},"kind":"param","name":"registerUnaryCallback","id":"registerUnaryCallback","line":"169"},{"defaultValue":"null","isOptional":true,"isNamed":true,"initializedField":{"name":"registerBinaryCallback","refId":"dart.async/_ZoneSpecification/registerBinaryCallback"},"kind":"param","name":"registerBinaryCallback","id":"registerBinaryCallback","line":"170"},{"defaultValue":"null","isOptional":true,"isNamed":true,"initializedField":{"name":"scheduleMicrotask","refId":"dart.async/_ZoneSpecification/scheduleMicrotask"},"kind":"param","name":"scheduleMicrotask","id":"scheduleMicrotask","line":"171"},{"defaultValue":"null","isOptional":true,"isNamed":true,"initializedField":{"name":"createTimer","refId":"dart.async/_ZoneSpecification/createTimer"},"kind":"param","name":"createTimer","id":"createTimer","line":"172"},{"defaultValue":"null","isOptional":true,"isNamed":true,"initializedField":{"name":"createPeriodicTimer","refId":"dart.async/_ZoneSpecification/createPeriodicTimer"},"kind":"param","name":"createPeriodicTimer","id":"createPeriodicTimer","line":"173"},{"defaultValue":"null","isOptional":true,"isNamed":true,"initializedField":{"name":"print","refId":"dart.async/_ZoneSpecification/print"},"kind":"param","name":"print","id":"print","line":"174"},{"defaultValue":"null","isOptional":true,"isNamed":true,"initializedField":{"name":"fork","refId":"dart.async/_ZoneSpecification/fork"},"kind":"param","name":"fork","id":"fork","line":"175"}],"line":"163"}],"isPrivate":true,"uri":"dart-sdk/lib/async/zone.dart","line":"162"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"kind":"class","name":"ZoneSpecification","id":"ZoneSpecification","comment":"\nThis class provides the specification for a forked zone.\n\nWhen forking a new zone (see [Zone.fork]) one can override the default\nbehavior of the zone by providing callbacks. These callbacks must be\ngiven in an instance of this class.\n\nHandlers have the same signature as the same-named methods on [Zone] but\nreceive three additional arguments:\n\n  1. the zone the handlers are attached to (the \"self\" zone).\n  2. a [ZoneDelegate] to the parent zone.\n  3. the zone that first received the request (before the request was\n    bubbled up).\n\nHandlers can either stop propagation the request (by simply not calling the\nparent handler), or forward to the parent zone, potentially modifying the\narguments on the way.\n","children":[{"ref":{"name":"HandleUncaughtErrorHandler","refId":"dart.async/HandleUncaughtErrorHandler"},"kind":"property","name":"handleUncaughtError","id":"handleUncaughtError","line":"141"},{"ref":{"name":"RunHandler","refId":"dart.async/RunHandler"},"kind":"property","name":"run","id":"run","line":"142"},{"ref":{"name":"RunUnaryHandler","refId":"dart.async/RunUnaryHandler"},"kind":"property","name":"runUnary","id":"runUnary","line":"143"},{"ref":{"name":"RunBinaryHandler","refId":"dart.async/RunBinaryHandler"},"kind":"property","name":"runBinary","id":"runBinary","line":"144"},{"ref":{"name":"RegisterCallbackHandler","refId":"dart.async/RegisterCallbackHandler"},"kind":"property","name":"registerCallback","id":"registerCallback","line":"145"},{"ref":{"name":"RegisterUnaryCallbackHandler","refId":"dart.async/RegisterUnaryCallbackHandler"},"kind":"property","name":"registerUnaryCallback","id":"registerUnaryCallback","line":"146"},{"ref":{"name":"RegisterBinaryCallbackHandler","refId":"dart.async/RegisterBinaryCallbackHandler"},"kind":"property","name":"registerBinaryCallback","id":"registerBinaryCallback","line":"147"},{"ref":{"name":"ScheduleMicrotaskHandler","refId":"dart.async/ScheduleMicrotaskHandler"},"kind":"property","name":"scheduleMicrotask","id":"scheduleMicrotask","line":"148"},{"ref":{"name":"CreateTimerHandler","refId":"dart.async/CreateTimerHandler"},"kind":"property","name":"createTimer","id":"createTimer","line":"149"},{"ref":{"name":"CreatePeriodicTimerHandler","refId":"dart.async/CreatePeriodicTimerHandler"},"kind":"property","name":"createPeriodicTimer","id":"createPeriodicTimer","line":"150"},{"ref":{"name":"PrintHandler","refId":"dart.async/PrintHandler"},"kind":"property","name":"print","id":"print","line":"151"},{"ref":{"name":"ForkHandler","refId":"dart.async/ForkHandler"},"kind":"property","name":"fork","id":"fork","line":"152"},{"returnType":{"name":"ZoneSpecification","refId":"dart.async/ZoneSpecification"},"kind":"constructor","name":"","id":"12()","comment":"\nCreates a specification with the provided handlers.\n","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"isNamed":true,"kind":"param","name":"handleUncaughtError","id":"handleUncaughtError","children":[{"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"Zone","refId":"dart.async/Zone"},"kind":"param","name":"self","id":"self","uri":"dart-sdk/lib/async/zone.dart","line":"61"},{"ref":{"name":"ZoneDelegate","refId":"dart.async/ZoneDelegate"},"kind":"param","name":"parent","id":"parent","uri":"dart-sdk/lib/async/zone.dart","line":"61"},{"ref":{"name":"Zone","refId":"dart.async/Zone"},"kind":"param","name":"zone","id":"zone","uri":"dart-sdk/lib/async/zone.dart","line":"61"},{"kind":"param","name":"error","id":"error","uri":"dart-sdk/lib/async/zone.dart","line":"62"},{"ref":{"name":"StackTrace","refId":"dart.core/StackTrace"},"kind":"param","name":"stackTrace","id":"stackTrace","uri":"dart-sdk/lib/async/zone.dart","line":"62"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}],"line":"61"},{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"isNamed":true,"kind":"param","name":"run","id":"run","children":[{"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"Zone","refId":"dart.async/Zone"},"kind":"param","name":"self","id":"self","uri":"dart-sdk/lib/async/zone.dart","line":"63"},{"ref":{"name":"ZoneDelegate","refId":"dart.async/ZoneDelegate"},"kind":"param","name":"parent","id":"parent","uri":"dart-sdk/lib/async/zone.dart","line":"63"},{"ref":{"name":"Zone","refId":"dart.async/Zone"},"kind":"param","name":"zone","id":"zone","uri":"dart-sdk/lib/async/zone.dart","line":"63"},{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"f","id":"f","children":[{"kind":"functiontype","name":"Function","id":"Function","uri":"dart-sdk/lib/core/function.dart","line":"13"}],"uri":"dart-sdk/lib/async/zone.dart","line":"63"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}],"line":"63"},{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"isNamed":true,"kind":"param","name":"runUnary","id":"runUnary","children":[{"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"Zone","refId":"dart.async/Zone"},"kind":"param","name":"self","id":"self","uri":"dart-sdk/lib/async/zone.dart","line":"65"},{"ref":{"name":"ZoneDelegate","refId":"dart.async/ZoneDelegate"},"kind":"param","name":"parent","id":"parent","uri":"dart-sdk/lib/async/zone.dart","line":"65"},{"ref":{"name":"Zone","refId":"dart.async/Zone"},"kind":"param","name":"zone","id":"zone","uri":"dart-sdk/lib/async/zone.dart","line":"65"},{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"f","id":"f","children":[{"kind":"functiontype","name":"Function","id":"Function","children":[{"kind":"param","name":"arg","id":"arg","uri":"dart-sdk/lib/async/zone.dart","line":"65"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}],"uri":"dart-sdk/lib/async/zone.dart","line":"65"},{"kind":"param","name":"arg","id":"arg","uri":"dart-sdk/lib/async/zone.dart","line":"65"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}],"line":"64"},{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"isNamed":true,"kind":"param","name":"runBinary","id":"runBinary","children":[{"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"Zone","refId":"dart.async/Zone"},"kind":"param","name":"self","id":"self","uri":"dart-sdk/lib/async/zone.dart","line":"66"},{"ref":{"name":"ZoneDelegate","refId":"dart.async/ZoneDelegate"},"kind":"param","name":"parent","id":"parent","uri":"dart-sdk/lib/async/zone.dart","line":"66"},{"ref":{"name":"Zone","refId":"dart.async/Zone"},"kind":"param","name":"zone","id":"zone","uri":"dart-sdk/lib/async/zone.dart","line":"66"},{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"f","id":"f","children":[{"kind":"functiontype","name":"Function","id":"Function","children":[{"kind":"param","name":"arg1","id":"arg1","uri":"dart-sdk/lib/async/zone.dart","line":"67"},{"kind":"param","name":"arg2","id":"arg2","uri":"dart-sdk/lib/async/zone.dart","line":"67"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}],"uri":"dart-sdk/lib/async/zone.dart","line":"67"},{"kind":"param","name":"arg1","id":"arg1","uri":"dart-sdk/lib/async/zone.dart","line":"67"},{"kind":"param","name":"arg2","id":"arg2","uri":"dart-sdk/lib/async/zone.dart","line":"67"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}],"line":"66"},{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"isNamed":true,"kind":"param","name":"registerCallback","id":"registerCallback","children":[{"returnType":{"name":"ZoneCallback","refId":"dart.async/ZoneCallback"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"Zone","refId":"dart.async/Zone"},"kind":"param","name":"self","id":"self","uri":"dart-sdk/lib/async/zone.dart","line":"69"},{"ref":{"name":"ZoneDelegate","refId":"dart.async/ZoneDelegate"},"kind":"param","name":"parent","id":"parent","uri":"dart-sdk/lib/async/zone.dart","line":"69"},{"ref":{"name":"Zone","refId":"dart.async/Zone"},"kind":"param","name":"zone","id":"zone","uri":"dart-sdk/lib/async/zone.dart","line":"69"},{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"f","id":"f","children":[{"kind":"functiontype","name":"Function","id":"Function","uri":"dart-sdk/lib/core/function.dart","line":"13"}],"uri":"dart-sdk/lib/async/zone.dart","line":"69"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}],"line":"68"},{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"isNamed":true,"kind":"param","name":"registerUnaryCallback","id":"registerUnaryCallback","children":[{"returnType":{"name":"ZoneUnaryCallback","refId":"dart.async/ZoneUnaryCallback"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"Zone","refId":"dart.async/Zone"},"kind":"param","name":"self","id":"self","uri":"dart-sdk/lib/async/zone.dart","line":"71"},{"ref":{"name":"ZoneDelegate","refId":"dart.async/ZoneDelegate"},"kind":"param","name":"parent","id":"parent","uri":"dart-sdk/lib/async/zone.dart","line":"71"},{"ref":{"name":"Zone","refId":"dart.async/Zone"},"kind":"param","name":"zone","id":"zone","uri":"dart-sdk/lib/async/zone.dart","line":"71"},{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"f","id":"f","children":[{"kind":"functiontype","name":"Function","id":"Function","children":[{"kind":"param","name":"arg","id":"arg","uri":"dart-sdk/lib/async/zone.dart","line":"71"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}],"uri":"dart-sdk/lib/async/zone.dart","line":"71"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}],"line":"70"},{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"isNamed":true,"kind":"param","name":"registerBinaryCallback","id":"registerBinaryCallback","children":[{"returnType":{"name":"ZoneBinaryCallback","refId":"dart.async/ZoneBinaryCallback"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"Zone","refId":"dart.async/Zone"},"kind":"param","name":"self","id":"self","uri":"dart-sdk/lib/async/zone.dart","line":"73"},{"ref":{"name":"ZoneDelegate","refId":"dart.async/ZoneDelegate"},"kind":"param","name":"parent","id":"parent","uri":"dart-sdk/lib/async/zone.dart","line":"73"},{"ref":{"name":"Zone","refId":"dart.async/Zone"},"kind":"param","name":"zone","id":"zone","uri":"dart-sdk/lib/async/zone.dart","line":"73"},{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"f","id":"f","children":[{"kind":"functiontype","name":"Function","id":"Function","children":[{"kind":"param","name":"arg1","id":"arg1","uri":"dart-sdk/lib/async/zone.dart","line":"73"},{"kind":"param","name":"arg2","id":"arg2","uri":"dart-sdk/lib/async/zone.dart","line":"73"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}],"uri":"dart-sdk/lib/async/zone.dart","line":"73"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}],"line":"72"},{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"isNamed":true,"kind":"param","name":"scheduleMicrotask","id":"scheduleMicrotask","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"Zone","refId":"dart.async/Zone"},"kind":"param","name":"self","id":"self","uri":"dart-sdk/lib/async/zone.dart","line":"75"},{"ref":{"name":"ZoneDelegate","refId":"dart.async/ZoneDelegate"},"kind":"param","name":"parent","id":"parent","uri":"dart-sdk/lib/async/zone.dart","line":"75"},{"ref":{"name":"Zone","refId":"dart.async/Zone"},"kind":"param","name":"zone","id":"zone","uri":"dart-sdk/lib/async/zone.dart","line":"75"},{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"f","id":"f","children":[{"kind":"functiontype","name":"Function","id":"Function","uri":"dart-sdk/lib/core/function.dart","line":"13"}],"uri":"dart-sdk/lib/async/zone.dart","line":"75"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}],"line":"74"},{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"isNamed":true,"kind":"param","name":"createTimer","id":"createTimer","children":[{"returnType":{"name":"Timer","refId":"dart.async/Timer"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"Zone","refId":"dart.async/Zone"},"kind":"param","name":"self","id":"self","uri":"dart-sdk/lib/async/zone.dart","line":"76"},{"ref":{"name":"ZoneDelegate","refId":"dart.async/ZoneDelegate"},"kind":"param","name":"parent","id":"parent","uri":"dart-sdk/lib/async/zone.dart","line":"76"},{"ref":{"name":"Zone","refId":"dart.async/Zone"},"kind":"param","name":"zone","id":"zone","uri":"dart-sdk/lib/async/zone.dart","line":"76"},{"ref":{"name":"Duration","refId":"dart.core/Duration"},"kind":"param","name":"duration","id":"duration","uri":"dart-sdk/lib/async/zone.dart","line":"77"},{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"f","id":"f","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","uri":"dart-sdk/lib/core/function.dart","line":"13"}],"uri":"dart-sdk/lib/async/zone.dart","line":"77"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}],"line":"76"},{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"isNamed":true,"kind":"param","name":"createPeriodicTimer","id":"createPeriodicTimer","children":[{"returnType":{"name":"Timer","refId":"dart.async/Timer"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"Zone","refId":"dart.async/Zone"},"kind":"param","name":"self","id":"self","uri":"dart-sdk/lib/async/zone.dart","line":"78"},{"ref":{"name":"ZoneDelegate","refId":"dart.async/ZoneDelegate"},"kind":"param","name":"parent","id":"parent","uri":"dart-sdk/lib/async/zone.dart","line":"78"},{"ref":{"name":"Zone","refId":"dart.async/Zone"},"kind":"param","name":"zone","id":"zone","uri":"dart-sdk/lib/async/zone.dart","line":"78"},{"ref":{"name":"Duration","refId":"dart.core/Duration"},"kind":"param","name":"period","id":"period","uri":"dart-sdk/lib/async/zone.dart","line":"79"},{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"f","id":"f","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"Timer","refId":"dart.async/Timer"},"kind":"param","name":"timer","id":"timer","uri":"dart-sdk/lib/async/zone.dart","line":"79"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}],"uri":"dart-sdk/lib/async/zone.dart","line":"79"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}],"line":"78"},{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"isNamed":true,"kind":"param","name":"print","id":"print","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"Zone","refId":"dart.async/Zone"},"kind":"param","name":"self","id":"self","uri":"dart-sdk/lib/async/zone.dart","line":"80"},{"ref":{"name":"ZoneDelegate","refId":"dart.async/ZoneDelegate"},"kind":"param","name":"parent","id":"parent","uri":"dart-sdk/lib/async/zone.dart","line":"80"},{"ref":{"name":"Zone","refId":"dart.async/Zone"},"kind":"param","name":"zone","id":"zone","uri":"dart-sdk/lib/async/zone.dart","line":"80"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"line","id":"line","uri":"dart-sdk/lib/async/zone.dart","line":"80"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}],"line":"80"},{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"isNamed":true,"kind":"param","name":"fork","id":"fork","children":[{"returnType":{"name":"Zone","refId":"dart.async/Zone"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"Zone","refId":"dart.async/Zone"},"kind":"param","name":"self","id":"self","uri":"dart-sdk/lib/async/zone.dart","line":"81"},{"ref":{"name":"ZoneDelegate","refId":"dart.async/ZoneDelegate"},"kind":"param","name":"parent","id":"parent","uri":"dart-sdk/lib/async/zone.dart","line":"81"},{"ref":{"name":"Zone","refId":"dart.async/Zone"},"kind":"param","name":"zone","id":"zone","uri":"dart-sdk/lib/async/zone.dart","line":"81"},{"ref":{"name":"ZoneSpecification","refId":"dart.async/ZoneSpecification"},"kind":"param","name":"specification","id":"specification","uri":"dart-sdk/lib/async/zone.dart","line":"82"},{"ref":{"name":"Map","refId":"dart.core/Map"},"kind":"param","name":"zoneValues","id":"zoneValues","uri":"dart-sdk/lib/async/zone.dart","line":"82"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}],"line":"81"}],"line":"60"},{"returnType":{"name":"ZoneSpecification","refId":"dart.async/ZoneSpecification"},"kind":"constructor","name":"from","id":"from13()","comment":"\nCreates a specification from [other] with the provided handlers overriding\nthe ones in [other].\n","children":[{"ref":{"name":"ZoneSpecification","refId":"dart.async/ZoneSpecification"},"kind":"param","name":"other","id":"other"},{"defaultValue":"null","isOptional":true,"isNamed":true,"kind":"param","name":"handleUncaughtError","id":"handleUncaughtError","line":"90"},{"defaultValue":"null","isOptional":true,"isNamed":true,"kind":"param","name":"run","id":"run","line":"92"},{"defaultValue":"null","isOptional":true,"isNamed":true,"kind":"param","name":"runUnary","id":"runUnary","line":"93"},{"defaultValue":"null","isOptional":true,"isNamed":true,"kind":"param","name":"runBinary","id":"runBinary","line":"95"},{"defaultValue":"null","isOptional":true,"isNamed":true,"kind":"param","name":"registerCallback","id":"registerCallback","line":"97"},{"defaultValue":"null","isOptional":true,"isNamed":true,"kind":"param","name":"registerUnaryCallback","id":"registerUnaryCallback","line":"99"},{"defaultValue":"null","isOptional":true,"isNamed":true,"kind":"param","name":"registerBinaryCallback","id":"registerBinaryCallback","line":"101"},{"defaultValue":"null","isOptional":true,"isNamed":true,"kind":"param","name":"scheduleMicrotask","id":"scheduleMicrotask","line":"103"},{"defaultValue":"null","isOptional":true,"isNamed":true,"kind":"param","name":"createTimer","id":"createTimer","line":"105"},{"defaultValue":"null","isOptional":true,"isNamed":true,"kind":"param","name":"createPeriodicTimer","id":"createPeriodicTimer","line":"107"},{"defaultValue":"null","isOptional":true,"isNamed":true,"kind":"param","name":"print","id":"print","line":"109"},{"defaultValue":"null","isOptional":true,"isNamed":true,"kind":"param","name":"fork","id":"fork","line":"110"}],"line":"89"}],"uri":"dart-sdk/lib/async/zone.dart","line":"56"},{"returnType":{"name":"Zone","refId":"dart.async/Zone"},"kind":"typedef","name":"ForkHandler","id":"ForkHandler","children":[{"ref":{"name":"Zone","refId":"dart.async/Zone"},"kind":"param","name":"self","id":"self"},{"ref":{"name":"ZoneDelegate","refId":"dart.async/ZoneDelegate"},"kind":"param","name":"parent","id":"parent"},{"ref":{"name":"Zone","refId":"dart.async/Zone"},"kind":"param","name":"zone","id":"zone"},{"ref":{"name":"ZoneSpecification","refId":"dart.async/ZoneSpecification"},"kind":"param","name":"specification","id":"specification","line":"34"},{"ref":{"name":"Map","refId":"dart.core/Map","arguments":[{"name":"Symbol","refId":"dart.core/Symbol"}]},"kind":"param","name":"zoneValues","id":"zoneValues","line":"35"}],"uri":"dart-sdk/lib/async/zone.dart","line":"33"},{"returnType":{"name":"void","refId":"void"},"kind":"typedef","name":"PrintHandler","id":"PrintHandler","children":[{"ref":{"name":"Zone","refId":"dart.async/Zone"},"kind":"param","name":"self","id":"self","line":"32"},{"ref":{"name":"ZoneDelegate","refId":"dart.async/ZoneDelegate"},"kind":"param","name":"parent","id":"parent","line":"32"},{"ref":{"name":"Zone","refId":"dart.async/Zone"},"kind":"param","name":"zone","id":"zone","line":"32"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"line","id":"line","line":"32"}],"uri":"dart-sdk/lib/async/zone.dart","line":"31"},{"returnType":{"name":"Timer","refId":"dart.async/Timer"},"kind":"typedef","name":"CreatePeriodicTimerHandler","id":"CreatePeriodicTimerHandler","children":[{"ref":{"name":"Zone","refId":"dart.async/Zone"},"kind":"param","name":"self","id":"self","line":"29"},{"ref":{"name":"ZoneDelegate","refId":"dart.async/ZoneDelegate"},"kind":"param","name":"parent","id":"parent","line":"29"},{"ref":{"name":"Zone","refId":"dart.async/Zone"},"kind":"param","name":"zone","id":"zone","line":"29"},{"ref":{"name":"Duration","refId":"dart.core/Duration"},"kind":"param","name":"period","id":"period","line":"30"},{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"f","id":"f","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"Timer","refId":"dart.async/Timer"},"kind":"param","name":"timer","id":"timer","uri":"dart-sdk/lib/async/zone.dart","line":"30"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}],"line":"30"}],"uri":"dart-sdk/lib/async/zone.dart","line":"28"},{"returnType":{"name":"Timer","refId":"dart.async/Timer"},"kind":"typedef","name":"CreateTimerHandler","id":"CreateTimerHandler","children":[{"ref":{"name":"Zone","refId":"dart.async/Zone"},"kind":"param","name":"self","id":"self","line":"27"},{"ref":{"name":"ZoneDelegate","refId":"dart.async/ZoneDelegate"},"kind":"param","name":"parent","id":"parent","line":"27"},{"ref":{"name":"Zone","refId":"dart.async/Zone"},"kind":"param","name":"zone","id":"zone","line":"27"},{"ref":{"name":"Duration","refId":"dart.core/Duration"},"kind":"param","name":"duration","id":"duration","line":"27"},{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"f","id":"f","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","uri":"dart-sdk/lib/core/function.dart","line":"13"}],"line":"27"}],"uri":"dart-sdk/lib/async/zone.dart","line":"26"},{"returnType":{"name":"void","refId":"void"},"kind":"typedef","name":"ScheduleMicrotaskHandler","id":"ScheduleMicrotaskHandler","children":[{"ref":{"name":"Zone","refId":"dart.async/Zone"},"kind":"param","name":"self","id":"self","line":"25"},{"ref":{"name":"ZoneDelegate","refId":"dart.async/ZoneDelegate"},"kind":"param","name":"parent","id":"parent","line":"25"},{"ref":{"name":"Zone","refId":"dart.async/Zone"},"kind":"param","name":"zone","id":"zone","line":"25"},{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"f","id":"f","children":[{"kind":"functiontype","name":"Function","id":"Function","uri":"dart-sdk/lib/core/function.dart","line":"13"}],"line":"25"}],"uri":"dart-sdk/lib/async/zone.dart","line":"24"},{"returnType":{"name":"ZoneBinaryCallback","refId":"dart.async/ZoneBinaryCallback"},"kind":"typedef","name":"RegisterBinaryCallbackHandler","id":"RegisterBinaryCallbackHandler","children":[{"ref":{"name":"Zone","refId":"dart.async/Zone"},"kind":"param","name":"self","id":"self","line":"23"},{"ref":{"name":"ZoneDelegate","refId":"dart.async/ZoneDelegate"},"kind":"param","name":"parent","id":"parent","line":"23"},{"ref":{"name":"Zone","refId":"dart.async/Zone"},"kind":"param","name":"zone","id":"zone","line":"23"},{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"f","id":"f","children":[{"kind":"functiontype","name":"Function","id":"Function","children":[{"kind":"param","name":"arg1","id":"arg1","uri":"dart-sdk/lib/async/zone.dart","line":"23"},{"kind":"param","name":"arg2","id":"arg2","uri":"dart-sdk/lib/async/zone.dart","line":"23"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}],"line":"23"}],"uri":"dart-sdk/lib/async/zone.dart","line":"22"},{"returnType":{"name":"ZoneUnaryCallback","refId":"dart.async/ZoneUnaryCallback"},"kind":"typedef","name":"RegisterUnaryCallbackHandler","id":"RegisterUnaryCallbackHandler","children":[{"ref":{"name":"Zone","refId":"dart.async/Zone"},"kind":"param","name":"self","id":"self","line":"21"},{"ref":{"name":"ZoneDelegate","refId":"dart.async/ZoneDelegate"},"kind":"param","name":"parent","id":"parent","line":"21"},{"ref":{"name":"Zone","refId":"dart.async/Zone"},"kind":"param","name":"zone","id":"zone","line":"21"},{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"f","id":"f","children":[{"kind":"functiontype","name":"Function","id":"Function","children":[{"kind":"param","name":"arg","id":"arg","uri":"dart-sdk/lib/async/zone.dart","line":"21"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}],"line":"21"}],"uri":"dart-sdk/lib/async/zone.dart","line":"20"},{"returnType":{"name":"ZoneCallback","refId":"dart.async/ZoneCallback"},"kind":"typedef","name":"RegisterCallbackHandler","id":"RegisterCallbackHandler","children":[{"ref":{"name":"Zone","refId":"dart.async/Zone"},"kind":"param","name":"self","id":"self","line":"19"},{"ref":{"name":"ZoneDelegate","refId":"dart.async/ZoneDelegate"},"kind":"param","name":"parent","id":"parent","line":"19"},{"ref":{"name":"Zone","refId":"dart.async/Zone"},"kind":"param","name":"zone","id":"zone","line":"19"},{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"f","id":"f","children":[{"kind":"functiontype","name":"Function","id":"Function","uri":"dart-sdk/lib/core/function.dart","line":"13"}],"line":"19"}],"uri":"dart-sdk/lib/async/zone.dart","line":"18"},{"kind":"typedef","name":"RunBinaryHandler","id":"RunBinaryHandler","children":[{"ref":{"name":"Zone","refId":"dart.async/Zone"},"kind":"param","name":"self","id":"self","line":"17"},{"ref":{"name":"ZoneDelegate","refId":"dart.async/ZoneDelegate"},"kind":"param","name":"parent","id":"parent","line":"17"},{"ref":{"name":"Zone","refId":"dart.async/Zone"},"kind":"param","name":"zone","id":"zone","line":"17"},{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"f","id":"f","children":[{"kind":"functiontype","name":"Function","id":"Function","children":[{"kind":"param","name":"arg1","id":"arg1","uri":"dart-sdk/lib/async/zone.dart","line":"17"},{"kind":"param","name":"arg2","id":"arg2","uri":"dart-sdk/lib/async/zone.dart","line":"17"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}],"line":"17"},{"kind":"param","name":"arg1","id":"arg1","line":"17"},{"kind":"param","name":"arg2","id":"arg2","line":"17"}],"uri":"dart-sdk/lib/async/zone.dart","line":"16"},{"kind":"typedef","name":"RunUnaryHandler","id":"RunUnaryHandler","children":[{"ref":{"name":"Zone","refId":"dart.async/Zone"},"kind":"param","name":"self","id":"self","line":"15"},{"ref":{"name":"ZoneDelegate","refId":"dart.async/ZoneDelegate"},"kind":"param","name":"parent","id":"parent","line":"15"},{"ref":{"name":"Zone","refId":"dart.async/Zone"},"kind":"param","name":"zone","id":"zone","line":"15"},{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"f","id":"f","children":[{"kind":"functiontype","name":"Function","id":"Function","children":[{"kind":"param","name":"arg","id":"arg","uri":"dart-sdk/lib/async/zone.dart","line":"15"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}],"line":"15"},{"kind":"param","name":"arg","id":"arg","line":"15"}],"uri":"dart-sdk/lib/async/zone.dart","line":"14"},{"kind":"typedef","name":"RunHandler","id":"RunHandler","children":[{"ref":{"name":"Zone","refId":"dart.async/Zone"},"kind":"param","name":"self","id":"self"},{"ref":{"name":"ZoneDelegate","refId":"dart.async/ZoneDelegate"},"kind":"param","name":"parent","id":"parent"},{"ref":{"name":"Zone","refId":"dart.async/Zone"},"kind":"param","name":"zone","id":"zone"},{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"f","id":"f","children":[{"kind":"functiontype","name":"Function","id":"Function","uri":"dart-sdk/lib/core/function.dart"}]}],"uri":"dart-sdk/lib/async/zone.dart","line":"13"},{"kind":"typedef","name":"HandleUncaughtErrorHandler","id":"HandleUncaughtErrorHandler","children":[{"ref":{"name":"Zone","refId":"dart.async/Zone"},"kind":"param","name":"self","id":"self","line":"12"},{"ref":{"name":"ZoneDelegate","refId":"dart.async/ZoneDelegate"},"kind":"param","name":"parent","id":"parent","line":"12"},{"ref":{"name":"Zone","refId":"dart.async/Zone"},"kind":"param","name":"zone","id":"zone","line":"12"},{"kind":"param","name":"error","id":"error","line":"12"},{"ref":{"name":"StackTrace","refId":"dart.core/StackTrace"},"kind":"param","name":"stackTrace","id":"stackTrace","line":"12"}],"uri":"dart-sdk/lib/async/zone.dart","line":"11"},{"kind":"typedef","name":"ZoneBinaryCallback","id":"ZoneBinaryCallback","children":[{"kind":"param","name":"arg1","id":"arg1"},{"kind":"param","name":"arg2","id":"arg2"}],"uri":"dart-sdk/lib/async/zone.dart","line":"9"},{"kind":"typedef","name":"ZoneUnaryCallback","id":"ZoneUnaryCallback","children":[{"kind":"param","name":"arg","id":"arg"}],"uri":"dart-sdk/lib/async/zone.dart","line":"8"},{"kind":"typedef","name":"ZoneCallback","id":"ZoneCallback","uri":"dart-sdk/lib/async/zone.dart","line":"7"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"kind":"class","name":"Timer","id":"Timer","comment":"\nA count-down timer that can be configured to fire once or repeatedly.\n\nThe timer counts down from the specified duration to 0.\nWhen the timer reaches 0, the timer invokes the specified callback function.\nUse a periodic timer to repeatedly count down the same interval.\n\nA negative duration is treated the same as a duration of 0.\nIf the duration is statically known to be 0, consider using [run].\n\nFrequently the duration is either a constant or computed as in the\nfollowing example (taking advantage of the multiplication operator of\nthe [Duration] class):\n\n    const TIMEOUT = const Duration(seconds: 3);\n    const ms = const Duration(milliseconds: 1);\n\n    startTimeout([int milliseconds]) {\n      var duration = milliseconds == null ? TIMEOUT : ms * milliseconds;\n      return new Timer(duration, handleTimeout);\n    }\n    ...\n    void handleTimeout() {  // callback function\n      ...\n    }\n\nNote: If Dart code using Timer is compiled to JavaScript, the finest\ngranularity available in the browser is 4 milliseconds.\n\nSee [Stopwatch] for measuring elapsed time.\n","children":[{"returnType":{"name":"void","refId":"void"},"isStatic":true,"kind":"method","name":"run","id":"run1()","comment":"\nRuns the given [callback] asynchronously as soon as possible.\n\nThis function is equivalent to `new Timer(Duration.ZERO, callback)`.\n","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"callback","id":"callback","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"78"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"cancel","id":"cancel0()","comment":"\nCancels the timer.\n","line":"85"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"isActive","id":"isActive","comment":"\nReturns whether the timer is still active.\n\nA non-periodic timer is active if the callback has not been executed,\nand the timer has not been canceled.\n\nA periodic timer is active if it has not been canceled.\n","line":"95"},{"returnType":{"name":"Timer","refId":"dart.async/Timer"},"kind":"constructor","name":"","id":"2()","comment":"\nCreates a new timer.\n\nThe [callback] function is invoked after the given [duration].\n\n","children":[{"ref":{"name":"Duration","refId":"dart.core/Duration"},"kind":"param","name":"duration","id":"duration"},{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"callback","id":"callback","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"46"},{"returnType":{"name":"Timer","refId":"dart.async/Timer"},"kind":"constructor","name":"periodic","id":"periodic2()","comment":"\nCreates a new repeating timer.\n\nThe [callback] is invoked repeatedly with [duration] intervals until\ncanceled with the [cancel] function.\n","children":[{"ref":{"name":"Duration","refId":"dart.core/Duration"},"kind":"param","name":"duration","id":"duration"},{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"callback","id":"callback","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"Timer","refId":"dart.async/Timer"},"kind":"param","name":"timer","id":"timer","uri":"dart-sdk/lib/async/timer.dart","line":"63"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}],"line":"63"}],"line":"62"}],"uri":"dart-sdk/lib/async/timer.dart","line":"38"},{"superclass":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"T","refId":"dart.async/_BoundSubscriptionStream/T"}]},"kind":"class","name":"_BoundSubscriptionStream","id":"_BoundSubscriptionStream","comment":"\nA stream transformed by a [_StreamSubscriptionTransformer].\n\nWhen this stream is listened to it invokes the [_transformer] function with\nthe stored [_stream]. Usually the transformer starts listening at this\nmoment.\n","children":[{"returnType":{"name":"StreamSubscription","refId":"dart.async/StreamSubscription","arguments":[{"name":"T","refId":"dart.async/_BoundSubscriptionStream/T"}]},"kind":"method","name":"listen","id":"listen4()","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"onData","id":"onData","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"T","refId":"dart.async/_BoundSubscriptionStream/T"},"kind":"param","name":"event","id":"event","uri":"dart-sdk/lib/async/stream_transformers.dart","line":"298"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]},{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"isNamed":true,"kind":"param","name":"onError","id":"onError","line":"299"},{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"isNamed":true,"kind":"param","name":"onDone","id":"onDone","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","uri":"dart-sdk/lib/core/function.dart","line":"13"}],"line":"300"},{"ref":{"name":"bool","refId":"dart.core/bool"},"isOptional":true,"isNamed":true,"kind":"param","name":"cancelOnError","id":"cancelOnError","line":"301"}],"line":"298"},{"ref":{"name":"_SubscriptionTransformer","refId":"dart.async/_SubscriptionTransformer"},"isFinal":true,"kind":"variable","name":"_transformer","id":"_transformer","isPrivate":true,"line":"293"},{"ref":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"S","refId":"dart.async/_BoundSubscriptionStream/S"}]},"isFinal":true,"kind":"variable","name":"_stream","id":"_stream","isPrivate":true,"line":"294"},{"kind":"constructor","name":"","id":"2()","children":[{"ref":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"S","refId":"dart.async/_BoundSubscriptionStream/S"}]},"initializedField":{"name":"_stream","refId":"dart.async/_BoundSubscriptionStream/_stream"},"kind":"param","name":"_stream","id":"_stream","isPrivate":true},{"ref":{"name":"_SubscriptionTransformer","refId":"dart.async/_SubscriptionTransformer"},"initializedField":{"name":"_transformer","refId":"dart.async/_BoundSubscriptionStream/_transformer"},"kind":"param","name":"_transformer","id":"_transformer","isPrivate":true}],"line":"296"},{"kind":"typeparam","name":"S","id":"S"},{"kind":"typeparam","name":"T","id":"T"}],"isPrivate":true,"uri":"dart-sdk/lib/async/stream_transformers.dart","line":"292"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"interfaces":[{"name":"StreamTransformer","refId":"dart.async/StreamTransformer","arguments":[{"name":"S","refId":"dart.async/_StreamSubscriptionTransformer/S"},{"name":"T","refId":"dart.async/_StreamSubscriptionTransformer/T"}]}],"kind":"class","name":"_StreamSubscriptionTransformer","id":"_StreamSubscriptionTransformer","comment":"\nA [StreamTransformer] that minimizes the number of additional classes.\n\nInstead of implementing three classes: a [StreamTransformer], a [Stream]\n(as the result of a `bind` call) and a [StreamSubscription] (which does the\nactual work), this class only requires a fincution that is invoked when the\nlast bit (the subscription) of the transformer-workflow is needed.\n\nThe given transformer function maps from Stream and cancelOnError to a\n`StreamSubscription`. As such it can also act on `cancel` events, making it\nfully general.\n","children":[{"returnType":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"T","refId":"dart.async/_StreamSubscriptionTransformer/T"}]},"kind":"method","name":"bind","id":"bind1()","children":[{"ref":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"S","refId":"dart.async/_StreamSubscriptionTransformer/S"}]},"kind":"param","name":"stream","id":"stream"}],"line":"281"},{"ref":{"name":"_SubscriptionTransformer","refId":"dart.async/_SubscriptionTransformer"},"isFinal":true,"kind":"variable","name":"_transformer","id":"_transformer","isPrivate":true,"line":"277"},{"kind":"constructor","name":"","id":"1()","children":[{"ref":{"name":"_SubscriptionTransformer","refId":"dart.async/_SubscriptionTransformer"},"initializedField":{"name":"_transformer","refId":"dart.async/_StreamSubscriptionTransformer/_transformer"},"kind":"param","name":"_transformer","id":"_transformer","isPrivate":true}],"line":"279"},{"kind":"typeparam","name":"S","id":"S"},{"kind":"typeparam","name":"T","id":"T"}],"isPrivate":true,"uri":"dart-sdk/lib/async/stream_transformers.dart","line":"276"},{"returnType":{"name":"StreamSubscription","refId":"dart.async/StreamSubscription","arguments":[{"name":"T","refId":"dart.async/_SubscriptionTransformer/T"}]},"kind":"typedef","name":"_SubscriptionTransformer","id":"_SubscriptionTransformer","comment":"A closure mapping a stream and cancelOnError to a StreamSubscription.","children":[{"ref":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"S","refId":"dart.async/_SubscriptionTransformer/S"}]},"kind":"param","name":"stream","id":"stream","line":"262"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"param","name":"cancelOnError","id":"cancelOnError","line":"262"},{"kind":"typeparam","name":"S","id":"S"},{"kind":"typeparam","name":"T","id":"T"}],"isPrivate":true,"uri":"dart-sdk/lib/async/stream_transformers.dart","line":"261"},{"superclass":{"name":"_StreamSinkTransformer","refId":"dart.async/_StreamSinkTransformer","arguments":[{"name":"S","refId":"dart.async/_StreamHandlerTransformer/S"},{"name":"T","refId":"dart.async/_StreamHandlerTransformer/T"}]},"kind":"class","name":"_StreamHandlerTransformer","id":"_StreamHandlerTransformer","comment":"\nA StreamTransformer that transformers events with the given handlers.\n\nNote that this transformer can only be used once.\n","children":[{"returnType":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"T","refId":"dart.async/_StreamHandlerTransformer/T"}]},"kind":"method","name":"bind","id":"bind1()","children":[{"ref":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"S","refId":"dart.async/_StreamHandlerTransformer/S"}]},"kind":"param","name":"stream","id":"stream"}],"line":"239"},{"returnType":{"name":"void","refId":"void"},"isStatic":true,"kind":"method","name":"_defaultHandleData","id":"_defaultHandleData2()","comment":"Default data handler forwards all data. ","children":[{"kind":"param","name":"data","id":"data"},{"ref":{"name":"EventSink","refId":"dart.async/EventSink"},"kind":"param","name":"sink","id":"sink"}],"isPrivate":true,"line":"244"},{"returnType":{"name":"void","refId":"void"},"isStatic":true,"kind":"method","name":"_defaultHandleError","id":"_defaultHandleError3()","comment":"Default error handler forwards all errors. ","children":[{"kind":"param","name":"error","id":"error"},{"ref":{"name":"StackTrace","refId":"dart.core/StackTrace"},"kind":"param","name":"stackTrace","id":"stackTrace"},{"ref":{"name":"EventSink","refId":"dart.async/EventSink"},"kind":"param","name":"sink","id":"sink","line":"250"}],"isPrivate":true,"line":"249"},{"returnType":{"name":"void","refId":"void"},"isStatic":true,"kind":"method","name":"_defaultHandleDone","id":"_defaultHandleDone1()","comment":"Default done handler forwards done. ","children":[{"ref":{"name":"EventSink","refId":"dart.async/EventSink"},"kind":"param","name":"sink","id":"sink"}],"isPrivate":true,"line":"255"},{"kind":"constructor","name":"","id":"3()","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"isNamed":true,"kind":"param","name":"handleData","id":"handleData","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"S","refId":"dart.async/_StreamHandlerTransformer/S"},"kind":"param","name":"data","id":"data","uri":"dart-sdk/lib/async/stream_transformers.dart","line":"228"},{"ref":{"name":"EventSink","refId":"dart.async/EventSink","arguments":[{"name":"T","refId":"dart.async/_StreamHandlerTransformer/T"}]},"kind":"param","name":"sink","id":"sink","uri":"dart-sdk/lib/async/stream_transformers.dart","line":"228"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}],"line":"228"},{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"isNamed":true,"kind":"param","name":"handleError","id":"handleError","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"Object","refId":"dart.core/Object"},"kind":"param","name":"error","id":"error","uri":"dart-sdk/lib/async/stream_transformers.dart","line":"229"},{"ref":{"name":"StackTrace","refId":"dart.core/StackTrace"},"kind":"param","name":"stackTrace","id":"stackTrace","uri":"dart-sdk/lib/async/stream_transformers.dart","line":"229"},{"ref":{"name":"EventSink","refId":"dart.async/EventSink","arguments":[{"name":"T","refId":"dart.async/_StreamHandlerTransformer/T"}]},"kind":"param","name":"sink","id":"sink","uri":"dart-sdk/lib/async/stream_transformers.dart","line":"229"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}],"line":"229"},{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"isNamed":true,"kind":"param","name":"handleDone","id":"handleDone","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"EventSink","refId":"dart.async/EventSink","arguments":[{"name":"T","refId":"dart.async/_StreamHandlerTransformer/T"}]},"kind":"param","name":"sink","id":"sink","uri":"dart-sdk/lib/async/stream_transformers.dart","line":"230"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}],"line":"230"}],"line":"227"},{"kind":"typeparam","name":"S","id":"S"},{"kind":"typeparam","name":"T","id":"T"}],"isPrivate":true,"uri":"dart-sdk/lib/async/stream_transformers.dart","line":"225"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"interfaces":[{"name":"EventSink","refId":"dart.async/EventSink","arguments":[{"name":"S","refId":"dart.async/_HandlerEventSink/S"}]}],"kind":"class","name":"_HandlerEventSink","id":"_HandlerEventSink","comment":"\nWraps handlers (from [StreamTransformer.fromHandlers]) into an `EventSink`.\n\nThis way we can reuse the code from [_StreamSinkTransformer].\n","children":[{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"add","id":"add1()","children":[{"ref":{"name":"S","refId":"dart.async/_HandlerEventSink/S"},"kind":"param","name":"data","id":"data"}],"line":"214"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"addError","id":"addError2()","children":[{"ref":{"name":"Object","refId":"dart.core/Object"},"kind":"param","name":"error","id":"error"},{"ref":{"name":"StackTrace","refId":"dart.core/StackTrace"},"isOptional":true,"kind":"param","name":"stackTrace","id":"stackTrace"}],"line":"215"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"close","id":"close0()","line":"217"},{"ref":{"name":"_TransformDataHandler","refId":"dart.async/_TransformDataHandler"},"isFinal":true,"kind":"variable","name":"_handleData","id":"_handleData","isPrivate":true,"line":"204"},{"ref":{"name":"_TransformErrorHandler","refId":"dart.async/_TransformErrorHandler"},"isFinal":true,"kind":"variable","name":"_handleError","id":"_handleError","isPrivate":true,"line":"205"},{"ref":{"name":"_TransformDoneHandler","refId":"dart.async/_TransformDoneHandler"},"isFinal":true,"kind":"variable","name":"_handleDone","id":"_handleDone","isPrivate":true,"line":"206"},{"ref":{"name":"EventSink","refId":"dart.async/EventSink","arguments":[{"name":"T","refId":"dart.async/_HandlerEventSink/T"}]},"isFinal":true,"kind":"variable","name":"_sink","id":"_sink","comment":"The output sink where the handlers should send their data into.","isPrivate":true,"line":"209"},{"kind":"constructor","name":"","id":"4()","children":[{"ref":{"name":"_TransformDataHandler","refId":"dart.async/_TransformDataHandler"},"initializedField":{"name":"_handleData","refId":"dart.async/_HandlerEventSink/_handleData"},"kind":"param","name":"_handleData","id":"_handleData","isPrivate":true},{"ref":{"name":"_TransformErrorHandler","refId":"dart.async/_TransformErrorHandler"},"initializedField":{"name":"_handleError","refId":"dart.async/_HandlerEventSink/_handleError"},"kind":"param","name":"_handleError","id":"_handleError","isPrivate":true},{"ref":{"name":"_TransformDoneHandler","refId":"dart.async/_TransformDoneHandler"},"initializedField":{"name":"_handleDone","refId":"dart.async/_HandlerEventSink/_handleDone"},"kind":"param","name":"_handleDone","id":"_handleDone","isPrivate":true},{"ref":{"name":"EventSink","refId":"dart.async/EventSink","arguments":[{"name":"T","refId":"dart.async/_HandlerEventSink/T"}]},"initializedField":{"name":"_sink","refId":"dart.async/_HandlerEventSink/_sink"},"kind":"param","name":"_sink","id":"_sink","isPrivate":true,"line":"212"}],"line":"211"},{"kind":"typeparam","name":"S","id":"S"},{"kind":"typeparam","name":"T","id":"T"}],"isPrivate":true,"uri":"dart-sdk/lib/async/stream_transformers.dart","line":"203"},{"returnType":{"name":"void","refId":"void"},"kind":"typedef","name":"_TransformDoneHandler","id":"_TransformDoneHandler","comment":"Done-handler coming from [StreamTransformer.fromHandlers].","children":[{"ref":{"name":"EventSink","refId":"dart.async/EventSink","arguments":[{"name":"T","refId":"dart.async/_TransformDoneHandler/T"}]},"kind":"param","name":"sink","id":"sink"},{"kind":"typeparam","name":"T","id":"T"}],"isPrivate":true,"uri":"dart-sdk/lib/async/stream_transformers.dart","line":"196"},{"returnType":{"name":"void","refId":"void"},"kind":"typedef","name":"_TransformErrorHandler","id":"_TransformErrorHandler","comment":"Error-handler coming from [StreamTransformer.fromHandlers].","children":[{"ref":{"name":"Object","refId":"dart.core/Object"},"kind":"param","name":"error","id":"error","line":"194"},{"ref":{"name":"StackTrace","refId":"dart.core/StackTrace"},"kind":"param","name":"stackTrace","id":"stackTrace","line":"194"},{"ref":{"name":"EventSink","refId":"dart.async/EventSink","arguments":[{"name":"T","refId":"dart.async/_TransformErrorHandler/T"}]},"kind":"param","name":"sink","id":"sink","line":"194"},{"kind":"typeparam","name":"T","id":"T"}],"isPrivate":true,"uri":"dart-sdk/lib/async/stream_transformers.dart","line":"193"},{"returnType":{"name":"void","refId":"void"},"kind":"typedef","name":"_TransformDataHandler","id":"_TransformDataHandler","comment":"Data-handler coming from [StreamTransformer.fromHandlers].","children":[{"ref":{"name":"S","refId":"dart.async/_TransformDataHandler/S"},"kind":"param","name":"data","id":"data"},{"ref":{"name":"EventSink","refId":"dart.async/EventSink","arguments":[{"name":"T","refId":"dart.async/_TransformDataHandler/T"}]},"kind":"param","name":"sink","id":"sink"},{"kind":"typeparam","name":"S","id":"S"},{"kind":"typeparam","name":"T","id":"T"}],"isPrivate":true,"uri":"dart-sdk/lib/async/stream_transformers.dart","line":"191"},{"superclass":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"T","refId":"dart.async/_BoundSinkStream/T"}]},"kind":"class","name":"_BoundSinkStream","id":"_BoundSinkStream","comment":"\nThe result of binding a StreamTransformer for Sink-mappers.\n\nIt contains the bound Stream and the sink-mapper. Only when the user starts\nlistening to this stream is the sink-mapper invoked. The result is used\nto create a StreamSubscription that transforms events.\n","children":[{"returnType":{"name":"StreamSubscription","refId":"dart.async/StreamSubscription","arguments":[{"name":"T","refId":"dart.async/_BoundSinkStream/T"}]},"kind":"method","name":"listen","id":"listen4()","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"onData","id":"onData","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"T","refId":"dart.async/_BoundSinkStream/T"},"kind":"param","name":"event","id":"event","uri":"dart-sdk/lib/async/stream_transformers.dart","line":"176"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]},{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"isNamed":true,"kind":"param","name":"onError","id":"onError","line":"177"},{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"isNamed":true,"kind":"param","name":"onDone","id":"onDone","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","uri":"dart-sdk/lib/core/function.dart","line":"13"}],"line":"178"},{"ref":{"name":"bool","refId":"dart.core/bool"},"isOptional":true,"isNamed":true,"kind":"param","name":"cancelOnError","id":"cancelOnError","line":"179"}],"line":"176"},{"ref":{"name":"_SinkMapper","refId":"dart.async/_SinkMapper"},"isFinal":true,"kind":"variable","name":"_sinkMapper","id":"_sinkMapper","isPrivate":true,"line":"171"},{"ref":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"S","refId":"dart.async/_BoundSinkStream/S"}]},"isFinal":true,"kind":"variable","name":"_stream","id":"_stream","isPrivate":true,"line":"172"},{"kind":"constructor","name":"","id":"2()","children":[{"ref":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"S","refId":"dart.async/_BoundSinkStream/S"}]},"initializedField":{"name":"_stream","refId":"dart.async/_BoundSinkStream/_stream"},"kind":"param","name":"_stream","id":"_stream","isPrivate":true},{"ref":{"name":"_SinkMapper","refId":"dart.async/_SinkMapper"},"initializedField":{"name":"_sinkMapper","refId":"dart.async/_BoundSinkStream/_sinkMapper"},"kind":"param","name":"_sinkMapper","id":"_sinkMapper","isPrivate":true}],"line":"174"},{"kind":"typeparam","name":"S","id":"S"},{"kind":"typeparam","name":"T","id":"T"}],"isPrivate":true,"uri":"dart-sdk/lib/async/stream_transformers.dart","line":"170"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"interfaces":[{"name":"StreamTransformer","refId":"dart.async/StreamTransformer","arguments":[{"name":"S","refId":"dart.async/_StreamSinkTransformer/S"},{"name":"T","refId":"dart.async/_StreamSinkTransformer/T"}]}],"kind":"class","name":"_StreamSinkTransformer","id":"_StreamSinkTransformer","comment":"\nA StreamTransformer for Sink-mappers.\n\nA Sink-mapper takes an [EventSink] (its output) and returns another\nEventSink (its input).\n\nNote that this class can be `const`.\n","children":[{"returnType":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"T","refId":"dart.async/_StreamSinkTransformer/T"}]},"kind":"method","name":"bind","id":"bind1()","children":[{"ref":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"S","refId":"dart.async/_StreamSinkTransformer/S"}]},"kind":"param","name":"stream","id":"stream"}],"line":"159"},{"ref":{"name":"_SinkMapper","refId":"dart.async/_SinkMapper"},"isFinal":true,"kind":"variable","name":"_sinkMapper","id":"_sinkMapper","isPrivate":true,"line":"156"},{"kind":"constructor","name":"","id":"1()","children":[{"ref":{"name":"_SinkMapper","refId":"dart.async/_SinkMapper"},"initializedField":{"name":"_sinkMapper","refId":"dart.async/_StreamSinkTransformer/_sinkMapper"},"kind":"param","name":"_sinkMapper","id":"_sinkMapper","isPrivate":true}],"line":"157"},{"kind":"typeparam","name":"S","id":"S"},{"kind":"typeparam","name":"T","id":"T"}],"isPrivate":true,"uri":"dart-sdk/lib/async/stream_transformers.dart","line":"155"},{"returnType":{"name":"EventSink","refId":"dart.async/EventSink","arguments":[{"name":"S","refId":"dart.async/_SinkMapper/S"}]},"kind":"typedef","name":"_SinkMapper","id":"_SinkMapper","children":[{"ref":{"name":"EventSink","refId":"dart.async/EventSink","arguments":[{"name":"T","refId":"dart.async/_SinkMapper/T"}]},"kind":"param","name":"output","id":"output"},{"kind":"typeparam","name":"S","id":"S"},{"kind":"typeparam","name":"T","id":"T"}],"isPrivate":true,"uri":"dart-sdk/lib/async/stream_transformers.dart","line":"145"},{"superclass":{"name":"_BufferingStreamSubscription","refId":"dart.async/_BufferingStreamSubscription","arguments":[{"name":"T","refId":"dart.async/_SinkTransformerStreamSubscription/T"}]},"kind":"class","name":"_SinkTransformerStreamSubscription","id":"_SinkTransformerStreamSubscription","comment":"\nA StreamSubscription that pipes data through a sink.\n\nThe constructor of this class takes a [_SinkMapper] which maps from\n[EventSink] to [EventSink]. The input to the mapper is the output of\nthe transformation. The returned sink is the transformation's input.\n","children":[{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_add","id":"_add1()","comment":"\nAdds an event to this subscriptions.\n\nContrary to normal [_BufferingStreamSubscription]s we may receive\nevents when the stream is already closed. Report them as state\nerror.\n","children":[{"ref":{"name":"T","refId":"dart.async/_SinkTransformerStreamSubscription/T"},"kind":"param","name":"data","id":"data"}],"isPrivate":true,"line":"60"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_addError","id":"_addError2()","comment":"\nAdds an error event to this subscriptions.\n\nContrary to normal [_BufferingStreamSubscription]s we may receive\nevents when the stream is already closed. Report them as state\nerror.\n","children":[{"ref":{"name":"Object","refId":"dart.core/Object"},"kind":"param","name":"error","id":"error"},{"ref":{"name":"StackTrace","refId":"dart.core/StackTrace"},"kind":"param","name":"stackTrace","id":"stackTrace"}],"isPrivate":true,"line":"74"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_close","id":"_close0()","comment":"\nAdds a close event to this subscriptions.\n\nContrary to normal [_BufferingStreamSubscription]s we may receive\nevents when the stream is already closed. Report them as state\nerror.\n","isPrivate":true,"line":"88"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_onPause","id":"_onPause0()","isPrivate":true,"line":"97"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_onResume","id":"_onResume0()","isPrivate":true,"line":"101"},{"returnType":{"name":"Future","refId":"dart.async/Future"},"kind":"method","name":"_onCancel","id":"_onCancel0()","isPrivate":true,"line":"105"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_handleData","id":"_handleData1()","children":[{"ref":{"name":"S","refId":"dart.async/_SinkTransformerStreamSubscription/S"},"kind":"param","name":"data","id":"data"}],"isPrivate":true,"line":"114"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_handleError","id":"_handleError2()","children":[{"kind":"param","name":"error","id":"error"},{"isOptional":true,"kind":"param","name":"stackTrace","id":"stackTrace"}],"isPrivate":true,"line":"122"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_handleDone","id":"_handleDone0()","isPrivate":true,"line":"134"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"_isSubscribed","id":"_isSubscribed","comment":"Whether this subscription is still subscribed to its source. ","isPrivate":true,"line":"49"},{"ref":{"name":"EventSink","refId":"dart.async/EventSink"},"kind":"variable","name":"_transformerSink","id":"_transformerSink","comment":"The transformer's input sink.","isPrivate":true,"line":"31"},{"ref":{"name":"StreamSubscription","refId":"dart.async/StreamSubscription","arguments":[{"name":"S","refId":"dart.async/_SinkTransformerStreamSubscription/S"}]},"kind":"variable","name":"_subscription","id":"_subscription","comment":"The subscription to the input stream.","isPrivate":true,"line":"34"},{"kind":"constructor","name":"","id":"3()","children":[{"ref":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"S","refId":"dart.async/_SinkTransformerStreamSubscription/S"}]},"kind":"param","name":"source","id":"source"},{"ref":{"name":"_SinkMapper","refId":"dart.async/_SinkMapper"},"kind":"param","name":"mapper","id":"mapper","line":"37"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"param","name":"cancelOnError","id":"cancelOnError","line":"38"}],"line":"36"},{"kind":"typeparam","name":"S","id":"S"},{"kind":"typeparam","name":"T","id":"T"}],"isPrivate":true,"uri":"dart-sdk/lib/async/stream_transformers.dart","line":"28"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"interfaces":[{"name":"EventSink","refId":"dart.async/EventSink","arguments":[{"name":"T","refId":"dart.async/_EventSinkWrapper/T"}]}],"kind":"class","name":"_EventSinkWrapper","id":"_EventSinkWrapper","comment":"\nWraps an [_EventSink] so it exposes only the [EventSink] interface.\n","children":[{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"add","id":"add1()","children":[{"ref":{"name":"T","refId":"dart.async/_EventSinkWrapper/T"},"kind":"param","name":"data","id":"data"}],"line":"14"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"addError","id":"addError2()","children":[{"kind":"param","name":"error","id":"error"},{"ref":{"name":"StackTrace","refId":"dart.core/StackTrace"},"isOptional":true,"kind":"param","name":"stackTrace","id":"stackTrace"}],"line":"15"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"close","id":"close0()","line":"18"},{"ref":{"name":"_EventSink","refId":"dart.async/_EventSink"},"kind":"variable","name":"_sink","id":"_sink","isPrivate":true,"line":"11"},{"kind":"constructor","name":"","id":"1()","children":[{"ref":{"name":"_EventSink","refId":"dart.async/_EventSink"},"initializedField":{"name":"_sink","refId":"dart.async/_EventSinkWrapper/_sink"},"kind":"param","name":"_sink","id":"_sink","isPrivate":true}],"line":"12"},{"kind":"typeparam","name":"T","id":"T"}],"isPrivate":true,"uri":"dart-sdk/lib/async/stream_transformers.dart","line":"10"},{"superclass":{"name":"_ForwardingStream","refId":"dart.async/_ForwardingStream","arguments":[{"name":"T","refId":"dart.async/_DistinctStream/T"},{"name":"T","refId":"dart.async/_DistinctStream/T"}]},"kind":"class","name":"_DistinctStream","id":"_DistinctStream","children":[{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_handleData","id":"_handleData2()","children":[{"ref":{"name":"T","refId":"dart.async/_DistinctStream/T"},"kind":"param","name":"inputEvent","id":"inputEvent"},{"ref":{"name":"_EventSink","refId":"dart.async/_EventSink","arguments":[{"name":"T","refId":"dart.async/_DistinctStream/T"}]},"kind":"param","name":"sink","id":"sink"}],"isPrivate":true,"line":"385"},{"isStatic":true,"kind":"variable","name":"_SENTINEL","id":"_SENTINEL","isPrivate":true,"line":"377"},{"ref":{"name":"_Equality","refId":"dart.async/_Equality"},"kind":"variable","name":"_equals","id":"_equals","isPrivate":true,"line":"379"},{"kind":"variable","name":"_previous","id":"_previous","isPrivate":true,"line":"380"},{"kind":"constructor","name":"","id":"2()","children":[{"ref":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"T","refId":"dart.async/_DistinctStream/T"}]},"kind":"param","name":"source","id":"source"},{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"equals","id":"equals","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"T","refId":"dart.async/_DistinctStream/T"},"kind":"param","name":"a","id":"a","uri":"dart-sdk/lib/async/stream_pipe.dart","line":"382"},{"ref":{"name":"T","refId":"dart.async/_DistinctStream/T"},"kind":"param","name":"b","id":"b","uri":"dart-sdk/lib/async/stream_pipe.dart","line":"382"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"382"},{"kind":"typeparam","name":"T","id":"T"}],"isPrivate":true,"uri":"dart-sdk/lib/async/stream_pipe.dart","line":"376"},{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"typedef","name":"_Equality","id":"_Equality","children":[{"ref":{"name":"T","refId":"dart.async/_Equality/T"},"kind":"param","name":"a","id":"a"},{"ref":{"name":"T","refId":"dart.async/_Equality/T"},"kind":"param","name":"b","id":"b"},{"kind":"typeparam","name":"T","id":"T"}],"isPrivate":true,"uri":"dart-sdk/lib/async/stream_pipe.dart","line":"374"},{"superclass":{"name":"_ForwardingStream","refId":"dart.async/_ForwardingStream","arguments":[{"name":"T","refId":"dart.async/_SkipWhileStream/T"},{"name":"T","refId":"dart.async/_SkipWhileStream/T"}]},"kind":"class","name":"_SkipWhileStream","id":"_SkipWhileStream","children":[{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_handleData","id":"_handleData2()","children":[{"ref":{"name":"T","refId":"dart.async/_SkipWhileStream/T"},"kind":"param","name":"inputEvent","id":"inputEvent"},{"ref":{"name":"_EventSink","refId":"dart.async/_EventSink","arguments":[{"name":"T","refId":"dart.async/_SkipWhileStream/T"}]},"kind":"param","name":"sink","id":"sink"}],"isPrivate":true,"line":"353"},{"ref":{"name":"_Predicate","refId":"dart.async/_Predicate"},"isFinal":true,"kind":"variable","name":"_test","id":"_test","isPrivate":true,"line":"347"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"variable","name":"_hasFailed","id":"_hasFailed","isPrivate":true,"line":"348"},{"kind":"constructor","name":"","id":"2()","children":[{"ref":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"T","refId":"dart.async/_SkipWhileStream/T"}]},"kind":"param","name":"source","id":"source"},{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"test","id":"test","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"T","refId":"dart.async/_SkipWhileStream/T"},"kind":"param","name":"value","id":"value","uri":"dart-sdk/lib/async/stream_pipe.dart","line":"350"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"350"},{"kind":"typeparam","name":"T","id":"T"}],"isPrivate":true,"uri":"dart-sdk/lib/async/stream_pipe.dart","line":"346"},{"superclass":{"name":"_ForwardingStream","refId":"dart.async/_ForwardingStream","arguments":[{"name":"T","refId":"dart.async/_SkipStream/T"},{"name":"T","refId":"dart.async/_SkipStream/T"}]},"kind":"class","name":"_SkipStream","id":"_SkipStream","children":[{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_handleData","id":"_handleData2()","children":[{"ref":{"name":"T","refId":"dart.async/_SkipStream/T"},"kind":"param","name":"inputEvent","id":"inputEvent"},{"ref":{"name":"_EventSink","refId":"dart.async/_EventSink","arguments":[{"name":"T","refId":"dart.async/_SkipStream/T"}]},"kind":"param","name":"sink","id":"sink"}],"isPrivate":true,"line":"337"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"_remaining","id":"_remaining","isPrivate":true,"line":"328"},{"kind":"constructor","name":"","id":"2()","children":[{"ref":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"T","refId":"dart.async/_SkipStream/T"}]},"kind":"param","name":"source","id":"source"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"count","id":"count"}],"line":"330"},{"kind":"typeparam","name":"T","id":"T"}],"isPrivate":true,"uri":"dart-sdk/lib/async/stream_pipe.dart","line":"327"},{"superclass":{"name":"_ForwardingStream","refId":"dart.async/_ForwardingStream","arguments":[{"name":"T","refId":"dart.async/_TakeWhileStream/T"},{"name":"T","refId":"dart.async/_TakeWhileStream/T"}]},"kind":"class","name":"_TakeWhileStream","id":"_TakeWhileStream","children":[{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_handleData","id":"_handleData2()","children":[{"ref":{"name":"T","refId":"dart.async/_TakeWhileStream/T"},"kind":"param","name":"inputEvent","id":"inputEvent"},{"ref":{"name":"_EventSink","refId":"dart.async/_EventSink","arguments":[{"name":"T","refId":"dart.async/_TakeWhileStream/T"}]},"kind":"param","name":"sink","id":"sink"}],"isPrivate":true,"line":"309"},{"ref":{"name":"_Predicate","refId":"dart.async/_Predicate"},"isFinal":true,"kind":"variable","name":"_test","id":"_test","isPrivate":true,"line":"304"},{"kind":"constructor","name":"","id":"2()","children":[{"ref":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"T","refId":"dart.async/_TakeWhileStream/T"}]},"kind":"param","name":"source","id":"source"},{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"test","id":"test","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"T","refId":"dart.async/_TakeWhileStream/T"},"kind":"param","name":"value","id":"value","uri":"dart-sdk/lib/async/stream_pipe.dart","line":"306"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"306"},{"kind":"typeparam","name":"T","id":"T"}],"isPrivate":true,"uri":"dart-sdk/lib/async/stream_pipe.dart","line":"303"},{"superclass":{"name":"_ForwardingStream","refId":"dart.async/_ForwardingStream","arguments":[{"name":"T","refId":"dart.async/_TakeStream/T"},{"name":"T","refId":"dart.async/_TakeStream/T"}]},"kind":"class","name":"_TakeStream","id":"_TakeStream","children":[{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_handleData","id":"_handleData2()","children":[{"ref":{"name":"T","refId":"dart.async/_TakeStream/T"},"kind":"param","name":"inputEvent","id":"inputEvent"},{"ref":{"name":"_EventSink","refId":"dart.async/_EventSink","arguments":[{"name":"T","refId":"dart.async/_TakeStream/T"}]},"kind":"param","name":"sink","id":"sink"}],"isPrivate":true,"line":"289"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"_remaining","id":"_remaining","isPrivate":true,"line":"280"},{"kind":"constructor","name":"","id":"2()","children":[{"ref":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"T","refId":"dart.async/_TakeStream/T"}]},"kind":"param","name":"source","id":"source"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"count","id":"count"}],"line":"282"},{"kind":"typeparam","name":"T","id":"T"}],"isPrivate":true,"uri":"dart-sdk/lib/async/stream_pipe.dart","line":"279"},{"superclass":{"name":"_ForwardingStream","refId":"dart.async/_ForwardingStream","arguments":[{"name":"T","refId":"dart.async/_HandleErrorStream/T"},{"name":"T","refId":"dart.async/_HandleErrorStream/T"}]},"kind":"class","name":"_HandleErrorStream","id":"_HandleErrorStream","comment":"\nA stream pipe that converts or disposes error events\nbefore passing them on.\n","children":[{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_handleError","id":"_handleError3()","children":[{"ref":{"name":"Object","refId":"dart.core/Object"},"kind":"param","name":"error","id":"error"},{"ref":{"name":"StackTrace","refId":"dart.core/StackTrace"},"kind":"param","name":"stackTrace","id":"stackTrace"},{"ref":{"name":"_EventSink","refId":"dart.async/_EventSink","arguments":[{"name":"T","refId":"dart.async/_HandleErrorStream/T"}]},"kind":"param","name":"sink","id":"sink"}],"isPrivate":true,"line":"251"},{"ref":{"name":"Function","refId":"dart.core/Function"},"isFinal":true,"kind":"variable","name":"_transform","id":"_transform","isPrivate":true,"line":"243"},{"ref":{"name":"_ErrorTest","refId":"dart.async/_ErrorTest"},"isFinal":true,"kind":"variable","name":"_test","id":"_test","isPrivate":true,"line":"244"},{"kind":"constructor","name":"","id":"3()","children":[{"ref":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"T","refId":"dart.async/_HandleErrorStream/T"}]},"kind":"param","name":"source","id":"source"},{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"onError","id":"onError","line":"247"},{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"test","id":"test","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"functiontype","name":"Function","id":"Function","children":[{"kind":"param","name":"error","id":"error","uri":"dart-sdk/lib/async/stream_pipe.dart","line":"248"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}],"line":"248"}],"line":"246"},{"kind":"typeparam","name":"T","id":"T"}],"isPrivate":true,"uri":"dart-sdk/lib/async/stream_pipe.dart","line":"242"},{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"typedef","name":"_ErrorTest","id":"_ErrorTest","children":[{"kind":"param","name":"error","id":"error"}],"isPrivate":true,"uri":"dart-sdk/lib/async/stream_pipe.dart","line":"236"},{"superclass":{"name":"_ForwardingStream","refId":"dart.async/_ForwardingStream","arguments":[{"name":"S","refId":"dart.async/_ExpandStream/S"},{"name":"T","refId":"dart.async/_ExpandStream/T"}]},"kind":"class","name":"_ExpandStream","id":"_ExpandStream","comment":"\nA stream pipe that converts data events before passing them on.\n","children":[{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_handleData","id":"_handleData2()","children":[{"ref":{"name":"S","refId":"dart.async/_ExpandStream/S"},"kind":"param","name":"inputEvent","id":"inputEvent"},{"ref":{"name":"_EventSink","refId":"dart.async/_EventSink","arguments":[{"name":"T","refId":"dart.async/_ExpandStream/T"}]},"kind":"param","name":"sink","id":"sink"}],"isPrivate":true,"line":"222"},{"ref":{"name":"_Transformation","refId":"dart.async/_Transformation"},"isFinal":true,"kind":"variable","name":"_expand","id":"_expand","isPrivate":true,"line":"217"},{"kind":"constructor","name":"","id":"2()","children":[{"ref":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"S","refId":"dart.async/_ExpandStream/S"}]},"kind":"param","name":"source","id":"source"},{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"expand","id":"expand","children":[{"returnType":{"name":"Iterable","refId":"dart.core/Iterable","arguments":[{"name":"T","refId":"dart.async/_ExpandStream/T"}]},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"S","refId":"dart.async/_ExpandStream/S"},"kind":"param","name":"event","id":"event","uri":"dart-sdk/lib/async/stream_pipe.dart","line":"219"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"219"},{"kind":"typeparam","name":"S","id":"S"},{"kind":"typeparam","name":"T","id":"T"}],"isPrivate":true,"uri":"dart-sdk/lib/async/stream_pipe.dart","line":"216"},{"superclass":{"name":"_ForwardingStream","refId":"dart.async/_ForwardingStream","arguments":[{"name":"S","refId":"dart.async/_MapStream/S"},{"name":"T","refId":"dart.async/_MapStream/T"}]},"kind":"class","name":"_MapStream","id":"_MapStream","comment":"\nA stream pipe that converts data events before passing them on.\n","children":[{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_handleData","id":"_handleData2()","children":[{"ref":{"name":"S","refId":"dart.async/_MapStream/S"},"kind":"param","name":"inputEvent","id":"inputEvent"},{"ref":{"name":"_EventSink","refId":"dart.async/_EventSink","arguments":[{"name":"T","refId":"dart.async/_MapStream/T"}]},"kind":"param","name":"sink","id":"sink"}],"isPrivate":true,"line":"201"},{"ref":{"name":"_Transformation","refId":"dart.async/_Transformation"},"isFinal":true,"kind":"variable","name":"_transform","id":"_transform","isPrivate":true,"line":"196"},{"kind":"constructor","name":"","id":"2()","children":[{"ref":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"S","refId":"dart.async/_MapStream/S"}]},"kind":"param","name":"source","id":"source"},{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"transform","id":"transform","children":[{"returnType":{"name":"T","refId":"dart.async/_MapStream/T"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"S","refId":"dart.async/_MapStream/S"},"kind":"param","name":"event","id":"event","uri":"dart-sdk/lib/async/stream_pipe.dart","line":"198"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"198"},{"kind":"typeparam","name":"S","id":"S"},{"kind":"typeparam","name":"T","id":"T"}],"isPrivate":true,"uri":"dart-sdk/lib/async/stream_pipe.dart","line":"195"},{"returnType":{"name":"T","refId":"dart.async/_Transformation/T"},"kind":"typedef","name":"_Transformation","id":"_Transformation","children":[{"ref":{"name":"S","refId":"dart.async/_Transformation/S"},"kind":"param","name":"value","id":"value"},{"kind":"typeparam","name":"S","id":"S"},{"kind":"typeparam","name":"T","id":"T"}],"isPrivate":true,"uri":"dart-sdk/lib/async/stream_pipe.dart","line":"190"},{"superclass":{"name":"_ForwardingStream","refId":"dart.async/_ForwardingStream","arguments":[{"name":"T","refId":"dart.async/_WhereStream/T"},{"name":"T","refId":"dart.async/_WhereStream/T"}]},"kind":"class","name":"_WhereStream","id":"_WhereStream","children":[{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_handleData","id":"_handleData2()","children":[{"ref":{"name":"T","refId":"dart.async/_WhereStream/T"},"kind":"param","name":"inputEvent","id":"inputEvent"},{"ref":{"name":"_EventSink","refId":"dart.async/_EventSink","arguments":[{"name":"T","refId":"dart.async/_WhereStream/T"}]},"kind":"param","name":"sink","id":"sink"}],"isPrivate":true,"line":"175"},{"ref":{"name":"_Predicate","refId":"dart.async/_Predicate"},"isFinal":true,"kind":"variable","name":"_test","id":"_test","isPrivate":true,"line":"170"},{"kind":"constructor","name":"","id":"2()","children":[{"ref":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"T","refId":"dart.async/_WhereStream/T"}]},"kind":"param","name":"source","id":"source"},{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"test","id":"test","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"T","refId":"dart.async/_WhereStream/T"},"kind":"param","name":"value","id":"value","uri":"dart-sdk/lib/async/stream_pipe.dart","line":"172"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"172"},{"kind":"typeparam","name":"T","id":"T"}],"isPrivate":true,"uri":"dart-sdk/lib/async/stream_pipe.dart","line":"169"},{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"typedef","name":"_Predicate","id":"_Predicate","children":[{"ref":{"name":"T","refId":"dart.async/_Predicate/T"},"kind":"param","name":"value","id":"value"},{"kind":"typeparam","name":"T","id":"T"}],"isPrivate":true,"uri":"dart-sdk/lib/async/stream_pipe.dart","line":"167"},{"superclass":{"name":"_BufferingStreamSubscription","refId":"dart.async/_BufferingStreamSubscription","arguments":[{"name":"T","refId":"dart.async/_ForwardingStreamSubscription/T"}]},"kind":"class","name":"_ForwardingStreamSubscription","id":"_ForwardingStreamSubscription","comment":"\nAbstract superclass for subscriptions that forward to other subscriptions.\n","children":[{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_add","id":"_add1()","children":[{"ref":{"name":"T","refId":"dart.async/_ForwardingStreamSubscription/T"},"kind":"param","name":"data","id":"data"}],"isPrivate":true,"line":"117"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_addError","id":"_addError2()","children":[{"ref":{"name":"Object","refId":"dart.core/Object"},"kind":"param","name":"error","id":"error"},{"ref":{"name":"StackTrace","refId":"dart.core/StackTrace"},"kind":"param","name":"stackTrace","id":"stackTrace"}],"isPrivate":true,"line":"122"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_onPause","id":"_onPause0()","isPrivate":true,"line":"129"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_onResume","id":"_onResume0()","isPrivate":true,"line":"134"},{"returnType":{"name":"Future","refId":"dart.async/Future"},"kind":"method","name":"_onCancel","id":"_onCancel0()","isPrivate":true,"line":"139"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_handleData","id":"_handleData1()","children":[{"ref":{"name":"S","refId":"dart.async/_ForwardingStreamSubscription/S"},"kind":"param","name":"data","id":"data"}],"isPrivate":true,"line":"150"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_handleError","id":"_handleError2()","children":[{"kind":"param","name":"error","id":"error"},{"ref":{"name":"StackTrace","refId":"dart.core/StackTrace"},"kind":"param","name":"stackTrace","id":"stackTrace"}],"isPrivate":true,"line":"154"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_handleDone","id":"_handleDone0()","isPrivate":true,"line":"158"},{"ref":{"name":"_ForwardingStream","refId":"dart.async/_ForwardingStream","arguments":[{"name":"S","refId":"dart.async/_ForwardingStreamSubscription/S"},{"name":"T","refId":"dart.async/_ForwardingStreamSubscription/T"}]},"isFinal":true,"kind":"variable","name":"_stream","id":"_stream","isPrivate":true,"line":"102"},{"ref":{"name":"StreamSubscription","refId":"dart.async/StreamSubscription","arguments":[{"name":"S","refId":"dart.async/_ForwardingStreamSubscription/S"}]},"kind":"variable","name":"_subscription","id":"_subscription","isPrivate":true,"line":"104"},{"kind":"constructor","name":"","id":"2()","children":[{"ref":{"name":"_ForwardingStream","refId":"dart.async/_ForwardingStream","arguments":[{"name":"S","refId":"dart.async/_ForwardingStreamSubscription/S"},{"name":"T","refId":"dart.async/_ForwardingStreamSubscription/T"}]},"initializedField":{"name":"_stream","refId":"dart.async/_ForwardingStreamSubscription/_stream"},"kind":"param","name":"_stream","id":"_stream","isPrivate":true},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"param","name":"cancelOnError","id":"cancelOnError"}],"line":"106"},{"kind":"typeparam","name":"S","id":"S"},{"kind":"typeparam","name":"T","id":"T"}],"isPrivate":true,"uri":"dart-sdk/lib/async/stream_pipe.dart","line":"100"},{"superclass":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"T","refId":"dart.async/_ForwardingStream/T"}]},"isAbstract":true,"kind":"class","name":"_ForwardingStream","id":"_ForwardingStream","comment":"\nA [Stream] that forwards subscriptions to another stream.\n\nThis stream implements [Stream], but forwards all subscriptions\nto an underlying stream, and wraps the returned subscription to\nmodify the events on the way.\n\nThis class is intended for internal use only.\n","children":[{"returnType":{"name":"StreamSubscription","refId":"dart.async/StreamSubscription","arguments":[{"name":"T","refId":"dart.async/_ForwardingStream/T"}]},"kind":"method","name":"listen","id":"listen4()","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"onData","id":"onData","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"T","refId":"dart.async/_ForwardingStream/T"},"kind":"param","name":"value","id":"value","uri":"dart-sdk/lib/async/stream_pipe.dart","line":"65"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]},{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"isNamed":true,"kind":"param","name":"onError","id":"onError","line":"66"},{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"isNamed":true,"kind":"param","name":"onDone","id":"onDone","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","uri":"dart-sdk/lib/core/function.dart","line":"13"}],"line":"67"},{"ref":{"name":"bool","refId":"dart.core/bool"},"isOptional":true,"isNamed":true,"kind":"param","name":"cancelOnError","id":"cancelOnError","line":"68"}],"line":"65"},{"returnType":{"name":"StreamSubscription","refId":"dart.async/StreamSubscription","arguments":[{"name":"T","refId":"dart.async/_ForwardingStream/T"}]},"kind":"method","name":"_createSubscription","id":"_createSubscription1()","children":[{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"param","name":"cancelOnError","id":"cancelOnError"}],"isPrivate":true,"line":"77"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_handleData","id":"_handleData2()","children":[{"ref":{"name":"S","refId":"dart.async/_ForwardingStream/S"},"kind":"param","name":"data","id":"data"},{"ref":{"name":"_EventSink","refId":"dart.async/_EventSink","arguments":[{"name":"T","refId":"dart.async/_ForwardingStream/T"}]},"kind":"param","name":"sink","id":"sink"}],"isPrivate":true,"line":"83"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_handleError","id":"_handleError3()","children":[{"kind":"param","name":"error","id":"error"},{"ref":{"name":"StackTrace","refId":"dart.core/StackTrace"},"kind":"param","name":"stackTrace","id":"stackTrace"},{"ref":{"name":"_EventSink","refId":"dart.async/_EventSink","arguments":[{"name":"T","refId":"dart.async/_ForwardingStream/T"}]},"kind":"param","name":"sink","id":"sink"}],"isPrivate":true,"line":"88"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_handleDone","id":"_handleDone1()","children":[{"ref":{"name":"_EventSink","refId":"dart.async/_EventSink","arguments":[{"name":"T","refId":"dart.async/_ForwardingStream/T"}]},"kind":"param","name":"sink","id":"sink"}],"isPrivate":true,"line":"92"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"isBroadcast","id":"isBroadcast","line":"63"},{"ref":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"S","refId":"dart.async/_ForwardingStream/S"}]},"isFinal":true,"kind":"variable","name":"_source","id":"_source","isPrivate":true,"line":"59"},{"kind":"constructor","name":"","id":"1()","children":[{"ref":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"S","refId":"dart.async/_ForwardingStream/S"}]},"initializedField":{"name":"_source","refId":"dart.async/_ForwardingStream/_source"},"kind":"param","name":"_source","id":"_source","isPrivate":true}],"line":"61"},{"kind":"typeparam","name":"S","id":"S"},{"kind":"typeparam","name":"T","id":"T"}],"isPrivate":true,"uri":"dart-sdk/lib/async/stream_pipe.dart","line":"58"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"interfaces":[{"name":"StreamIterator","refId":"dart.async/StreamIterator","arguments":[{"name":"T","refId":"dart.async/_StreamIteratorImpl/T"}]}],"kind":"class","name":"_StreamIteratorImpl","id":"_StreamIteratorImpl","comment":"\nSimple implementation of [StreamIterator].\n","children":[{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"bool","refId":"dart.core/bool"}]},"kind":"method","name":"moveNext","id":"moveNext0()","line":"946"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_clear","id":"_clear0()","comment":"Clears up the internal state when the iterator ends. ","isPrivate":true,"line":"978"},{"returnType":{"name":"Future","refId":"dart.async/Future"},"kind":"method","name":"cancel","id":"cancel0()","line":"985"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_onData","id":"_onData1()","children":[{"ref":{"name":"T","refId":"dart.async/_StreamIteratorImpl/T"},"kind":"param","name":"data","id":"data"}],"isPrivate":true,"line":"997"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_onError","id":"_onError2()","children":[{"ref":{"name":"Object","refId":"dart.core/Object"},"kind":"param","name":"error","id":"error"},{"ref":{"name":"StackTrace","refId":"dart.core/StackTrace"},"isOptional":true,"kind":"param","name":"stackTrace","id":"stackTrace"}],"isPrivate":true,"line":"1012"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_onDone","id":"_onDone0()","isPrivate":true,"line":"1026"},{"ref":{"name":"T","refId":"dart.async/_StreamIteratorImpl/T"},"kind":"property","name":"current","id":"current","line":"944"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"_STATE_FOUND","id":"_STATE_FOUND","comment":"The simple state where [_data] holds the data to return, and [moveNext]\nis allowed. The subscription is actively listening.","isPrivate":true,"line":"902"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"_STATE_DONE","id":"_STATE_DONE","comment":"State set after [moveNext] has returned false or an error,\nor after calling [cancel]. The subscription is always canceled.","isPrivate":true,"line":"905"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"_STATE_MOVING","id":"_STATE_MOVING","comment":"State set after calling [moveNext], but before its returned future has\ncompleted. Calling [moveNext] again is not allowed in this state.\nThe subscription is actively listening.","isPrivate":true,"line":"909"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"_STATE_EXTRA_DATA","id":"_STATE_EXTRA_DATA","comment":"States set when another event occurs while in _STATE_FOUND.\nThis extra overflow event is cached until the next call to [moveNext],\nwhich will complete as if it received the event normally.\nThe subscription is paused in these states, so we only ever get one\nevent too many.","isPrivate":true,"line":"915"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"_STATE_EXTRA_ERROR","id":"_STATE_EXTRA_ERROR","isPrivate":true,"line":"916"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"_STATE_EXTRA_DONE","id":"_STATE_EXTRA_DONE","isPrivate":true,"line":"917"},{"ref":{"name":"StreamSubscription","refId":"dart.async/StreamSubscription"},"kind":"variable","name":"_subscription","id":"_subscription","comment":"Subscription being listened to.","isPrivate":true,"line":"920"},{"ref":{"name":"T","refId":"dart.async/_StreamIteratorImpl/T"},"kind":"variable","name":"_current","id":"_current","comment":"The current element represented by the most recent call to moveNext.\n\nIs null between the time moveNext is called and its future completes.","isPrivate":true,"line":"925"},{"kind":"variable","name":"_futureOrPrefetch","id":"_futureOrPrefetch","comment":"The future returned by the most recent call to [moveNext].\n\nAlso used to store the next value/error in case the stream provides an\nevent before [moveNext] is called again. In that case, the stream will\nbe paused to prevent further events.","isPrivate":true,"line":"932"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"_state","id":"_state","comment":"The current state.","isPrivate":true,"line":"935"},{"kind":"constructor","name":"","id":"1()","children":[{"ref":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"T","refId":"dart.async/_StreamIteratorImpl/T"}]},"kind":"param","name":"stream","id":"stream"}],"line":"937"},{"kind":"typeparam","name":"T","id":"T"}],"isPrivate":true,"uri":"dart-sdk/lib/async/stream_impl.dart","line":"891"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"interfaces":[{"name":"StreamSubscription","refId":"dart.async/StreamSubscription","arguments":[{"name":"T","refId":"dart.async/_BroadcastSubscriptionWrapper/T"}]}],"kind":"class","name":"_BroadcastSubscriptionWrapper","id":"_BroadcastSubscriptionWrapper","comment":"\nWrapper for subscription that disallows changing handlers.\n","children":[{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"onData","id":"onData1()","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"handleData","id":"handleData","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"T","refId":"dart.async/_BroadcastSubscriptionWrapper/T"},"kind":"param","name":"data","id":"data","uri":"dart-sdk/lib/async/stream_impl.dart","line":"849"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"849"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"onError","id":"onError1()","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"handleError","id":"handleError","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"Object","refId":"dart.core/Object"},"kind":"param","name":"data","id":"data","uri":"dart-sdk/lib/async/stream_impl.dart","line":"854"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"854"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"onDone","id":"onDone1()","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"handleDone","id":"handleDone","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"859"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"pause","id":"pause1()","children":[{"ref":{"name":"Future","refId":"dart.async/Future"},"isOptional":true,"kind":"param","name":"resumeSignal","id":"resumeSignal"}],"line":"864"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"resume","id":"resume0()","line":"868"},{"returnType":{"name":"Future","refId":"dart.async/Future"},"kind":"method","name":"cancel","id":"cancel0()","line":"872"},{"returnType":{"name":"Future","refId":"dart.async/Future"},"kind":"method","name":"asFuture","id":"asFuture1()","children":[{"isOptional":true,"kind":"param","name":"futureValue","id":"futureValue"}],"line":"881"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"isPaused","id":"isPaused","line":"877"},{"ref":{"name":"_AsBroadcastStream","refId":"dart.async/_AsBroadcastStream"},"isFinal":true,"kind":"variable","name":"_stream","id":"_stream","isPrivate":true,"line":"845"},{"kind":"constructor","name":"","id":"1()","children":[{"ref":{"name":"_AsBroadcastStream","refId":"dart.async/_AsBroadcastStream"},"initializedField":{"name":"_stream","refId":"dart.async/_BroadcastSubscriptionWrapper/_stream"},"kind":"param","name":"_stream","id":"_stream","isPrivate":true}],"line":"847"},{"kind":"typeparam","name":"T","id":"T"}],"isPrivate":true,"uri":"dart-sdk/lib/async/stream_impl.dart","line":"844"},{"superclass":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"T","refId":"dart.async/_AsBroadcastStream/T"}]},"kind":"class","name":"_AsBroadcastStream","id":"_AsBroadcastStream","children":[{"returnType":{"name":"StreamSubscription","refId":"dart.async/StreamSubscription","arguments":[{"name":"T","refId":"dart.async/_AsBroadcastStream/T"}]},"kind":"method","name":"listen","id":"listen4()","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"onData","id":"onData","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"T","refId":"dart.async/_AsBroadcastStream/T"},"kind":"param","name":"data","id":"data","uri":"dart-sdk/lib/async/stream_impl.dart","line":"774"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]},{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"isNamed":true,"kind":"param","name":"onError","id":"onError","line":"775"},{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"isNamed":true,"kind":"param","name":"onDone","id":"onDone","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","uri":"dart-sdk/lib/core/function.dart","line":"13"}],"line":"776"},{"ref":{"name":"bool","refId":"dart.core/bool"},"isOptional":true,"isNamed":true,"kind":"param","name":"cancelOnError","id":"cancelOnError","line":"777"}],"line":"774"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_onCancel","id":"_onCancel0()","isPrivate":true,"line":"796"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_onListen","id":"_onListen0()","isPrivate":true,"line":"809"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_cancelSubscription","id":"_cancelSubscription0()","isPrivate":true,"line":"816"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_pauseSubscription","id":"_pauseSubscription1()","children":[{"ref":{"name":"Future","refId":"dart.async/Future"},"kind":"param","name":"resumeSignal","id":"resumeSignal"}],"isPrivate":true,"line":"825"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_resumeSubscription","id":"_resumeSubscription0()","isPrivate":true,"line":"830"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"isBroadcast","id":"isBroadcast","line":"772"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"_isSubscriptionPaused","id":"_isSubscriptionPaused","isPrivate":true,"line":"835"},{"ref":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"T","refId":"dart.async/_AsBroadcastStream/T"}]},"isFinal":true,"kind":"variable","name":"_source","id":"_source","isPrivate":true,"line":"755"},{"ref":{"name":"_broadcastCallback","refId":"dart.async/_broadcastCallback"},"isFinal":true,"kind":"variable","name":"_onListenHandler","id":"_onListenHandler","isPrivate":true,"line":"756"},{"ref":{"name":"_broadcastCallback","refId":"dart.async/_broadcastCallback"},"isFinal":true,"kind":"variable","name":"_onCancelHandler","id":"_onCancelHandler","isPrivate":true,"line":"757"},{"ref":{"name":"Zone","refId":"dart.async/Zone"},"isFinal":true,"kind":"variable","name":"_zone","id":"_zone","isPrivate":true,"line":"758"},{"ref":{"name":"_AsBroadcastStreamController","refId":"dart.async/_AsBroadcastStreamController","arguments":[{"name":"T","refId":"dart.async/_AsBroadcastStream/T"}]},"kind":"variable","name":"_controller","id":"_controller","isPrivate":true,"line":"760"},{"ref":{"name":"StreamSubscription","refId":"dart.async/StreamSubscription","arguments":[{"name":"T","refId":"dart.async/_AsBroadcastStream/T"}]},"kind":"variable","name":"_subscription","id":"_subscription","isPrivate":true,"line":"761"},{"kind":"constructor","name":"","id":"3()","children":[{"ref":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"T","refId":"dart.async/_AsBroadcastStream/T"}]},"initializedField":{"name":"_source","refId":"dart.async/_AsBroadcastStream/_source"},"kind":"param","name":"_source","id":"_source","isPrivate":true},{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"onListenHandler","id":"onListenHandler","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"StreamSubscription","refId":"dart.async/StreamSubscription"},"kind":"param","name":"subscription","id":"subscription","uri":"dart-sdk/lib/async/stream_impl.dart","line":"764"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}],"line":"764"},{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"onCancelHandler","id":"onCancelHandler","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"StreamSubscription","refId":"dart.async/StreamSubscription"},"kind":"param","name":"subscription","id":"subscription","uri":"dart-sdk/lib/async/stream_impl.dart","line":"765"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}],"line":"765"}],"line":"763"},{"kind":"typeparam","name":"T","id":"T"}],"isPrivate":true,"uri":"dart-sdk/lib/async/stream_impl.dart","line":"754"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"interfaces":[{"name":"StreamSubscription","refId":"dart.async/StreamSubscription","arguments":[{"name":"T","refId":"dart.async/_DummyStreamSubscription/T"}]}],"kind":"class","name":"_DummyStreamSubscription","id":"_DummyStreamSubscription","comment":"\nDummy subscription that will never receive any events.\n","children":[{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"onData","id":"onData1()","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"handleData","id":"handleData","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"T","refId":"dart.async/_DummyStreamSubscription/T"},"kind":"param","name":"data","id":"data","uri":"dart-sdk/lib/async/stream_impl.dart","line":"737"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"737"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"onError","id":"onError1()","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"handleError","id":"handleError"}],"line":"738"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"onDone","id":"onDone1()","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"handleDone","id":"handleDone","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"739"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"pause","id":"pause1()","children":[{"ref":{"name":"Future","refId":"dart.async/Future"},"isOptional":true,"kind":"param","name":"resumeSignal","id":"resumeSignal"}],"line":"741"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"resume","id":"resume0()","line":"745"},{"returnType":{"name":"Future","refId":"dart.async/Future"},"kind":"method","name":"cancel","id":"cancel0()","line":"748"},{"returnType":{"name":"Future","refId":"dart.async/Future"},"kind":"method","name":"asFuture","id":"asFuture1()","children":[{"isOptional":true,"kind":"param","name":"futureValue","id":"futureValue"}],"line":"751"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"isPaused","id":"isPaused","line":"749"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"_pauseCounter","id":"_pauseCounter","isPrivate":true,"line":"735"},{"kind":"typeparam","name":"T","id":"T"}],"isPrivate":true,"uri":"dart-sdk/lib/async/stream_impl.dart","line":"734"},{"returnType":{"name":"void","refId":"void"},"kind":"typedef","name":"_broadcastCallback","id":"_broadcastCallback","children":[{"ref":{"name":"StreamSubscription","refId":"dart.async/StreamSubscription"},"kind":"param","name":"subscription","id":"subscription"}],"isPrivate":true,"uri":"dart-sdk/lib/async/stream_impl.dart","line":"729"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"kind":"class","name":"_BroadcastLinkedList","id":"_BroadcastLinkedList","children":[{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_unlink","id":"_unlink0()","isPrivate":true,"line":"714"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_insertBefore","id":"_insertBefore1()","children":[{"ref":{"name":"_BroadcastLinkedList","refId":"dart.async/_BroadcastLinkedList"},"kind":"param","name":"newNext","id":"newNext"}],"isPrivate":true,"line":"720"},{"ref":{"name":"_BroadcastLinkedList","refId":"dart.async/_BroadcastLinkedList"},"kind":"variable","name":"_next","id":"_next","isPrivate":true,"line":"711"},{"ref":{"name":"_BroadcastLinkedList","refId":"dart.async/_BroadcastLinkedList"},"kind":"variable","name":"_previous","id":"_previous","isPrivate":true,"line":"712"}],"isPrivate":true,"uri":"dart-sdk/lib/async/stream_impl.dart","line":"710"},{"superclass":{"name":"_PendingEvents","refId":"dart.async/_PendingEvents"},"kind":"class","name":"_StreamImplEvents","id":"_StreamImplEvents","comment":"Class holding pending events for a [_StreamImpl]. ","children":[{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"add","id":"add1()","children":[{"ref":{"name":"_DelayedEvent","refId":"dart.async/_DelayedEvent"},"kind":"param","name":"event","id":"event"}],"line":"686"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"handleNext","id":"handleNext1()","children":[{"ref":{"name":"_EventDispatch","refId":"dart.async/_EventDispatch"},"kind":"param","name":"dispatch","id":"dispatch"}],"line":"694"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"clear","id":"clear0()","line":"704"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"isEmpty","id":"isEmpty","line":"684"},{"ref":{"name":"_DelayedEvent","refId":"dart.async/_DelayedEvent"},"kind":"variable","name":"firstPendingEvent","id":"firstPendingEvent","comment":"Single linked list of [_DelayedEvent] objects.","line":"680"},{"ref":{"name":"_DelayedEvent","refId":"dart.async/_DelayedEvent"},"kind":"variable","name":"lastPendingEvent","id":"lastPendingEvent","comment":"Last element in the list of pending events. New events are added after it.","line":"682"}],"isPrivate":true,"uri":"dart-sdk/lib/async/stream_impl.dart","line":"678"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"kind":"class","name":"_PendingEvents","id":"_PendingEvents","comment":"Superclass for provider of pending events. ","children":[{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"schedule","id":"schedule1()","comment":"\nSchedule an event to run later.\n\nIf called more than once, it should be called with the same dispatch as\nargument each time. It may reuse an earlier argument in some cases.\n","children":[{"ref":{"name":"_EventDispatch","refId":"dart.async/_EventDispatch"},"kind":"param","name":"dispatch","id":"dispatch"}],"line":"649"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"cancelSchedule","id":"cancelSchedule0()","line":"666"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"handleNext","id":"handleNext1()","children":[{"ref":{"name":"_EventDispatch","refId":"dart.async/_EventDispatch"},"kind":"param","name":"dispatch","id":"dispatch"}],"line":"670"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"clear","id":"clear0()","comment":"Throw away any pending events and cancel scheduled events. ","line":"673"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"isEmpty","id":"isEmpty","line":"638"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"isScheduled","id":"isScheduled","line":"640"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"_eventScheduled","id":"_eventScheduled","isPrivate":true,"line":"641"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"_STATE_UNSCHEDULED","id":"_STATE_UNSCHEDULED","isPrivate":true,"line":"617"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"_STATE_SCHEDULED","id":"_STATE_SCHEDULED","isPrivate":true,"line":"619"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"_STATE_CANCELED","id":"_STATE_CANCELED","isPrivate":true,"line":"622"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"_state","id":"_state","comment":"\nState of being scheduled.\n\nSet to [_STATE_SCHEDULED] when pending events are scheduled for\nasync dispatch. Since we can't cancel a [scheduleMicrotask] call, if\nscheduling is \"canceled\", the _state is simply set to [_STATE_CANCELED]\nwhich will make the async code do nothing except resetting [_state].\n\nIf events are scheduled while the state is [_STATE_CANCELED], it is\nmerely switched back to [_STATE_SCHEDULED], but no new call to\n[scheduleMicrotask] is performed.\n","isPrivate":true,"line":"636"}],"isPrivate":true,"uri":"dart-sdk/lib/async/stream_impl.dart","line":"615"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"interfaces":[{"name":"_DelayedEvent","refId":"dart.async/_DelayedEvent"}],"kind":"class","name":"_DelayedDone","id":"_DelayedDone","comment":"A delayed done event. ","children":[{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"perform","id":"perform1()","children":[{"ref":{"name":"_EventDispatch","refId":"dart.async/_EventDispatch"},"kind":"param","name":"dispatch","id":"dispatch"}],"line":"603"},{"returnType":{"name":"void","refId":"void"},"isSetter":true,"kind":"method","name":"next=","id":"next=1()","children":[{"ref":{"name":"_DelayedEvent","refId":"dart.async/_DelayedEvent"},"kind":"param","name":"_","id":"_","isPrivate":true}],"line":"609"},{"ref":{"name":"_DelayedEvent","refId":"dart.async/_DelayedEvent"},"kind":"property","name":"next","id":"next","line":"607"},{"kind":"constructor","name":"","id":"0()","line":"602"}],"isPrivate":true,"uri":"dart-sdk/lib/async/stream_impl.dart","line":"601"},{"superclass":{"name":"_DelayedEvent","refId":"dart.async/_DelayedEvent"},"kind":"class","name":"_DelayedError","id":"_DelayedError","comment":"A delayed error event. ","children":[{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"perform","id":"perform1()","children":[{"ref":{"name":"_EventDispatch","refId":"dart.async/_EventDispatch"},"kind":"param","name":"dispatch","id":"dispatch"}],"line":"595"},{"isFinal":true,"kind":"variable","name":"error","id":"error","line":"591"},{"ref":{"name":"StackTrace","refId":"dart.core/StackTrace"},"isFinal":true,"kind":"variable","name":"stackTrace","id":"stackTrace","line":"592"},{"kind":"constructor","name":"","id":"2()","children":[{"initializedField":{"name":"error","refId":"dart.async/_DelayedError/error"},"kind":"param","name":"error","id":"error"},{"ref":{"name":"StackTrace","refId":"dart.core/StackTrace"},"initializedField":{"name":"stackTrace","refId":"dart.async/_DelayedError/stackTrace"},"kind":"param","name":"stackTrace","id":"stackTrace"}],"line":"594"}],"isPrivate":true,"uri":"dart-sdk/lib/async/stream_impl.dart","line":"590"},{"superclass":{"name":"_DelayedEvent","refId":"dart.async/_DelayedEvent"},"kind":"class","name":"_DelayedData","id":"_DelayedData","comment":"A delayed data event. ","children":[{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"perform","id":"perform1()","children":[{"ref":{"name":"_EventDispatch","refId":"dart.async/_EventDispatch","arguments":[{"name":"T","refId":"dart.async/_DelayedData/T"}]},"kind":"param","name":"dispatch","id":"dispatch"}],"line":"584"},{"ref":{"name":"T","refId":"dart.async/_DelayedData/T"},"isFinal":true,"kind":"variable","name":"value","id":"value","line":"582"},{"kind":"constructor","name":"","id":"1()","children":[{"ref":{"name":"T","refId":"dart.async/_DelayedData/T"},"initializedField":{"name":"value","refId":"dart.async/_DelayedData/value"},"kind":"param","name":"value","id":"value"}],"line":"583"},{"kind":"typeparam","name":"T","id":"T"}],"isPrivate":true,"uri":"dart-sdk/lib/async/stream_impl.dart","line":"581"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"kind":"class","name":"_DelayedEvent","id":"_DelayedEvent","comment":"A delayed event on a buffering stream subscription. ","children":[{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"perform","id":"perform1()","comment":"Execute the delayed event on the [StreamController]. ","children":[{"ref":{"name":"_EventDispatch","refId":"dart.async/_EventDispatch"},"kind":"param","name":"dispatch","id":"dispatch"}],"line":"577"},{"ref":{"name":"_DelayedEvent","refId":"dart.async/_DelayedEvent"},"kind":"variable","name":"next","id":"next","comment":"Added as a linked list on the [StreamController]. ","line":"575"}],"isPrivate":true,"uri":"dart-sdk/lib/async/stream_impl.dart","line":"573"},{"returnType":{"name":"void","refId":"void"},"kind":"typedef","name":"_DoneHandler","id":"_DoneHandler","isPrivate":true,"uri":"dart-sdk/lib/async/stream_impl.dart","line":"557"},{"returnType":{"name":"void","refId":"void"},"kind":"typedef","name":"_DataHandler","id":"_DataHandler","children":[{"ref":{"name":"T","refId":"dart.async/_DataHandler/T"},"kind":"param","name":"value","id":"value"},{"kind":"typeparam","name":"T","id":"T"}],"isPrivate":true,"uri":"dart-sdk/lib/async/stream_impl.dart","line":"556"},{"superclass":{"name":"_PendingEvents","refId":"dart.async/_PendingEvents"},"kind":"class","name":"_IterablePendingEvents","id":"_IterablePendingEvents","comment":"Pending events object that gets its events from an [Iterable]. ","children":[{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"handleNext","id":"handleNext1()","children":[{"ref":{"name":"_EventDispatch","refId":"dart.async/_EventDispatch"},"kind":"param","name":"dispatch","id":"dispatch"}],"line":"521"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"clear","id":"clear0()","line":"546"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"isEmpty","id":"isEmpty","line":"519"},{"ref":{"name":"Iterator","refId":"dart.core/Iterator","arguments":[{"name":"T","refId":"dart.async/_IterablePendingEvents/T"}]},"kind":"variable","name":"_iterator","id":"_iterator","isPrivate":true,"line":"515"},{"kind":"constructor","name":"","id":"1()","children":[{"ref":{"name":"Iterable","refId":"dart.core/Iterable","arguments":[{"name":"T","refId":"dart.async/_IterablePendingEvents/T"}]},"kind":"param","name":"data","id":"data"}],"line":"517"},{"kind":"typeparam","name":"T","id":"T"}],"isPrivate":true,"uri":"dart-sdk/lib/async/stream_impl.dart","line":"512"},{"superclass":{"name":"_StreamImpl","refId":"dart.async/_StreamImpl","arguments":[{"name":"T","refId":"dart.async/_GeneratedStreamImpl/T"}]},"kind":"class","name":"_GeneratedStreamImpl","id":"_GeneratedStreamImpl","comment":"Stream that generates its own events. ","children":[{"returnType":{"name":"StreamSubscription","refId":"dart.async/StreamSubscription"},"kind":"method","name":"_createSubscription","id":"_createSubscription1()","children":[{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"param","name":"cancelOnError","id":"cancelOnError"}],"isPrivate":true,"line":"500"},{"ref":{"name":"_EventGenerator","refId":"dart.async/_EventGenerator"},"isFinal":true,"kind":"variable","name":"_pending","id":"_pending","isPrivate":true,"line":"490"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"variable","name":"_isUsed","id":"_isUsed","isPrivate":true,"line":"491"},{"kind":"constructor","name":"","id":"1()","comment":"\nInitializes the stream to have only the events provided by a\n[_PendingEvents].\n\nA new [_PendingEvents] must be generated for each listen.\n","children":[{"ref":{"name":"_EventGenerator","refId":"dart.async/_EventGenerator"},"initializedField":{"name":"_pending","refId":"dart.async/_GeneratedStreamImpl/_pending"},"kind":"param","name":"_pending","id":"_pending","isPrivate":true}],"line":"498"},{"kind":"typeparam","name":"T","id":"T"}],"isPrivate":true,"uri":"dart-sdk/lib/async/stream_impl.dart","line":"489"},{"returnType":{"name":"_PendingEvents","refId":"dart.async/_PendingEvents"},"kind":"typedef","name":"_EventGenerator","id":"_EventGenerator","isPrivate":true,"uri":"dart-sdk/lib/async/stream_impl.dart","line":"486"},{"superclass":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"T","refId":"dart.async/_StreamImpl/T"}]},"isAbstract":true,"kind":"class","name":"_StreamImpl","id":"_StreamImpl","children":[{"returnType":{"name":"StreamSubscription","refId":"dart.async/StreamSubscription","arguments":[{"name":"T","refId":"dart.async/_StreamImpl/T"}]},"kind":"method","name":"listen","id":"listen4()","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"onData","id":"onData","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"T","refId":"dart.async/_StreamImpl/T"},"kind":"param","name":"data","id":"data","uri":"dart-sdk/lib/async/stream_impl.dart","line":"463"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]},{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"isNamed":true,"kind":"param","name":"onError","id":"onError","line":"464"},{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"isNamed":true,"kind":"param","name":"onDone","id":"onDone","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","uri":"dart-sdk/lib/core/function.dart","line":"13"}],"line":"465"},{"ref":{"name":"bool","refId":"dart.core/bool"},"isOptional":true,"isNamed":true,"kind":"param","name":"cancelOnError","id":"cancelOnError","line":"466"}],"line":"463"},{"returnType":{"name":"_BufferingStreamSubscription","refId":"dart.async/_BufferingStreamSubscription","arguments":[{"name":"T","refId":"dart.async/_StreamImpl/T"}]},"kind":"method","name":"_createSubscription","id":"_createSubscription1()","comment":"Create a subscription object. Called by [subcribe]. ","children":[{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"param","name":"cancelOnError","id":"cancelOnError"}],"isPrivate":true,"line":"478"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_onListen","id":"_onListen1()","comment":"Hook called when the subscription has been created. ","children":[{"ref":{"name":"StreamSubscription","refId":"dart.async/StreamSubscription"},"kind":"param","name":"subscription","id":"subscription"}],"isPrivate":true,"line":"483"},{"kind":"typeparam","name":"T","id":"T"}],"isPrivate":true,"uri":"dart-sdk/lib/async/stream_impl.dart","line":"459"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"interfaces":[{"name":"_EventDispatch","refId":"dart.async/_EventDispatch","arguments":[{"name":"T","refId":"dart.async/_BufferingStreamSubscription/T"}]},{"name":"_EventSink","refId":"dart.async/_EventSink","arguments":[{"name":"T","refId":"dart.async/_BufferingStreamSubscription/T"}]},{"name":"StreamSubscription","refId":"dart.async/StreamSubscription","arguments":[{"name":"T","refId":"dart.async/_BufferingStreamSubscription/T"}]}],"kind":"class","name":"_BufferingStreamSubscription","id":"_BufferingStreamSubscription","comment":"\nDefault implementation of stream subscription of buffering events.\n\nThe only public methods are those of [StreamSubscription], so instances of\n[_BufferingStreamSubscription] can be returned directly as a\n[StreamSubscription] without exposing internal functionality.\n\nThe [StreamController] is a public facing version of [Stream] and this class,\nwith some methods made public.\n\nThe user interface of [_BufferingStreamSubscription] are the following\nmethods:\n\n* [_add]: Add a data event to the stream.\n* [_addError]: Add an error event to the stream.\n* [_close]: Request to close the stream.\n* [_onCancel]: Called when the subscription will provide no more events,\n    either due to being actively canceled, or after sending a done event.\n* [_onPause]: Called when the subscription wants the event source to pause.\n* [_onResume]: Called when allowing new events after a pause.\n\nThe user should not add new events when the subscription requests a paused,\nbut if it happens anyway, the subscription will enqueue the events just as\nwhen new events arrive while still firing an old event.\n","children":[{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_setPendingEvents","id":"_setPendingEvents1()","comment":"\nSets the subscription's pending events object.\n\nThis can only be done once. The pending events object is used for the\nrest of the subscription's life cycle.\n","children":[{"ref":{"name":"_PendingEvents","refId":"dart.async/_PendingEvents"},"kind":"param","name":"pendingEvents","id":"pendingEvents"}],"isPrivate":true,"line":"120"},{"returnType":{"name":"_PendingEvents","refId":"dart.async/_PendingEvents"},"kind":"method","name":"_extractPending","id":"_extractPending0()","comment":"\nExtracts the pending events from a canceled stream.\n\nThis can only be done during the [_onCancel] method call. After that,\nany remaining pending events will be cleared.\n","isPrivate":true,"line":"136"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"onData","id":"onData1()","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"handleData","id":"handleData","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"T","refId":"dart.async/_BufferingStreamSubscription/T"},"kind":"param","name":"event","id":"event","uri":"dart-sdk/lib/async/stream_impl.dart","line":"145"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"145"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"onError","id":"onError1()","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"handleError","id":"handleError"}],"line":"150"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"onDone","id":"onDone1()","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"handleDone","id":"handleDone","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"155"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"pause","id":"pause1()","children":[{"ref":{"name":"Future","refId":"dart.async/Future"},"isOptional":true,"kind":"param","name":"resumeSignal","id":"resumeSignal"}],"line":"160"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"resume","id":"resume0()","line":"171"},{"returnType":{"name":"Future","refId":"dart.async/Future"},"kind":"method","name":"cancel","id":"cancel0()","line":"188"},{"returnType":{"name":"Future","refId":"dart.async/Future"},"kind":"method","name":"asFuture","id":"asFuture1()","children":[{"isOptional":true,"kind":"param","name":"futureValue","id":"futureValue"}],"line":"198"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_cancel","id":"_cancel0()","isPrivate":true,"line":"227"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_incrementPauseCount","id":"_incrementPauseCount0()","comment":"\nIncrement the pause count.\n\nAlso marks input as paused.\n","isPrivate":true,"line":"241"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_decrementPauseCount","id":"_decrementPauseCount0()","comment":"\nDecrements the pause count.\n\nDoes not automatically unpause the input (call [_onResume]) when\nthe pause count reaches zero. This is handled elsewhere, and only\nif there are no pending events buffered.\n","isPrivate":true,"line":"252"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_add","id":"_add1()","children":[{"ref":{"name":"T","refId":"dart.async/_BufferingStreamSubscription/T"},"kind":"param","name":"data","id":"data"}],"isPrivate":true,"line":"259"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_addError","id":"_addError2()","children":[{"ref":{"name":"Object","refId":"dart.core/Object"},"kind":"param","name":"error","id":"error"},{"ref":{"name":"StackTrace","refId":"dart.core/StackTrace"},"kind":"param","name":"stackTrace","id":"stackTrace"}],"isPrivate":true,"line":"269"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_close","id":"_close0()","isPrivate":true,"line":"278"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_onPause","id":"_onPause0()","isPrivate":true,"line":"293"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_onResume","id":"_onResume0()","isPrivate":true,"line":"297"},{"returnType":{"name":"Future","refId":"dart.async/Future"},"kind":"method","name":"_onCancel","id":"_onCancel0()","isPrivate":true,"line":"301"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_addPending","id":"_addPending1()","comment":"\nAdd a pending event.\n\nIf the subscription is not paused, this also schedules a firing\nof pending events later (if necessary).\n","children":[{"ref":{"name":"_DelayedEvent","refId":"dart.async/_DelayedEvent"},"kind":"param","name":"event","id":"event"}],"isPrivate":true,"line":"313"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_sendData","id":"_sendData1()","children":[{"ref":{"name":"T","refId":"dart.async/_BufferingStreamSubscription/T"},"kind":"param","name":"data","id":"data"}],"isPrivate":true,"line":"327"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_sendError","id":"_sendError2()","children":[{"kind":"param","name":"error","id":"error"},{"ref":{"name":"StackTrace","refId":"dart.core/StackTrace"},"kind":"param","name":"stackTrace","id":"stackTrace"}],"isPrivate":true,"line":"338"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_sendDone","id":"_sendDone0()","isPrivate":true,"line":"375"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_guardCallback","id":"_guardCallback1()","comment":"\nCall a hook function.\n\nThe call is properly wrapped in code to avoid other callbacks\nduring the call, and it checks for state changes after the call\nthat should cause further callbacks.\n","children":[{"kind":"param","name":"callback","id":"callback"}],"isPrivate":true,"line":"405"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_checkState","id":"_checkState1()","comment":"\nCheck if the input needs to be informed of state changes.\n\nState changes are pausing, resuming and canceling.\n\nAfter canceling, no further callbacks will happen.\n\nThe cancel callback is called after a user cancel, or after\nthe final done event is sent.\n","children":[{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"param","name":"wasInputPaused","id":"wasInputPaused"}],"isPrivate":true,"line":"424"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"_isInputPaused","id":"_isInputPaused","isPrivate":true,"line":"213"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"_isClosed","id":"_isClosed","isPrivate":true,"line":"214"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"_isCanceled","id":"_isCanceled","isPrivate":true,"line":"215"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"_waitsForCancel","id":"_waitsForCancel","isPrivate":true,"line":"216"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"_inCallback","id":"_inCallback","isPrivate":true,"line":"217"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"_hasPending","id":"_hasPending","isPrivate":true,"line":"218"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"_isPaused","id":"_isPaused","isPrivate":true,"line":"219"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"_canFire","id":"_canFire","isPrivate":true,"line":"220"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"_mayResumeInput","id":"_mayResumeInput","isPrivate":true,"line":"221"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"_cancelOnError","id":"_cancelOnError","isPrivate":true,"line":"223"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"isPaused","id":"isPaused","line":"225"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"_STATE_CANCEL_ON_ERROR","id":"_STATE_CANCEL_ON_ERROR","comment":"The `cancelOnError` flag from the `listen` call. ","isPrivate":true,"line":"56"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"_STATE_CLOSED","id":"_STATE_CLOSED","comment":"\nWhether the \"done\" event has been received.\nNo further events are accepted after this.\n","isPrivate":true,"line":"61"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"_STATE_INPUT_PAUSED","id":"_STATE_INPUT_PAUSED","comment":"\nSet if the input has been asked not to send events.\n\nThis is not the same as being paused, since the input will remain paused\nafter a call to [resume] if there are pending events.\n","isPrivate":true,"line":"68"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"_STATE_CANCELED","id":"_STATE_CANCELED","comment":"\nWhether the subscription has been canceled.\n\nSet by calling [cancel], or by handling a \"done\" event, or an \"error\" event\nwhen `cancelOnError` is true.\n","isPrivate":true,"line":"75"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"_STATE_WAIT_FOR_CANCEL","id":"_STATE_WAIT_FOR_CANCEL","comment":"\nSet when either:\n\n  * an error is sent, and [cancelOnError] is true, or\n  * a done event is sent.\n\nIf the subscription is canceled while _STATE_WAIT_FOR_CANCEL is set, the\nstate is unset, and no furher events must be delivered.\n","isPrivate":true,"line":"85"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"_STATE_IN_CALLBACK","id":"_STATE_IN_CALLBACK","isPrivate":true,"line":"86"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"_STATE_HAS_PENDING","id":"_STATE_HAS_PENDING","isPrivate":true,"line":"87"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"_STATE_PAUSE_COUNT","id":"_STATE_PAUSE_COUNT","isPrivate":true,"line":"88"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"_STATE_PAUSE_COUNT_SHIFT","id":"_STATE_PAUSE_COUNT_SHIFT","isPrivate":true,"line":"89"},{"ref":{"name":"_DataHandler","refId":"dart.async/_DataHandler"},"kind":"variable","name":"_onData","id":"_onData","isPrivate":true,"line":"92"},{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"variable","name":"_onError","id":"_onError","isPrivate":true,"line":"93"},{"ref":{"name":"_DoneHandler","refId":"dart.async/_DoneHandler"},"kind":"variable","name":"_onDone","id":"_onDone","isPrivate":true,"line":"94"},{"ref":{"name":"Zone","refId":"dart.async/Zone"},"isFinal":true,"kind":"variable","name":"_zone","id":"_zone","isPrivate":true,"line":"95"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"_state","id":"_state","comment":"Bit vector based on state-constants above. ","isPrivate":true,"line":"98"},{"ref":{"name":"Future","refId":"dart.async/Future"},"kind":"variable","name":"_cancelFuture","id":"_cancelFuture","comment":"The future [_onCancel] may return. ","isPrivate":true,"line":"102"},{"ref":{"name":"_PendingEvents","refId":"dart.async/_PendingEvents"},"kind":"variable","name":"_pending","id":"_pending","comment":"\nQueue of pending events.\n\nIs created when necessary, or set in constructor for preconfigured events.\n","isPrivate":true,"line":"109"},{"kind":"constructor","name":"","id":"1()","children":[{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"param","name":"cancelOnError","id":"cancelOnError"}],"line":"111"},{"kind":"typeparam","name":"T","id":"T"}],"isPrivate":true,"uri":"dart-sdk/lib/async/stream_impl.dart","line":"52"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"kind":"class","name":"_EventDispatch","id":"_EventDispatch","comment":"\nAbstract and private interface for a place to send events.\n\nUsed by event buffering to finally dispatch the pending event, where\n[_EventSink] is where the event first enters the stream subscription,\nand may yet be buffered.\n","children":[{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_sendData","id":"_sendData1()","children":[{"ref":{"name":"T","refId":"dart.async/_EventDispatch/T"},"kind":"param","name":"data","id":"data"}],"isPrivate":true,"line":"22"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_sendError","id":"_sendError2()","children":[{"ref":{"name":"Object","refId":"dart.core/Object"},"kind":"param","name":"error","id":"error"},{"ref":{"name":"StackTrace","refId":"dart.core/StackTrace"},"kind":"param","name":"stackTrace","id":"stackTrace"}],"isPrivate":true,"line":"23"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_sendDone","id":"_sendDone0()","isPrivate":true,"line":"24"},{"kind":"typeparam","name":"T","id":"T"}],"isPrivate":true,"uri":"dart-sdk/lib/async/stream_impl.dart","line":"21"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"kind":"class","name":"_EventSink","id":"_EventSink","comment":"Abstract and private interface for a place to put events. ","children":[{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_add","id":"_add1()","children":[{"ref":{"name":"T","refId":"dart.async/_EventSink/T"},"kind":"param","name":"data","id":"data"}],"isPrivate":true,"line":"9"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_addError","id":"_addError2()","children":[{"ref":{"name":"Object","refId":"dart.core/Object"},"kind":"param","name":"error","id":"error"},{"ref":{"name":"StackTrace","refId":"dart.core/StackTrace"},"kind":"param","name":"stackTrace","id":"stackTrace"}],"isPrivate":true,"line":"10"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_close","id":"_close0()","isPrivate":true,"line":"11"},{"kind":"typeparam","name":"T","id":"T"}],"isPrivate":true,"uri":"dart-sdk/lib/async/stream_impl.dart","line":"8"},{"superclass":{"name":"_AddStreamState","refId":"dart.async/_AddStreamState","arguments":[{"name":"T","refId":"dart.async/_StreamControllerAddStreamState/T"}]},"kind":"class","name":"_StreamControllerAddStreamState","id":"_StreamControllerAddStreamState","children":[{"kind":"variable","name":"varData","id":"varData","line":"714"},{"kind":"constructor","name":"","id":"4()","children":[{"ref":{"name":"_StreamController","refId":"dart.async/_StreamController"},"kind":"param","name":"controller","id":"controller"},{"initializedField":{"name":"varData","refId":"dart.async/_StreamControllerAddStreamState/varData"},"kind":"param","name":"varData","id":"varData","line":"717"},{"ref":{"name":"Stream","refId":"dart.async/Stream"},"kind":"param","name":"source","id":"source","line":"718"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"param","name":"cancelOnError","id":"cancelOnError","line":"719"}],"line":"716"},{"kind":"typeparam","name":"T","id":"T"}],"isPrivate":true,"uri":"dart-sdk/lib/async/stream_controller.dart","line":"710"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"kind":"class","name":"_AddStreamState","id":"_AddStreamState","comment":"\nObject containing the state used to handle [StreamController.addStream].\n","children":[{"isStatic":true,"kind":"method","name":"makeErrorHandler","id":"makeErrorHandler1()","children":[{"ref":{"name":"_EventSink","refId":"dart.async/_EventSink"},"kind":"param","name":"controller","id":"controller"}],"line":"686"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"pause","id":"pause0()","line":"692"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"resume","id":"resume0()","line":"696"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"cancel","id":"cancel0()","line":"700"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"complete","id":"complete0()","line":"705"},{"ref":{"name":"_Future","refId":"dart.async/_Future"},"isFinal":true,"kind":"variable","name":"addStreamFuture","id":"addStreamFuture","line":"672"},{"ref":{"name":"StreamSubscription","refId":"dart.async/StreamSubscription"},"isFinal":true,"kind":"variable","name":"addSubscription","id":"addSubscription","line":"675"},{"kind":"constructor","name":"","id":"3()","children":[{"ref":{"name":"_EventSink","refId":"dart.async/_EventSink","arguments":[{"name":"T","refId":"dart.async/_AddStreamState/T"}]},"kind":"param","name":"controller","id":"controller"},{"ref":{"name":"Stream","refId":"dart.async/Stream"},"kind":"param","name":"source","id":"source"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"param","name":"cancelOnError","id":"cancelOnError"}],"line":"677"},{"kind":"typeparam","name":"T","id":"T"}],"isPrivate":true,"uri":"dart-sdk/lib/async/stream_controller.dart","line":"670"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"interfaces":[{"name":"StreamSink","refId":"dart.async/StreamSink","arguments":[{"name":"T","refId":"dart.async/_StreamSinkWrapper/T"}]}],"kind":"class","name":"_StreamSinkWrapper","id":"_StreamSinkWrapper","comment":"A class that exposes only the [StreamSink] interface of an object. ","children":[{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"add","id":"add1()","children":[{"ref":{"name":"T","refId":"dart.async/_StreamSinkWrapper/T"},"kind":"param","name":"data","id":"data"}],"line":"657"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"addError","id":"addError2()","children":[{"ref":{"name":"Object","refId":"dart.core/Object"},"kind":"param","name":"error","id":"error"},{"ref":{"name":"StackTrace","refId":"dart.core/StackTrace"},"isOptional":true,"kind":"param","name":"stackTrace","id":"stackTrace"}],"line":"658"},{"returnType":{"name":"Future","refId":"dart.async/Future"},"kind":"method","name":"close","id":"close0()","line":"661"},{"returnType":{"name":"Future","refId":"dart.async/Future"},"kind":"method","name":"addStream","id":"addStream2()","children":[{"ref":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"T","refId":"dart.async/_StreamSinkWrapper/T"}]},"kind":"param","name":"source","id":"source"},{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"true","isOptional":true,"isNamed":true,"kind":"param","name":"cancelOnError","id":"cancelOnError"}],"line":"662"},{"ref":{"name":"Future","refId":"dart.async/Future"},"kind":"property","name":"done","id":"done","line":"664"},{"ref":{"name":"StreamController","refId":"dart.async/StreamController"},"isFinal":true,"kind":"variable","name":"_target","id":"_target","isPrivate":true,"line":"655"},{"kind":"constructor","name":"","id":"1()","children":[{"ref":{"name":"StreamController","refId":"dart.async/StreamController"},"initializedField":{"name":"_target","refId":"dart.async/_StreamSinkWrapper/_target"},"kind":"param","name":"_target","id":"_target","isPrivate":true}],"line":"656"},{"kind":"typeparam","name":"T","id":"T"}],"isPrivate":true,"uri":"dart-sdk/lib/async/stream_controller.dart","line":"654"},{"superclass":{"name":"_BufferingStreamSubscription","refId":"dart.async/_BufferingStreamSubscription","arguments":[{"name":"T","refId":"dart.async/_ControllerSubscription/T"}]},"kind":"class","name":"_ControllerSubscription","id":"_ControllerSubscription","children":[{"returnType":{"name":"Future","refId":"dart.async/Future"},"kind":"method","name":"_onCancel","id":"_onCancel0()","isPrivate":true,"line":"639"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_onPause","id":"_onPause0()","isPrivate":true,"line":"643"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_onResume","id":"_onResume0()","isPrivate":true,"line":"647"},{"ref":{"name":"_StreamControllerLifecycle","refId":"dart.async/_StreamControllerLifecycle","arguments":[{"name":"T","refId":"dart.async/_ControllerSubscription/T"}]},"isFinal":true,"kind":"variable","name":"_controller","id":"_controller","isPrivate":true,"line":"634"},{"kind":"constructor","name":"","id":"2()","children":[{"ref":{"name":"_StreamControllerLifecycle","refId":"dart.async/_StreamControllerLifecycle","arguments":[{"name":"T","refId":"dart.async/_ControllerSubscription/T"}]},"initializedField":{"name":"_controller","refId":"dart.async/_ControllerSubscription/_controller"},"kind":"param","name":"_controller","id":"_controller","isPrivate":true},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"param","name":"cancelOnError","id":"cancelOnError"}],"line":"636"},{"kind":"typeparam","name":"T","id":"T"}],"isPrivate":true,"uri":"dart-sdk/lib/async/stream_controller.dart","line":"633"},{"superclass":{"name":"_StreamImpl","refId":"dart.async/_StreamImpl","arguments":[{"name":"T","refId":"dart.async/_ControllerStream/T"}]},"kind":"class","name":"_ControllerStream","id":"_ControllerStream","children":[{"returnType":{"name":"StreamSubscription","refId":"dart.async/StreamSubscription","arguments":[{"name":"T","refId":"dart.async/_ControllerStream/T"}]},"kind":"method","name":"_createSubscription","id":"_createSubscription1()","children":[{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"param","name":"cancelOnError","id":"cancelOnError"}],"isPrivate":true,"line":"616"},{"returnType":{"name":"bool","refId":"dart.core/bool"},"isOperator":true,"kind":"method","name":"==","id":"==1()","children":[{"ref":{"name":"Object","refId":"dart.core/Object"},"kind":"param","name":"other","id":"other"}],"line":"625"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"property","name":"hashCode","id":"hashCode","line":"623"},{"ref":{"name":"_StreamControllerLifecycle","refId":"dart.async/_StreamControllerLifecycle","arguments":[{"name":"T","refId":"dart.async/_ControllerStream/T"}]},"kind":"variable","name":"_controller","id":"_controller","isPrivate":true,"line":"612"},{"kind":"constructor","name":"","id":"1()","children":[{"ref":{"name":"_StreamControllerLifecycle","refId":"dart.async/_StreamControllerLifecycle","arguments":[{"name":"T","refId":"dart.async/_ControllerStream/T"}]},"initializedField":{"name":"_controller","refId":"dart.async/_ControllerStream/_controller"},"kind":"param","name":"_controller","id":"_controller","isPrivate":true}],"line":"614"},{"kind":"typeparam","name":"T","id":"T"}],"isPrivate":true,"uri":"dart-sdk/lib/async/stream_controller.dart","line":"611"},{"kind":"typedef","name":"_NotificationHandler","id":"_NotificationHandler","isPrivate":true,"uri":"dart-sdk/lib/async/stream_controller.dart","line":"598"},{"superclass":{"name":"_StreamController+_SyncStreamControllerDispatch","refId":"dart.async/_StreamController+_SyncStreamControllerDispatch"},"interfaces":[{"name":"_NoCallbacks","refId":"dart.async/_NoCallbacks"}],"kind":"class","name":"_NoCallbackSyncStreamController","id":"_NoCallbackSyncStreamController","children":[{"ref":{"name":"_NotificationHandler","refId":"dart.async/_NotificationHandler"},"kind":"property","name":"_onListen","id":"_onListen","isPrivate":true,"line":"586"},{"ref":{"name":"_NotificationHandler","refId":"dart.async/_NotificationHandler"},"kind":"property","name":"_onPause","id":"_onPause","isPrivate":true,"line":"587"},{"ref":{"name":"_NotificationHandler","refId":"dart.async/_NotificationHandler"},"kind":"property","name":"_onResume","id":"_onResume","isPrivate":true,"line":"588"},{"ref":{"name":"_NotificationHandler","refId":"dart.async/_NotificationHandler"},"kind":"property","name":"_onCancel","id":"_onCancel","isPrivate":true,"line":"589"}],"isPrivate":true,"uri":"dart-sdk/lib/async/stream_controller.dart","line":"595"},{"superclass":{"name":"_StreamController+_AsyncStreamControllerDispatch","refId":"dart.async/_StreamController+_AsyncStreamControllerDispatch"},"interfaces":[{"name":"_NoCallbacks","refId":"dart.async/_NoCallbacks"}],"kind":"class","name":"_NoCallbackAsyncStreamController","id":"_NoCallbackAsyncStreamController","children":[{"ref":{"name":"_NotificationHandler","refId":"dart.async/_NotificationHandler"},"kind":"property","name":"_onListen","id":"_onListen","isPrivate":true,"line":"586"},{"ref":{"name":"_NotificationHandler","refId":"dart.async/_NotificationHandler"},"kind":"property","name":"_onPause","id":"_onPause","isPrivate":true,"line":"587"},{"ref":{"name":"_NotificationHandler","refId":"dart.async/_NotificationHandler"},"kind":"property","name":"_onResume","id":"_onResume","isPrivate":true,"line":"588"},{"ref":{"name":"_NotificationHandler","refId":"dart.async/_NotificationHandler"},"kind":"property","name":"_onCancel","id":"_onCancel","isPrivate":true,"line":"589"}],"isPrivate":true,"uri":"dart-sdk/lib/async/stream_controller.dart","line":"592"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"kind":"class","name":"_NoCallbacks","id":"_NoCallbacks","children":[{"ref":{"name":"_NotificationHandler","refId":"dart.async/_NotificationHandler"},"kind":"property","name":"_onListen","id":"_onListen","isPrivate":true,"line":"586"},{"ref":{"name":"_NotificationHandler","refId":"dart.async/_NotificationHandler"},"kind":"property","name":"_onPause","id":"_onPause","isPrivate":true,"line":"587"},{"ref":{"name":"_NotificationHandler","refId":"dart.async/_NotificationHandler"},"kind":"property","name":"_onResume","id":"_onResume","isPrivate":true,"line":"588"},{"ref":{"name":"_NotificationHandler","refId":"dart.async/_NotificationHandler"},"kind":"property","name":"_onCancel","id":"_onCancel","isPrivate":true,"line":"589"}],"isPrivate":true,"uri":"dart-sdk/lib/async/stream_controller.dart","line":"585"},{"superclass":{"name":"_StreamController+_SyncStreamControllerDispatch","refId":"dart.async/_StreamController+_SyncStreamControllerDispatch","arguments":[{"name":"T","refId":"dart.async/_SyncStreamController/T"}]},"kind":"class","name":"_SyncStreamController","id":"_SyncStreamController","children":[{"ref":{"name":"_NotificationHandler","refId":"dart.async/_NotificationHandler"},"isFinal":true,"kind":"variable","name":"_onListen","id":"_onListen","isPrivate":true,"line":"574"},{"ref":{"name":"_NotificationHandler","refId":"dart.async/_NotificationHandler"},"isFinal":true,"kind":"variable","name":"_onPause","id":"_onPause","isPrivate":true,"line":"575"},{"ref":{"name":"_NotificationHandler","refId":"dart.async/_NotificationHandler"},"isFinal":true,"kind":"variable","name":"_onResume","id":"_onResume","isPrivate":true,"line":"576"},{"ref":{"name":"_NotificationHandler","refId":"dart.async/_NotificationHandler"},"isFinal":true,"kind":"variable","name":"_onCancel","id":"_onCancel","isPrivate":true,"line":"577"},{"kind":"constructor","name":"","id":"4()","children":[{"ref":{"name":"_NotificationHandler","refId":"dart.async/_NotificationHandler"},"initializedField":{"name":"_onListen","refId":"dart.async/_SyncStreamController/_onListen"},"kind":"param","name":"_onListen","id":"_onListen","isPrivate":true},{"ref":{"name":"_NotificationHandler","refId":"dart.async/_NotificationHandler"},"initializedField":{"name":"_onPause","refId":"dart.async/_SyncStreamController/_onPause"},"kind":"param","name":"_onPause","id":"_onPause","isPrivate":true,"line":"580"},{"ref":{"name":"_NotificationHandler","refId":"dart.async/_NotificationHandler"},"initializedField":{"name":"_onResume","refId":"dart.async/_SyncStreamController/_onResume"},"kind":"param","name":"_onResume","id":"_onResume","isPrivate":true,"line":"581"},{"ref":{"name":"_NotificationHandler","refId":"dart.async/_NotificationHandler"},"initializedField":{"name":"_onCancel","refId":"dart.async/_SyncStreamController/_onCancel"},"kind":"param","name":"_onCancel","id":"_onCancel","isPrivate":true,"line":"582"}],"line":"579"},{"kind":"typeparam","name":"T","id":"T"}],"isPrivate":true,"uri":"dart-sdk/lib/async/stream_controller.dart","line":"572"},{"superclass":{"name":"_StreamController+_AsyncStreamControllerDispatch","refId":"dart.async/_StreamController+_AsyncStreamControllerDispatch","arguments":[{"name":"T","refId":"dart.async/_AsyncStreamController/T"}]},"kind":"class","name":"_AsyncStreamController","id":"_AsyncStreamController","children":[{"ref":{"name":"_NotificationHandler","refId":"dart.async/_NotificationHandler"},"isFinal":true,"kind":"variable","name":"_onListen","id":"_onListen","isPrivate":true,"line":"561"},{"ref":{"name":"_NotificationHandler","refId":"dart.async/_NotificationHandler"},"isFinal":true,"kind":"variable","name":"_onPause","id":"_onPause","isPrivate":true,"line":"562"},{"ref":{"name":"_NotificationHandler","refId":"dart.async/_NotificationHandler"},"isFinal":true,"kind":"variable","name":"_onResume","id":"_onResume","isPrivate":true,"line":"563"},{"ref":{"name":"_NotificationHandler","refId":"dart.async/_NotificationHandler"},"isFinal":true,"kind":"variable","name":"_onCancel","id":"_onCancel","isPrivate":true,"line":"564"},{"kind":"constructor","name":"","id":"4()","children":[{"ref":{"name":"_NotificationHandler","refId":"dart.async/_NotificationHandler"},"initializedField":{"name":"_onListen","refId":"dart.async/_AsyncStreamController/_onListen"},"kind":"param","name":"_onListen","id":"_onListen","isPrivate":true},{"ref":{"name":"_NotificationHandler","refId":"dart.async/_NotificationHandler"},"initializedField":{"name":"_onPause","refId":"dart.async/_AsyncStreamController/_onPause"},"kind":"param","name":"_onPause","id":"_onPause","isPrivate":true,"line":"567"},{"ref":{"name":"_NotificationHandler","refId":"dart.async/_NotificationHandler"},"initializedField":{"name":"_onResume","refId":"dart.async/_AsyncStreamController/_onResume"},"kind":"param","name":"_onResume","id":"_onResume","isPrivate":true,"line":"568"},{"ref":{"name":"_NotificationHandler","refId":"dart.async/_NotificationHandler"},"initializedField":{"name":"_onCancel","refId":"dart.async/_AsyncStreamController/_onCancel"},"kind":"param","name":"_onCancel","id":"_onCancel","isPrivate":true,"line":"569"}],"line":"566"},{"kind":"typeparam","name":"T","id":"T"}],"isPrivate":true,"uri":"dart-sdk/lib/async/stream_controller.dart","line":"559"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"interfaces":[{"name":"_StreamController","refId":"dart.async/_StreamController","arguments":[{"name":"T","refId":"dart.async/_AsyncStreamControllerDispatch/T"}]}],"kind":"class","name":"_AsyncStreamControllerDispatch","id":"_AsyncStreamControllerDispatch","children":[{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_sendData","id":"_sendData1()","children":[{"ref":{"name":"T","refId":"dart.async/_AsyncStreamControllerDispatch/T"},"kind":"param","name":"data","id":"data"}],"isPrivate":true,"line":"543"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_sendError","id":"_sendError2()","children":[{"ref":{"name":"Object","refId":"dart.core/Object"},"kind":"param","name":"error","id":"error"},{"ref":{"name":"StackTrace","refId":"dart.core/StackTrace"},"kind":"param","name":"stackTrace","id":"stackTrace"}],"isPrivate":true,"line":"547"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_sendDone","id":"_sendDone0()","isPrivate":true,"line":"551"},{"kind":"typeparam","name":"T","id":"T"}],"isPrivate":true,"uri":"dart-sdk/lib/async/stream_controller.dart","line":"541"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"interfaces":[{"name":"_StreamController","refId":"dart.async/_StreamController","arguments":[{"name":"T","refId":"dart.async/_SyncStreamControllerDispatch/T"}]}],"kind":"class","name":"_SyncStreamControllerDispatch","id":"_SyncStreamControllerDispatch","children":[{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_sendData","id":"_sendData1()","children":[{"ref":{"name":"T","refId":"dart.async/_SyncStreamControllerDispatch/T"},"kind":"param","name":"data","id":"data"}],"isPrivate":true,"line":"528"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_sendError","id":"_sendError2()","children":[{"ref":{"name":"Object","refId":"dart.core/Object"},"kind":"param","name":"error","id":"error"},{"ref":{"name":"StackTrace","refId":"dart.core/StackTrace"},"kind":"param","name":"stackTrace","id":"stackTrace"}],"isPrivate":true,"line":"532"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_sendDone","id":"_sendDone0()","isPrivate":true,"line":"536"},{"kind":"typeparam","name":"T","id":"T"}],"isPrivate":true,"uri":"dart-sdk/lib/async/stream_controller.dart","line":"526"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"interfaces":[{"name":"_EventDispatch","refId":"dart.async/_EventDispatch","arguments":[{"name":"T","refId":"dart.async/_StreamController/T"}]},{"name":"_EventSink","refId":"dart.async/_EventSink","arguments":[{"name":"T","refId":"dart.async/_StreamController/T"}]},{"name":"_StreamControllerLifecycle","refId":"dart.async/_StreamControllerLifecycle","arguments":[{"name":"T","refId":"dart.async/_StreamController/T"}]},{"name":"StreamController","refId":"dart.async/StreamController","arguments":[{"name":"T","refId":"dart.async/_StreamController/T"}]}],"kind":"class","name":"_StreamController","id":"_StreamController","comment":"\nDefault implementation of [StreamController].\n\nControls a stream that only supports a single controller.\n","children":[{"returnType":{"name":"_StreamImplEvents","refId":"dart.async/_StreamImplEvents"},"kind":"method","name":"_ensurePendingEvents","id":"_ensurePendingEvents0()","isPrivate":true,"line":"330"},{"returnType":{"name":"Error","refId":"dart.core/Error"},"kind":"method","name":"_badEventState","id":"_badEventState0()","comment":"\nCreates an error describing why an event cannot be added.\n\nThe reason, and therefore the error message, depends on the current state.\n","isPrivate":true,"line":"358"},{"returnType":{"name":"Future","refId":"dart.async/Future"},"kind":"method","name":"addStream","id":"addStream2()","children":[{"ref":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"T","refId":"dart.async/_StreamController/T"}]},"kind":"param","name":"source","id":"source"},{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"true","isOptional":true,"isNamed":true,"kind":"param","name":"cancelOnError","id":"cancelOnError"}],"line":"367"},{"returnType":{"name":"Future","refId":"dart.async/Future"},"kind":"method","name":"_ensureDoneFuture","id":"_ensureDoneFuture0()","isPrivate":true,"line":"382"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"add","id":"add1()","comment":"\nSend or enqueue a data event.\n","children":[{"ref":{"name":"T","refId":"dart.async/_StreamController/T"},"kind":"param","name":"value","id":"value"}],"line":"393"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"addError","id":"addError2()","comment":"\nSend or enqueue an error event.\n","children":[{"ref":{"name":"Object","refId":"dart.core/Object"},"kind":"param","name":"error","id":"error"},{"ref":{"name":"StackTrace","refId":"dart.core/StackTrace"},"isOptional":true,"kind":"param","name":"stackTrace","id":"stackTrace"}],"line":"401"},{"returnType":{"name":"Future","refId":"dart.async/Future"},"kind":"method","name":"close","id":"close0()","comment":"\nCloses this controller.\n\nAfter closing, no further events may be added using [add] or [addError].\n\nYou are allowed to close the controller more than once, but only the first\ncall has any effect.\n\nThe first time a controller is closed, a \"done\" event is sent to its\nstream.\n","line":"417"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_add","id":"_add1()","children":[{"ref":{"name":"T","refId":"dart.async/_StreamController/T"},"kind":"param","name":"value","id":"value"}],"isPrivate":true,"line":"436"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_addError","id":"_addError2()","children":[{"ref":{"name":"Object","refId":"dart.core/Object"},"kind":"param","name":"error","id":"error"},{"ref":{"name":"StackTrace","refId":"dart.core/StackTrace"},"kind":"param","name":"stackTrace","id":"stackTrace"}],"isPrivate":true,"line":"444"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_close","id":"_close0()","isPrivate":true,"line":"452"},{"returnType":{"name":"StreamSubscription","refId":"dart.async/StreamSubscription","arguments":[{"name":"T","refId":"dart.async/_StreamController/T"}]},"kind":"method","name":"_subscribe","id":"_subscribe1()","children":[{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"param","name":"cancelOnError","id":"cancelOnError"}],"isPrivate":true,"line":"463"},{"returnType":{"name":"Future","refId":"dart.async/Future"},"kind":"method","name":"_recordCancel","id":"_recordCancel1()","children":[{"ref":{"name":"StreamSubscription","refId":"dart.async/StreamSubscription","arguments":[{"name":"T","refId":"dart.async/_StreamController/T"}]},"kind":"param","name":"subscription","id":"subscription"}],"isPrivate":true,"line":"487"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_recordPause","id":"_recordPause1()","children":[{"ref":{"name":"StreamSubscription","refId":"dart.async/StreamSubscription","arguments":[{"name":"T","refId":"dart.async/_StreamController/T"}]},"kind":"param","name":"subscription","id":"subscription"}],"isPrivate":true,"line":"509"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_recordResume","id":"_recordResume1()","children":[{"ref":{"name":"StreamSubscription","refId":"dart.async/StreamSubscription","arguments":[{"name":"T","refId":"dart.async/_StreamController/T"}]},"kind":"param","name":"subscription","id":"subscription"}],"isPrivate":true,"line":"517"},{"ref":{"name":"_NotificationHandler","refId":"dart.async/_NotificationHandler"},"kind":"property","name":"_onListen","id":"_onListen","isPrivate":true,"line":"276"},{"ref":{"name":"_NotificationHandler","refId":"dart.async/_NotificationHandler"},"kind":"property","name":"_onPause","id":"_onPause","isPrivate":true,"line":"277"},{"ref":{"name":"_NotificationHandler","refId":"dart.async/_NotificationHandler"},"kind":"property","name":"_onResume","id":"_onResume","isPrivate":true,"line":"278"},{"ref":{"name":"_NotificationHandler","refId":"dart.async/_NotificationHandler"},"kind":"property","name":"_onCancel","id":"_onCancel","isPrivate":true,"line":"279"},{"ref":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"T","refId":"dart.async/_StreamController/T"}]},"kind":"property","name":"stream","id":"stream","line":"282"},{"ref":{"name":"StreamSink","refId":"dart.async/StreamSink","arguments":[{"name":"T","refId":"dart.async/_StreamController/T"}]},"kind":"property","name":"sink","id":"sink","comment":"\nReturns a view of this object that only exposes the [StreamSink] interface.\n","line":"287"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"_isCanceled","id":"_isCanceled","comment":"\nWhether a listener has existed and been canceled.\n\nAfter this, adding more events will be ignored.\n","isPrivate":true,"line":"294"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"hasListener","id":"hasListener","comment":"Whether there is an active listener. ","line":"297"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"_isInitialState","id":"_isInitialState","comment":"Whether there has not been a listener yet. ","isPrivate":true,"line":"300"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"isClosed","id":"isClosed","line":"303"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"isPaused","id":"isPaused","line":"305"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"_isAddingStream","id":"_isAddingStream","isPrivate":true,"line":"308"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"_mayAddEvent","id":"_mayAddEvent","comment":"New events may not be added after close, or during addStream. ","isPrivate":true,"line":"311"},{"ref":{"name":"_PendingEvents","refId":"dart.async/_PendingEvents"},"kind":"property","name":"_pendingEvents","id":"_pendingEvents","isPrivate":true,"line":"320"},{"ref":{"name":"_ControllerSubscription","refId":"dart.async/_ControllerSubscription"},"kind":"property","name":"_subscription","id":"_subscription","isPrivate":true,"line":"344"},{"ref":{"name":"Future","refId":"dart.async/Future"},"kind":"property","name":"done","id":"done","line":"380"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"_STATE_INITIAL","id":"_STATE_INITIAL","comment":"The controller is in its initial state with no subscription. ","isPrivate":true,"line":"220"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"_STATE_SUBSCRIBED","id":"_STATE_SUBSCRIBED","comment":"The controller has a subscription, but hasn't been closed or canceled. ","isPrivate":true,"line":"222"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"_STATE_CANCELED","id":"_STATE_CANCELED","comment":"The subscription is canceled. ","isPrivate":true,"line":"224"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"_STATE_SUBSCRIPTION_MASK","id":"_STATE_SUBSCRIPTION_MASK","comment":"Mask for the subscription state. ","isPrivate":true,"line":"226"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"_STATE_CLOSED","id":"_STATE_CLOSED","comment":"\nThe controller is closed due to calling [close].\n\nWhen the stream is closed, you can neither add new events nor add new\nlisteners.\n","isPrivate":true,"line":"239"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"_STATE_ADDSTREAM","id":"_STATE_ADDSTREAM","comment":"\nThe controller is in the middle of an [addStream] operation.\n\nWhile adding events from a stream, no new events can be added directly\non the controller.\n","isPrivate":true,"line":"246"},{"kind":"variable","name":"_varData","id":"_varData","comment":"\nField containing different data depending on the current subscription\nstate.\n\nIf [_state] is [_STATE_INITIAL], the field may contain a [_PendingEvents]\nfor events added to the controller before a subscription.\n\nWhile [_state] is [_STATE_SUBSCRIBED], the field contains the subscription.\n\nWhen [_state] is [_STATE_CANCELED] the field is currently not used.\n","isPrivate":true,"line":"259"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"_state","id":"_state","comment":"Current state of the controller. ","isPrivate":true,"line":"262"},{"ref":{"name":"_Future","refId":"dart.async/_Future"},"kind":"variable","name":"_doneFuture","id":"_doneFuture","comment":"\nFuture completed when the stream sends its last event.\n\nThis is also the future returned by [close].\n","isPrivate":true,"line":"272"},{"kind":"constructor","name":"","id":"0()","line":"274"},{"kind":"typeparam","name":"T","id":"T"}],"isPrivate":true,"uri":"dart-sdk/lib/async/stream_controller.dart","line":"205"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"kind":"class","name":"_StreamControllerLifecycle","id":"_StreamControllerLifecycle","children":[{"returnType":{"name":"StreamSubscription","refId":"dart.async/StreamSubscription","arguments":[{"name":"T","refId":"dart.async/_StreamControllerLifecycle/T"}]},"kind":"method","name":"_subscribe","id":"_subscribe1()","children":[{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"param","name":"cancelOnError","id":"cancelOnError"}],"isPrivate":true,"line":"194"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_recordPause","id":"_recordPause1()","children":[{"ref":{"name":"StreamSubscription","refId":"dart.async/StreamSubscription","arguments":[{"name":"T","refId":"dart.async/_StreamControllerLifecycle/T"}]},"kind":"param","name":"subscription","id":"subscription"}],"isPrivate":true,"line":"195"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_recordResume","id":"_recordResume1()","children":[{"ref":{"name":"StreamSubscription","refId":"dart.async/StreamSubscription","arguments":[{"name":"T","refId":"dart.async/_StreamControllerLifecycle/T"}]},"kind":"param","name":"subscription","id":"subscription"}],"isPrivate":true,"line":"196"},{"returnType":{"name":"Future","refId":"dart.async/Future"},"kind":"method","name":"_recordCancel","id":"_recordCancel1()","children":[{"ref":{"name":"StreamSubscription","refId":"dart.async/StreamSubscription","arguments":[{"name":"T","refId":"dart.async/_StreamControllerLifecycle/T"}]},"kind":"param","name":"subscription","id":"subscription"}],"isPrivate":true,"line":"197"},{"kind":"typeparam","name":"T","id":"T"}],"isPrivate":true,"uri":"dart-sdk/lib/async/stream_controller.dart","line":"193"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"interfaces":[{"name":"StreamSink","refId":"dart.async/StreamSink","arguments":[{"name":"T","refId":"dart.async/StreamController/T"}]}],"kind":"class","name":"StreamController","id":"StreamController","comment":"\nA controller with the stream it controls.\n\nThis controller allows sending data, error and done events on\nits [stream].\nThis class can be used to create a simple stream that others\ncan listen on, and to push events to that stream.\n\nIt's possible to check whether the stream is paused or not, and whether\nit has subscribers or not, as well as getting a callback when either of\nthese change.\n\nIf the stream starts or stops having listeners (first listener subscribing,\nlast listener unsubscribing), the `onSubscriptionStateChange` callback\nis notified as soon as possible. If the subscription stat changes during\nan event firing or a callback being executed, the change will not be reported\nuntil the current event or callback has finished.\nIf the pause state has also changed during an event or callback, only the\nsubscription state callback is notified.\n\nIf the subscriber state has not changed, but the pause state has, the\n`onPauseStateChange` callback is notified as soon as possible, after firing\na current event or completing another callback. This happens if the stream\nis not paused, and a listener pauses it, or if the stream has been resumed\nfrom pause and has no pending events. If the listeners resume a paused stream\nwhile it still has queued events, the controller will still consider the\nstream paused until all queued events have been dispatched.\n\nWhether to invoke a callback depends only on the state before and after\na stream action, for example firing an event. If the state changes multiple\ntimes during the action, and then ends up in the same state as before, no\ncallback is performed.\n\nIf listeners are added after the stream has completed (sent a \"done\" event),\nthe listeners will be sent a \"done\" event eventually, but they won't affect\nthe stream at all, and won't trigger callbacks. From the controller's point\nof view, the stream is completely inert when has completed.\n","children":[{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"addError","id":"addError2()","comment":"\nSend or enqueue an error event.\n\nAlso allows an objection stack trace object, on top of what [EventSink]\nallows.\n","children":[{"ref":{"name":"Object","refId":"dart.core/Object"},"kind":"param","name":"error","id":"error"},{"ref":{"name":"StackTrace","refId":"dart.core/StackTrace"},"isOptional":true,"kind":"param","name":"stackTrace","id":"stackTrace"}],"line":"169"},{"returnType":{"name":"Future","refId":"dart.async/Future"},"kind":"method","name":"addStream","id":"addStream2()","comment":"\nReceives events from [source] and puts them into this controller's stream.\n\nReturns a future which completes when the source stream is done.\n\nEvents must not be added directly to this controller using [add],\n[addError], [close] or [addStream], until the returned future\nis complete.\n\nData and error events are forwarded to this controller's stream. A done\nevent on the source will end the `addStream` operation and complete the\nreturned future.\n\nIf [cancelOnError] is true, only the first error on [source] is\nforwarded to the controller's stream, and the `addStream` ends\nafter this. If [cancelOnError] is false, all errors are forwarded\nand only a done event will end the `addStream`.\n","children":[{"ref":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"T","refId":"dart.async/StreamController/T"}]},"kind":"param","name":"source","id":"source"},{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"true","isOptional":true,"isNamed":true,"kind":"param","name":"cancelOnError","id":"cancelOnError"}],"line":"189"},{"ref":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"T","refId":"dart.async/StreamController/T"}]},"kind":"property","name":"stream","id":"stream","comment":"The stream that this controller is controlling. ","line":"51"},{"ref":{"name":"StreamSink","refId":"dart.async/StreamSink","arguments":[{"name":"T","refId":"dart.async/StreamController/T"}]},"kind":"property","name":"sink","id":"sink","comment":"\nReturns a view of this object that only exposes the [StreamSink] interface.\n","line":"137"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"isClosed","id":"isClosed","comment":"\nWhether the stream is closed for adding more events.\n\nIf true, the \"done\" event might not have fired yet, but it has been\nscheduled, and it is too late to add more events.\n","line":"145"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"isPaused","id":"isPaused","comment":"\nWhether the subscription would need to buffer events.\n\nThis is the case if the controller's stream has a listener and it is\npaused, or if it has not received a listener yet. In that case, the\ncontroller is considered paused as well.\n\nA broadcast stream controller is never considered paused. It always\nforwards its events to all uncanceled listeners, if any, and let them\nhandle their own pausing.\n","line":"158"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"hasListener","id":"hasListener","comment":"Whether there is a subscriber on the [Stream]. ","line":"161"},{"returnType":{"name":"StreamController","refId":"dart.async/StreamController","arguments":[{"name":"T","refId":"dart.async/StreamController/T"}]},"kind":"constructor","name":"","id":"5()","comment":"\nA controller with a [stream] that supports only one single subscriber.\n\nIf [sync] is true, events may be passed directly to the stream's listener\nduring an [add], [addError] or [close] call. If [sync] is false, the event\nwill be passed to the listener at a later time, after the code creating\nthe event has returned.\n\nThe controller will buffer all incoming events until the subscriber is\nregistered.\n\nThe [onPause] function is called when the stream becomes\npaused. [onResume] is called when the stream resumed.\n\nThe [onListen] callback is called when the stream\nreceives its listener and [onCancel] when the listener ends\nits subscription. If [onCancel] needs to perform an asynchronous operation,\n[onCancel] should return a future that completes when the cancel operation\nis done.\n\nIf the stream is canceled before the controller needs new data the\n[onResume] call might not be executed.\n","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"isNamed":true,"kind":"param","name":"onListen","id":"onListen","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","uri":"dart-sdk/lib/core/function.dart","line":"13"}]},{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"isNamed":true,"kind":"param","name":"onPause","id":"onPause","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","uri":"dart-sdk/lib/core/function.dart","line":"13"}],"line":"77"},{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"isNamed":true,"kind":"param","name":"onResume","id":"onResume","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","uri":"dart-sdk/lib/core/function.dart","line":"13"}],"line":"78"},{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"isNamed":true,"kind":"param","name":"onCancel","id":"onCancel","children":[{"kind":"functiontype","name":"Function","id":"Function","uri":"dart-sdk/lib/core/function.dart","line":"13"}],"line":"79"},{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"false","isOptional":true,"isNamed":true,"kind":"param","name":"sync","id":"sync","line":"80"}],"line":"76"},{"returnType":{"name":"StreamController","refId":"dart.async/StreamController","arguments":[{"name":"T","refId":"dart.async/StreamController/T"}]},"kind":"constructor","name":"broadcast","id":"broadcast3()","comment":"\nA controller where [stream] can be listened to more than once.\n\nThe [Stream] returned by [stream] is a broadcast stream. It can be listened\nto more than once.\n\nThe controller distributes any events to all currently subscribed\nlisteners.\nIt is not allowed to call [add], [addError], or [close] before a previous\ncall has returned.\n\nIf [sync] is true, events may be passed directly to the stream's listener\nduring an [add], [addError] or [close] call. If [sync] is false, the event\nwill be passed to the listener at a later time, after the code creating\nthe event has returned.\n\nEach listener is handled independently, and if they pause, only the pausing\nlistener is affected. A paused listener will buffer events internally until\nunpaused or canceled.\n\nIf [sync] is false, no guarantees are given with regard to when\nmultiple listeners get the events, except that each listener will get\nall events in the correct order. If two events are sent on an async\ncontroller with two listeners, one of the listeners may get both events\nbefore the other listener gets any.\nA listener must be subscribed both when the event is initiated (that is,\nwhen [add] is called) and when the event is later delivered, in order to\nget the event.\n\nThe [onListen] callback is called when the first listener is subscribed,\nand the [onCancel] is called when there are no longer any active listeners.\nIf a listener is added again later, after the [onCancel] was called,\nthe [onListen] will be called again.\n","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"isNamed":true,"kind":"param","name":"onListen","id":"onListen","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","uri":"dart-sdk/lib/core/function.dart","line":"13"}]},{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"isNamed":true,"kind":"param","name":"onCancel","id":"onCancel","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","uri":"dart-sdk/lib/core/function.dart","line":"13"}],"line":"127"},{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"false","isOptional":true,"isNamed":true,"kind":"param","name":"sync","id":"sync","line":"128"}],"line":"126"},{"kind":"typeparam","name":"T","id":"T"}],"uri":"dart-sdk/lib/async/stream_controller.dart","line":"49"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"interfaces":[{"name":"EventSink","refId":"dart.async/EventSink","arguments":[{"name":"T","refId":"dart.async/_ControllerEventSinkWrapper/T"}]}],"kind":"class","name":"_ControllerEventSinkWrapper","id":"_ControllerEventSinkWrapper","comment":"\nWraps an [_EventSink] so it exposes only the [EventSink] interface.\n","children":[{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"add","id":"add1()","children":[{"ref":{"name":"T","refId":"dart.async/_ControllerEventSinkWrapper/T"},"kind":"param","name":"data","id":"data"}],"line":"1401"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"addError","id":"addError2()","children":[{"kind":"param","name":"error","id":"error"},{"ref":{"name":"StackTrace","refId":"dart.core/StackTrace"},"isOptional":true,"kind":"param","name":"stackTrace","id":"stackTrace"}],"line":"1402"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"close","id":"close0()","line":"1405"},{"ref":{"name":"EventSink","refId":"dart.async/EventSink"},"kind":"variable","name":"_sink","id":"_sink","isPrivate":true,"line":"1398"},{"kind":"constructor","name":"","id":"1()","children":[{"ref":{"name":"EventSink","refId":"dart.async/EventSink"},"initializedField":{"name":"_sink","refId":"dart.async/_ControllerEventSinkWrapper/_sink"},"kind":"param","name":"_sink","id":"_sink","isPrivate":true}],"line":"1399"},{"kind":"typeparam","name":"T","id":"T"}],"isPrivate":true,"uri":"dart-sdk/lib/async/stream.dart","line":"1397"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"kind":"class","name":"StreamIterator","id":"StreamIterator","comment":"\nAn [Iterable] like interface for the values of a [Stream].\n\nThis wraps a [Stream] and a subscription on the stream. It listens\non the stream, and completes the future returned by [moveNext] when the\nnext value becomes available.\n\nNOTICE: This is a tentative design. This class may change.\n","children":[{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"bool","refId":"dart.core/bool"}]},"kind":"method","name":"moveNext","id":"moveNext0()","comment":"\nWait for the next stream value to be available.\n\nIt is not allowed to call this function again until the future has\ncompleted. If the returned future completes with anything except `true`,\nthe iterator is done, and no new value will ever be available.\n\nThe future may complete with an error, if the stream produces an error.\n","line":"1364"},{"returnType":{"name":"Future","refId":"dart.async/Future"},"kind":"method","name":"cancel","id":"cancel0()","comment":"\nCancels the stream iterator (and the underlying stream subscription) early.\n\nThe stream iterator is automatically canceled if the [moveNext] future\ncompletes with either `false` or an error.\n\nIf a [moveNext] call has been made, it will complete with `false` as value,\nas will all further calls to [moveNext].\n\nIf you need to stop listening for values before the stream iterator is\nautomatically closed, you must call [cancel] to ensure that the stream\nis properly closed.\n\nReturns a future if the cancel-operation is not completed synchronously.\nOtherwise returns `null`.\n","line":"1390"},{"ref":{"name":"T","refId":"dart.async/StreamIterator/T"},"kind":"property","name":"current","id":"current","comment":"\nThe current value of the stream.\n\nOnly valid when the future returned by [moveNext] completes with `true`\nas value, and only until the next call to [moveNext].\n","line":"1372"},{"returnType":{"name":"StreamIterator","refId":"dart.async/StreamIterator","arguments":[{"name":"T","refId":"dart.async/StreamIterator/T"}]},"kind":"constructor","name":"","id":"1()","comment":"Create a [StreamIterator] on [stream]. ","children":[{"ref":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"T","refId":"dart.async/StreamIterator/T"}]},"kind":"param","name":"stream","id":"stream"}],"line":"1350"},{"kind":"typeparam","name":"T","id":"T"}],"uri":"dart-sdk/lib/async/stream.dart","line":"1347"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"kind":"class","name":"StreamTransformer","id":"StreamTransformer","comment":"\nThe target of a [Stream.transform] call.\n\nThe [Stream.transform] call will pass itself to this object and then return\nthe resulting stream.\n\nIt is good practice to write transformers that can be used multiple times.\n","children":[{"returnType":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"T","refId":"dart.async/StreamTransformer/T"}]},"kind":"method","name":"bind","id":"bind1()","children":[{"ref":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"S","refId":"dart.async/StreamTransformer/S"}]},"kind":"param","name":"stream","id":"stream"}],"line":"1335"},{"returnType":{"name":"StreamTransformer","refId":"dart.async/StreamTransformer","arguments":[{"name":"S","refId":"dart.async/StreamTransformer/S"},{"name":"T","refId":"dart.async/StreamTransformer/T"}]},"kind":"constructor","name":"","id":"1()","comment":"\nCreates a [StreamTransformer].\n\nThe returned instance takes responsibility of implementing ([bind]).\nWhen the user invokes `bind` it returns a new \"bound\" stream. Only when\nthe user starts listening to the bound stream, the `listen` method\ninvokes the given closure [transformer].\n\nThe [transformer] closure receives the stream, that was bound, as argument\nand returns a [StreamSubscription]. In almost all cases the closure\nlistens itself to the stream that is given as argument.\n\nThe result of invoking the [transformer] closure is a [StreamSubscription].\nThe bound stream-transformer (created by the `bind` method above) then sets\nthe handlers it received as part of the `listen` call.\n\nConceptually this can be summarized as follows:\n\n1. `var transformer = new StreamTransformer(transformerClosure);`\n  creates a `StreamTransformer` that supports the `bind` method.\n2. `var boundStream = stream.transform(transformer);` binds the `stream`\n  and returns a bound stream that has a pointer to `stream`.\n3. `boundStream.listen(f1, onError: f2, onDone: f3, cancelOnError: b)`\n  starts the listening and transformation. This is accomplished\n  in 2 steps: first the `boundStream` invokes the `transformerClosure` with\n  the `stream` it captured: `transformerClosure(stream, b)`.\n  The result `subscription`, a [StreamSubscription], is then\n  updated to receive its handlers: `subscription.onData(f1)`,\n  `subscription.onError(f2)`, `subscription(f3)`. Finally the subscription\n  is returned as result of the `listen` call.\n\nThere are two common ways to create a StreamSubscription:\n\n1. by creating a new class that implements [StreamSubscription].\n   Note that the subscription should run callbacks in the [Zone] the\n   stream was listened to.\n2. by allocating a [StreamController] and to return the result of\n   listening to its stream.\n\nExample use of a duplicating transformer:\n\n    stringStream.transform(new StreamTransformer<String, String>(\n        (Stream<String> input, bool cancelOnError) {\n          StreamController<String> controller;\n          StreamSubscription<String> subscription;\n          controller = new StreamController<String>(\n            onListen: () {\n              subscription = input.listen((data) {\n                  // Duplicate the data.\n                  controller.add(data);\n                  controller.add(data);\n                },\n                onError: controller.addError,\n                onDone: controller.close,\n                cancelOnError: cancelOnError);\n            },\n            onPause: subscription.pause,\n            onResume: subscription.resume,\n            onCancel: subscription.cancel,\n            sync: true);\n          return controller.stream.listen(null);\n        });\n","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"transformer","id":"transformer","children":[{"returnType":{"name":"StreamSubscription","refId":"dart.async/StreamSubscription","arguments":[{"name":"T","refId":"dart.async/StreamTransformer/T"}]},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"S","refId":"dart.async/StreamTransformer/S"}]},"kind":"param","name":"stream","id":"stream","uri":"dart-sdk/lib/async/stream.dart","line":"1315"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"param","name":"cancelOnError","id":"cancelOnError","uri":"dart-sdk/lib/async/stream.dart","line":"1315"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}],"line":"1315"}],"line":"1314"},{"returnType":{"name":"StreamTransformer","refId":"dart.async/StreamTransformer","arguments":[{"name":"S","refId":"dart.async/StreamTransformer/S"},{"name":"T","refId":"dart.async/StreamTransformer/T"}]},"kind":"constructor","name":"fromHandlers","id":"fromHandlers3()","comment":"\nCreates a [StreamTransformer] that delegates events to the given functions.\n\nExample use of a duplicating transformer:\n\n    stringStream.transform(new StreamTransformer<String, String>.fromHandlers(\n        handleData: (String value, EventSink<String> sink) {\n          sink.add(value);\n          sink.add(value);  // Duplicate the incoming events.\n        }));\n","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"isNamed":true,"kind":"param","name":"handleData","id":"handleData","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"S","refId":"dart.async/StreamTransformer/S"},"kind":"param","name":"data","id":"data","uri":"dart-sdk/lib/async/stream.dart","line":"1330"},{"ref":{"name":"EventSink","refId":"dart.async/EventSink","arguments":[{"name":"T","refId":"dart.async/StreamTransformer/T"}]},"kind":"param","name":"sink","id":"sink","uri":"dart-sdk/lib/async/stream.dart","line":"1330"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}],"line":"1330"},{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"isNamed":true,"kind":"param","name":"handleError","id":"handleError","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"Object","refId":"dart.core/Object"},"kind":"param","name":"error","id":"error","uri":"dart-sdk/lib/async/stream.dart","line":"1331"},{"ref":{"name":"StackTrace","refId":"dart.core/StackTrace"},"kind":"param","name":"stackTrace","id":"stackTrace","uri":"dart-sdk/lib/async/stream.dart","line":"1331"},{"ref":{"name":"EventSink","refId":"dart.async/EventSink","arguments":[{"name":"T","refId":"dart.async/StreamTransformer/T"}]},"kind":"param","name":"sink","id":"sink","uri":"dart-sdk/lib/async/stream.dart","line":"1331"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}],"line":"1331"},{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"isNamed":true,"kind":"param","name":"handleDone","id":"handleDone","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"EventSink","refId":"dart.async/EventSink","arguments":[{"name":"T","refId":"dart.async/StreamTransformer/T"}]},"kind":"param","name":"sink","id":"sink","uri":"dart-sdk/lib/async/stream.dart","line":"1332"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}],"line":"1332"}],"line":"1329"},{"kind":"typeparam","name":"S","id":"S"},{"kind":"typeparam","name":"T","id":"T"}],"uri":"dart-sdk/lib/async/stream.dart","line":"1249"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"interfaces":[{"name":"EventSink","refId":"dart.async/EventSink","arguments":[{"name":"S","refId":"dart.async/StreamSink/S"}]},{"name":"StreamConsumer","refId":"dart.async/StreamConsumer","arguments":[{"name":"S","refId":"dart.async/StreamSink/S"}]}],"kind":"class","name":"StreamSink","id":"StreamSink","comment":"\nA [StreamSink] unifies the asynchronous methods from [StreamConsumer] and\nthe synchronous methods from [EventSink].\n\nThe [EventSink] methods can't be used while the [addStream] is called.\nAs soon as the [addStream]'s [Future] completes with a value, the\n[EventSink] methods can be used again.\n\nIf [addStream] is called after any of the [EventSink] methods, it'll\nbe delayed until the underlying system has consumed the data added by the\n[EventSink] methods.\n\nWhen [EventSink] methods are used, the [done] [Future] can be used to\ncatch any errors.\n\nWhen [close] is called, it will return the [done] [Future].\n","children":[{"returnType":{"name":"Future","refId":"dart.async/Future"},"kind":"method","name":"close","id":"close0()","comment":"\nClose the [StreamSink]. It'll return the [done] Future.\n","line":"1227"},{"ref":{"name":"Future","refId":"dart.async/Future"},"kind":"property","name":"done","id":"done","comment":"\nThe [done] Future completes with the same values as [close], except\nfor the following case:\n\n* The synchronous methods of [EventSink] were called, resulting in an\n  error. If there is no active future (like from an addStream call), the\n  [done] future will complete with that error\n","line":"1237"},{"kind":"typeparam","name":"S","id":"S"}],"uri":"dart-sdk/lib/async/stream.dart","line":"1223"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"kind":"class","name":"StreamConsumer","id":"StreamConsumer","comment":"\nThe target of a [Stream.pipe] call.\n\nThe [Stream.pipe] call will pass itself to this object, and then return\nthe resulting [Future]. The pipe should complete the future when it's\ndone.\n","children":[{"returnType":{"name":"Future","refId":"dart.async/Future"},"kind":"method","name":"addStream","id":"addStream1()","comment":"\nConsumes the elements of [stream].\n\nListens on [stream] and does something for each event.\n\nThe consumer may stop listening after an error, or it may consume\nall the errors and only stop at a done event.\n","children":[{"ref":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"S","refId":"dart.async/StreamConsumer/S"}]},"kind":"param","name":"stream","id":"stream"}],"line":"1200"},{"returnType":{"name":"Future","refId":"dart.async/Future"},"kind":"method","name":"close","id":"close0()","line":"1202"},{"kind":"typeparam","name":"S","id":"S"}],"uri":"dart-sdk/lib/async/stream.dart","line":"1191"},{"superclass":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"T","refId":"dart.async/StreamView/T"}]},"kind":"class","name":"StreamView","id":"StreamView","comment":"[Stream] wrapper that only exposes the [Stream] interface. ","children":[{"returnType":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"T","refId":"dart.async/StreamView/T"}]},"kind":"method","name":"asBroadcastStream","id":"asBroadcastStream2()","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"isNamed":true,"kind":"param","name":"onListen","id":"onListen","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"StreamSubscription","refId":"dart.async/StreamSubscription"},"kind":"param","name":"subscription","id":"subscription","uri":"dart-sdk/lib/async/stream.dart","line":"1170"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]},{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"isNamed":true,"kind":"param","name":"onCancel","id":"onCancel","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"StreamSubscription","refId":"dart.async/StreamSubscription"},"kind":"param","name":"subscription","id":"subscription","uri":"dart-sdk/lib/async/stream.dart","line":"1171"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}],"line":"1171"}],"line":"1170"},{"returnType":{"name":"StreamSubscription","refId":"dart.async/StreamSubscription","arguments":[{"name":"T","refId":"dart.async/StreamView/T"}]},"kind":"method","name":"listen","id":"listen4()","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"onData","id":"onData","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"T","refId":"dart.async/StreamView/T"},"kind":"param","name":"value","id":"value","uri":"dart-sdk/lib/async/stream.dart","line":"1174"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]},{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"isNamed":true,"kind":"param","name":"onError","id":"onError","line":"1175"},{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"isNamed":true,"kind":"param","name":"onDone","id":"onDone","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","uri":"dart-sdk/lib/core/function.dart","line":"13"}],"line":"1176"},{"ref":{"name":"bool","refId":"dart.core/bool"},"isOptional":true,"isNamed":true,"kind":"param","name":"cancelOnError","id":"cancelOnError","line":"1177"}],"line":"1174"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"isBroadcast","id":"isBroadcast","line":"1168"},{"ref":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"T","refId":"dart.async/StreamView/T"}]},"kind":"variable","name":"_stream","id":"_stream","isPrivate":true,"line":"1164"},{"kind":"constructor","name":"","id":"1()","children":[{"ref":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"T","refId":"dart.async/StreamView/T"}]},"initializedField":{"name":"_stream","refId":"dart.async/StreamView/_stream"},"kind":"param","name":"_stream","id":"_stream","isPrivate":true}],"line":"1166"},{"kind":"typeparam","name":"T","id":"T"}],"uri":"dart-sdk/lib/async/stream.dart","line":"1163"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"kind":"class","name":"EventSink","id":"EventSink","comment":"\nAn interface that abstracts creation or handling of [Stream] events.\n","children":[{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"add","id":"add1()","comment":"Create a data event ","children":[{"ref":{"name":"T","refId":"dart.async/EventSink/T"},"kind":"param","name":"event","id":"event"}],"line":"1154"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"addError","id":"addError2()","comment":"Create an async error. ","children":[{"kind":"param","name":"errorEvent","id":"errorEvent"},{"ref":{"name":"StackTrace","refId":"dart.core/StackTrace"},"isOptional":true,"kind":"param","name":"stackTrace","id":"stackTrace"}],"line":"1156"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"close","id":"close0()","comment":"Request a stream to close. ","line":"1158"},{"kind":"typeparam","name":"T","id":"T"}],"uri":"dart-sdk/lib/async/stream.dart","line":"1152"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"kind":"class","name":"StreamSubscription","id":"StreamSubscription","comment":"\nA control object for the subscription on a [Stream].\n\nWhen you subscribe on a [Stream] using [Stream.listen],\na [StreamSubscription] object is returned. This object\nis used to later unsubscribe again, or to temporarily pause\nthe stream's events.\n","children":[{"returnType":{"name":"Future","refId":"dart.async/Future"},"kind":"method","name":"cancel","id":"cancel0()","comment":"\nCancels this subscription. It will no longer receive events.\n\nIf an event is currently firing, this unsubscription will only\ntake effect after all subscribers have received the current event.\n\nReturns a future if the cancel-operation is not completed synchronously.\nOtherwise returns `null`.\n","line":"1090"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"onData","id":"onData1()","comment":"Set or override the data event handler of this subscription. ","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"handleData","id":"handleData","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"T","refId":"dart.async/StreamSubscription/T"},"kind":"param","name":"data","id":"data","uri":"dart-sdk/lib/async/stream.dart","line":"1093"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"1093"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"onError","id":"onError1()","comment":"\nSet or override the error event handler of this subscription.\n\nThis method overrides the handler that has been set at the invocation of\n[Stream.listen].\n","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"handleError","id":"handleError"}],"line":"1101"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"onDone","id":"onDone1()","comment":"Set or override the done event handler of this subscription. ","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"handleDone","id":"handleDone","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"1104"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"pause","id":"pause1()","comment":"\nRequest that the stream pauses events until further notice.\n\nIf [resumeSignal] is provided, the stream will undo the pause\nwhen the future completes. If the future completes with an error,\nit will not be handled!\n\nA call to [resume] will also undo a pause.\n\nIf the subscription is paused more than once, an equal number\nof resumes must be performed to resume the stream.\n\nCurrently DOM streams silently drop events when the stream is paused. This\nis a bug and will be fixed.\n","children":[{"ref":{"name":"Future","refId":"dart.async/Future"},"isOptional":true,"kind":"param","name":"resumeSignal","id":"resumeSignal"}],"line":"1121"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"resume","id":"resume0()","comment":"\nResume after a pause.\n","line":"1126"},{"returnType":{"name":"Future","refId":"dart.async/Future"},"kind":"method","name":"asFuture","id":"asFuture1()","comment":"\nReturns a future that handles the [onDone] and [onError] callbacks.\n\nThis method *overwrites* the existing [onDone] and [onError] callbacks\nwith new ones that complete the returned future.\n\nIn case of an error the subscription will automatically cancel (even\nwhen it was listening with `cancelOnError` set to `false`).\n\nIn case of a `done` event the future completes with the given\n[futureValue].\n","children":[{"isOptional":true,"kind":"param","name":"futureValue","id":"futureValue"}],"line":"1145"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"isPaused","id":"isPaused","comment":"\nReturns true if the [StreamSubscription] is paused.\n","line":"1131"},{"kind":"typeparam","name":"T","id":"T"}],"uri":"dart-sdk/lib/async/stream.dart","line":"1080"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"kind":"class","name":"Stream","id":"Stream","comment":"\nA source of asynchronous data events.\n\nA Stream provides a sequence of events. Each event is either a data event or\nan error event, representing the result of a single computation. When the\nStream is exhausted, it may send a single \"done\" event.\n\nYou can [listen] on a stream to receive the events it sends. When you listen,\nyou receive a [StreamSubscription] object that can be used to stop listening,\nor to temporarily pause events from the stream.\n\nWhen an event is fired, the listeners at that time are informed.\nIf a listener is added while an event is being fired, the change\nwill only take effect after the event is completely fired. If a listener\nis canceled, it immediately stops receiving events.\n\nWhen the \"done\" event is fired, subscribers are unsubscribed before\nreceiving the event. After the event has been sent, the stream has no\nsubscribers. Adding new subscribers after this point is allowed, but\nthey will just receive a new \"done\" event as soon as possible.\n\nStreams always respect \"pause\" requests. If necessary they need to buffer\ntheir input, but often, and preferably, they can simply request their input\nto pause too.\n\nThere are two kinds of streams: The normal \"single-subscription\" streams and\n\"broadcast\" streams.\n\nA single-subscription stream allows only a single listener during the whole\nlifetime of the stream.\nIt holds back events until it gets a listener, and it may exhaust\nitself when the listener is unsubscribed, even if the stream wasn't done.\n\nSingle-subscription streams are generally used for streaming parts of\ncontiguous data like file I/O.\n\nA broadcast stream allows any number of listeners, and it fires\nits events when they are ready, whether there are listeners or not.\n\nBroadcast streams are used for independent events/observers.\n\nStream transformations, such as [where] and [skip], always return\nnon-broadcast streams. If several listeners want to listen to the returned\nstream, use [asBroadcastStream] to create a broadcast stream on top of the\nnon-broadcast stream.\n\nThe default implementation of [isBroadcast] returns false.\nA broadcast stream inheriting from [Stream] must override [isBroadcast]\nto return [:true:].\n","children":[{"returnType":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"T","refId":"dart.async/Stream/T"}]},"kind":"method","name":"asBroadcastStream","id":"asBroadcastStream2()","comment":"\nReturns a multi-subscription stream that produces the same events as this.\n\nIf this stream is already a broadcast stream, it is returned unmodified.\n\nIf this stream is single-subscription, return a new stream that allows\nmultiple subscribers. It will subscribe to this stream when its first\nsubscriber is added, and will stay subscribed until this stream ends,\nor a callback cancels the subscription.\n\nIf [onListen] is provided, it is called with a subscription-like object\nthat represents the underlying subscription to this stream. It is\npossible to pause, resume or cancel the subscription during the call\nto [onListen]. It is not possible to change the event handlers, including\nusing [StreamSubscription.asFuture].\n\nIf [onCancel] is provided, it is called in a similar way to [onListen]\nwhen the returned stream stops having listener. If it later gets\na new listener, the [onListen] function is called again.\n\nUse the callbacks, for example, for pausing the underlying subscription\nwhile having no subscribers to prevent losing events, or canceling the\nsubscription when there are no listeners.\n","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"isNamed":true,"kind":"param","name":"onListen","id":"onListen","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"StreamSubscription","refId":"dart.async/StreamSubscription","arguments":[{"name":"T","refId":"dart.async/Stream/T"}]},"kind":"param","name":"subscription","id":"subscription","uri":"dart-sdk/lib/async/stream.dart","line":"228"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}],"line":"228"},{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"isNamed":true,"kind":"param","name":"onCancel","id":"onCancel","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"StreamSubscription","refId":"dart.async/StreamSubscription","arguments":[{"name":"T","refId":"dart.async/Stream/T"}]},"kind":"param","name":"subscription","id":"subscription","uri":"dart-sdk/lib/async/stream.dart","line":"229"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}],"line":"229"}],"line":"227"},{"returnType":{"name":"StreamSubscription","refId":"dart.async/StreamSubscription","arguments":[{"name":"T","refId":"dart.async/Stream/T"}]},"kind":"method","name":"listen","id":"listen4()","comment":"\nAdds a subscription to this stream.\n\nOn each data event from this stream, the subscriber's [onData] handler\nis called. If [onData] is null, nothing happens.\n\nOn errors from this stream, the [onError] handler is given a\nobject describing the error.\n\nThe [onError] callback must be of type `void onError(error)` or\n`void onError(error, StackTrace stackTrace)`. If [onError] accepts\ntwo arguments it is called with the stack trace (which could be `null` if\nthe stream itself received an error without stack trace).\nOtherwise it is called with just the error object.\n\nIf this stream closes, the [onDone] handler is called.\n\nIf [cancelOnError] is true, the subscription is ended when\nthe first error is reported. The default is false.\n","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"onData","id":"onData","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"T","refId":"dart.async/Stream/T"},"kind":"param","name":"event","id":"event","uri":"dart-sdk/lib/async/stream.dart","line":"254"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]},{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"isNamed":true,"kind":"param","name":"onError","id":"onError","line":"255"},{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"isNamed":true,"kind":"param","name":"onDone","id":"onDone","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","uri":"dart-sdk/lib/core/function.dart","line":"13"}],"line":"256"},{"ref":{"name":"bool","refId":"dart.core/bool"},"isOptional":true,"isNamed":true,"kind":"param","name":"cancelOnError","id":"cancelOnError","line":"257"}],"line":"254"},{"returnType":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"T","refId":"dart.async/Stream/T"}]},"kind":"method","name":"where","id":"where1()","comment":"\nCreates a new stream from this stream that discards some data events.\n\nThe new stream sends the same error and done events as this stream,\nbut it only sends the data events that satisfy the [test].\n\nThe returned stream is not a broadcast stream, even if this stream is.\n","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"test","id":"test","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"T","refId":"dart.async/Stream/T"},"kind":"param","name":"event","id":"event","uri":"dart-sdk/lib/async/stream.dart","line":"267"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"267"},{"returnType":{"name":"Stream","refId":"dart.async/Stream"},"kind":"method","name":"map","id":"map1()","comment":"\nCreates a new stream that converts each element of this stream\nto a new value using the [convert] function.\n\nThe returned stream is not a broadcast stream, even if this stream is.\n","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"convert","id":"convert","children":[{"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"T","refId":"dart.async/Stream/T"},"kind":"param","name":"event","id":"event","uri":"dart-sdk/lib/async/stream.dart","line":"277"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"277"},{"returnType":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"T","refId":"dart.async/Stream/T"}]},"kind":"method","name":"handleError","id":"handleError2()","comment":"\nCreates a wrapper Stream that intercepts some errors from this stream.\n\nIf this stream sends an error that matches [test], then it is intercepted\nby the [handle] function.\n\nThe [onError] callback must be of type `void onError(error)` or\n`void onError(error, StackTrace stackTrace)`. Depending on the function\ntype the the stream either invokes [onError] with or without a stack\ntrace. The stack trace argument might be `null` if the stream itself\nreceived an error without stack trace.\n\nAn asynchronous error [:e:] is matched by a test function if [:test(e):]\nreturns true. If [test] is omitted, every error is considered matching.\n\nIf the error is intercepted, the [handle] function can decide what to do\nwith it. It can throw if it wants to raise a new (or the same) error,\nor simply return to make the stream forget the error.\n\nIf you need to transform an error into a data event, use the more generic\n[Stream.transform] to handle the event by writing a data event to\nthe output sink\n\nThe returned stream is not a broadcast stream, even if this stream is.\n","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"onError","id":"onError"},{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"isNamed":true,"kind":"param","name":"test","id":"test","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"functiontype","name":"Function","id":"Function","children":[{"kind":"param","name":"error","id":"error","uri":"dart-sdk/lib/async/stream.dart","line":"306"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"306"},{"returnType":{"name":"Stream","refId":"dart.async/Stream"},"kind":"method","name":"expand","id":"expand1()","comment":"\nCreates a new stream from this stream that converts each element\ninto zero or more events.\n\nEach incoming event is converted to an [Iterable] of new events,\nand each of these new events are then sent by the returned stream\nin order.\n\nThe returned stream is not a broadcast stream, even if this stream is.\n","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"convert","id":"convert","children":[{"returnType":{"name":"Iterable","refId":"dart.core/Iterable"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"T","refId":"dart.async/Stream/T"},"kind":"param","name":"value","id":"value","uri":"dart-sdk/lib/async/stream.dart","line":"320"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"320"},{"returnType":{"name":"Future","refId":"dart.async/Future"},"kind":"method","name":"pipe","id":"pipe1()","comment":"\nBinds this stream as the input of the provided [StreamConsumer].\n","children":[{"ref":{"name":"StreamConsumer","refId":"dart.async/StreamConsumer","arguments":[{"name":"T","refId":"dart.async/Stream/T"}]},"kind":"param","name":"streamConsumer","id":"streamConsumer"}],"line":"327"},{"returnType":{"name":"Stream","refId":"dart.async/Stream"},"kind":"method","name":"transform","id":"transform1()","comment":"\nChains this stream as the input of the provided [StreamTransformer].\n\nReturns the result of [:streamTransformer.bind:] itself.\n","children":[{"ref":{"name":"StreamTransformer","refId":"dart.async/StreamTransformer","arguments":[{"name":"T","refId":"dart.async/Stream/T"}]},"kind":"param","name":"streamTransformer","id":"streamTransformer"}],"line":"336"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"T","refId":"dart.async/Stream/T"}]},"kind":"method","name":"reduce","id":"reduce1()","comment":"\nReduces a sequence of values by repeatedly applying [combine].\n","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"combine","id":"combine","children":[{"returnType":{"name":"T","refId":"dart.async/Stream/T"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"T","refId":"dart.async/Stream/T"},"kind":"param","name":"previous","id":"previous","uri":"dart-sdk/lib/async/stream.dart","line":"343"},{"ref":{"name":"T","refId":"dart.async/Stream/T"},"kind":"param","name":"element","id":"element","uri":"dart-sdk/lib/async/stream.dart","line":"343"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"343"},{"returnType":{"name":"Future","refId":"dart.async/Future"},"kind":"method","name":"fold","id":"fold2()","comment":"Reduces a sequence of values by repeatedly applying [combine]. ","children":[{"kind":"param","name":"initialValue","id":"initialValue"},{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"combine","id":"combine","children":[{"kind":"functiontype","name":"Function","id":"Function","children":[{"kind":"param","name":"previous","id":"previous","uri":"dart-sdk/lib/async/stream.dart","line":"373"},{"ref":{"name":"T","refId":"dart.async/Stream/T"},"kind":"param","name":"element","id":"element","uri":"dart-sdk/lib/async/stream.dart","line":"373"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"373"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"String","refId":"dart.core/String"}]},"kind":"method","name":"join","id":"join1()","comment":"\nCollects string of data events' string representations.\n\nIf [separator] is provided, it is inserted between any two\nelements.\n\nAny error in the stream causes the future to complete with that\nerror. Otherwise it completes with the collected string when\nthe \"done\" event arrives.\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"defaultValue":"\"\"","isOptional":true,"kind":"param","name":"separator","id":"separator"}],"line":"405"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"bool","refId":"dart.core/bool"}]},"kind":"method","name":"contains","id":"contains1()","comment":"\nChecks whether [needle] occurs in the elements provided by this stream.\n\nCompletes the [Future] when the answer is known.\nIf this stream reports an error, the [Future] will report that error.\n","children":[{"ref":{"name":"Object","refId":"dart.core/Object"},"kind":"param","name":"needle","id":"needle"}],"line":"438"},{"returnType":{"name":"Future","refId":"dart.async/Future"},"kind":"method","name":"forEach","id":"forEach1()","comment":"\nExecutes [action] on each data event of the stream.\n\nCompletes the returned [Future] when all events of the stream\nhave been processed. Completes the future with an error if the\nstream has an error event, or if [action] throws.\n","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"action","id":"action","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"T","refId":"dart.async/Stream/T"},"kind":"param","name":"element","id":"element","uri":"dart-sdk/lib/async/stream.dart","line":"468"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"468"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"bool","refId":"dart.core/bool"}]},"kind":"method","name":"every","id":"every1()","comment":"\nChecks whether [test] accepts all elements provided by this stream.\n\nCompletes the [Future] when the answer is known.\nIf this stream reports an error, the [Future] will report that error.\n","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"test","id":"test","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"T","refId":"dart.async/Stream/T"},"kind":"param","name":"element","id":"element","uri":"dart-sdk/lib/async/stream.dart","line":"493"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"493"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"bool","refId":"dart.core/bool"}]},"kind":"method","name":"any","id":"any1()","comment":"\nChecks whether [test] accepts any element provided by this stream.\n\nCompletes the [Future] when the answer is known.\n\nIf this stream reports an error, the [Future] reports that error.\n\nStops listening to the stream after the first matching element has been\nfound.\n\nInternally the method cancels its subscription after this element. This\nmeans that single-subscription (non-broadcast) streams are closed and\ncannot be reused after a call to this method.\n","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"test","id":"test","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"T","refId":"dart.async/Stream/T"},"kind":"param","name":"element","id":"element","uri":"dart-sdk/lib/async/stream.dart","line":"530"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"530"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"List","refId":"dart.core/List","arguments":[{"name":"T","refId":"dart.async/Stream/T"}]}]},"kind":"method","name":"toList","id":"toList0()","comment":"Collects the data of this stream in a [List]. ","line":"593"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"Set","refId":"dart.core/Set","arguments":[{"name":"T","refId":"dart.async/Stream/T"}]}]},"kind":"method","name":"toSet","id":"toSet0()","comment":"Collects the data of this stream in a [Set]. ","line":"609"},{"returnType":{"name":"Future","refId":"dart.async/Future"},"kind":"method","name":"drain","id":"drain1()","comment":"\nDiscards all data on the stream, but signals when it's done or an error\noccured.\n\nWhen subscribing using [drain], cancelOnError will be true. This means\nthat the future will complete with the first error on the stream and then\ncancel the subscription.\n\nIn case of a `done` event the future completes with the given\n[futureValue].\n","children":[{"isOptional":true,"kind":"param","name":"futureValue","id":"futureValue"}],"line":"635"},{"returnType":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"T","refId":"dart.async/Stream/T"}]},"kind":"method","name":"take","id":"take1()","comment":"\nProvides at most the first [n] values of this stream.\n\nForwards the first [n] data events of this stream, and all error\nevents, to the returned stream, and ends with a done event.\n\nIf this stream produces fewer than [count] values before it's done,\nso will the returned stream.\n\nStops listening to the stream after the first [n] elements have been\nreceived.\n\nInternally the method cancels its subscription after these elements. This\nmeans that single-subscription (non-broadcast) streams are closed and\ncannot be reused after a call to this method.\n\nThe returned stream is not a broadcast stream, even if this stream is.\n","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"count","id":"count"}],"line":"656"},{"returnType":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"T","refId":"dart.async/Stream/T"}]},"kind":"method","name":"takeWhile","id":"takeWhile1()","comment":"\nForwards data events while [test] is successful.\n\nThe returned stream provides the same events as this stream as long\nas [test] returns [:true:] for the event data. The stream is done\nwhen either this stream is done, or when this stream first provides\na value that [test] doesn't accept.\n\nStops listening to the stream after the accepted elements.\n\nInternally the method cancels its subscription after these elements. This\nmeans that single-subscription (non-broadcast) streams are closed and\ncannot be reused after a call to this method.\n\nThe returned stream is not a broadcast stream, even if this stream is.\n","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"test","id":"test","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"T","refId":"dart.async/Stream/T"},"kind":"param","name":"element","id":"element","uri":"dart-sdk/lib/async/stream.dart","line":"676"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"676"},{"returnType":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"T","refId":"dart.async/Stream/T"}]},"kind":"method","name":"skip","id":"skip1()","comment":"\nSkips the first [count] data events from this stream.\n\nThe returned stream is not a broadcast stream, even if this stream is.\n","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"count","id":"count"}],"line":"685"},{"returnType":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"T","refId":"dart.async/Stream/T"}]},"kind":"method","name":"skipWhile","id":"skipWhile1()","comment":"\nSkip data events from this stream while they are matched by [test].\n\nError and done events are provided by the returned stream unmodified.\n\nStarting with the first data event where [test] returns false for the\nevent data, the returned stream will have the same events as this stream.\n\nThe returned stream is not a broadcast stream, even if this stream is.\n","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"test","id":"test","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"T","refId":"dart.async/Stream/T"},"kind":"param","name":"element","id":"element","uri":"dart-sdk/lib/async/stream.dart","line":"699"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"699"},{"returnType":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"T","refId":"dart.async/Stream/T"}]},"kind":"method","name":"distinct","id":"distinct1()","comment":"\nSkips data events if they are equal to the previous data event.\n\nThe returned stream provides the same events as this stream, except\nthat it never provides two consequtive data events that are equal.\n\nEquality is determined by the provided [equals] method. If that is\nomitted, the '==' operator on the last provided data element is used.\n\nThe returned stream is not a broadcast stream, even if this stream is.\n","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"kind":"param","name":"equals","id":"equals","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"T","refId":"dart.async/Stream/T"},"kind":"param","name":"previous","id":"previous","uri":"dart-sdk/lib/async/stream.dart","line":"714"},{"ref":{"name":"T","refId":"dart.async/Stream/T"},"kind":"param","name":"next","id":"next","uri":"dart-sdk/lib/async/stream.dart","line":"714"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"714"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[]},"kind":"method","name":"firstWhere","id":"firstWhere2()","comment":"\nFinds the first element of this stream matching [test].\n\nReturns a future that is filled with the first element of this stream\nthat [test] returns true for.\n\nIf no such element is found before this stream is done, and a\n[defaultValue] function is provided, the result of calling [defaultValue]\nbecomes the value of the future.\n\nStops listening to the stream after the first matching element has been\nreceived.\n\nInternally the method cancels its subscription after the first element that\nmatches the predicate. This means that single-subscription (non-broadcast)\nstreams are closed and cannot be reused after a call to this method.\n\nIf an error occurs, or if this stream ends without finding a match and\nwith no [defaultValue] function provided, the future will receive an\nerror.\n","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"test","id":"test","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"T","refId":"dart.async/Stream/T"},"kind":"param","name":"element","id":"element","uri":"dart-sdk/lib/async/stream.dart","line":"839"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]},{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"isNamed":true,"kind":"param","name":"defaultValue","id":"defaultValue","children":[{"returnType":{"name":"Object","refId":"dart.core/Object"},"kind":"functiontype","name":"Function","id":"Function","uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"839"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[]},"kind":"method","name":"lastWhere","id":"lastWhere2()","comment":"\nFinds the last element in this stream matching [test].\n\nAs [firstWhere], except that the last matching element is found.\nThat means that the result cannot be provided before this stream\nis done.\n","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"test","id":"test","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"T","refId":"dart.async/Stream/T"},"kind":"param","name":"element","id":"element","uri":"dart-sdk/lib/async/stream.dart","line":"873"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]},{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"isNamed":true,"kind":"param","name":"defaultValue","id":"defaultValue","children":[{"returnType":{"name":"Object","refId":"dart.core/Object"},"kind":"functiontype","name":"Function","id":"Function","uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"873"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"T","refId":"dart.async/Stream/T"}]},"kind":"method","name":"singleWhere","id":"singleWhere1()","comment":"\nFinds the single element in this stream matching [test].\n\nLike [lastMatch], except that it is an error if more than one\nmatching element occurs in the stream.\n","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"test","id":"test","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"T","refId":"dart.async/Stream/T"},"kind":"param","name":"element","id":"element","uri":"dart-sdk/lib/async/stream.dart","line":"913"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"913"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"T","refId":"dart.async/Stream/T"}]},"kind":"method","name":"elementAt","id":"elementAt1()","comment":"\nReturns the value of the [index]th data event of this stream.\n\nStops listening to the stream after the [index]th data event has been\nreceived.\n\nInternally the method cancels its subscription after these elements. This\nmeans that single-subscription (non-broadcast) streams are closed and\ncannot be reused after a call to this method.\n\nIf an error event occurs before the value is found, the future completes\nwith this error.\n\nIf a done event occurs before the value is found, the future completes\nwith a [RangeError].\n","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"index","id":"index"}],"line":"967"},{"returnType":{"name":"Stream","refId":"dart.async/Stream"},"kind":"method","name":"timeout","id":"timeout2()","comment":"\nCreates a new stream with the same events as this stream.\n\nWhenever more than [timeLimit] passes between two events from this stream,\nthe [onTimeout] function is called.\n\nThe countdown doesn't start until the returned stream is listened to.\nThe countdown is reset every time an event is forwarded from this stream,\nor when the stream is paused and resumed.\n\nThe [onTimeout] function is called with one argument: an\n[EventSink] that allows putting events into the returned stream.\nThis `EventSink` is only valid during the call to `onTimeout`.\n\nIf `onTimeout` is omitted, a timeout will just put a [TimeoutException]\ninto the error channel of the returned stream.\n\nThe returned stream is not a broadcast stream, even if this stream is.\n","children":[{"ref":{"name":"Duration","refId":"dart.core/Duration"},"kind":"param","name":"timeLimit","id":"timeLimit"},{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"isNamed":true,"kind":"param","name":"onTimeout","id":"onTimeout","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"EventSink","refId":"dart.async/EventSink"},"kind":"param","name":"sink","id":"sink","uri":"dart-sdk/lib/async/stream.dart","line":"1006"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"1006"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"isBroadcast","id":"isBroadcast","comment":"\nReports whether this stream is a broadcast stream.\n","line":"201"},{"ref":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"property","name":"length","id":"length","comment":"Counts the elements in the stream. ","line":"555"},{"ref":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"bool","refId":"dart.core/bool"}]},"kind":"property","name":"isEmpty","id":"isEmpty","comment":"\nReports whether this stream contains any elements.\n\nStops listening to the stream after the first element has been received.\n\nInternally the method cancels its subscription after the first element.\nThis means that single-subscription (non-broadcast) streams are closed and\ncannot be reused after a call to this getter.\n","line":"577"},{"ref":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"T","refId":"dart.async/Stream/T"}]},"kind":"property","name":"first","id":"first","comment":"\nReturns the first element of the stream.\n\nStops listening to the stream after the first element has been received.\n\nInternally the method cancels its subscription after the first element.\nThis means that single-subscription (non-broadcast) streams are closed\nand cannot be reused after a call to this getter.\n\nIf an error event occurs before the first data event, the resulting future\nis completed with that error.\n\nIf this stream is empty (a done event occurs before the first data event),\nthe resulting future completes with a [StateError].\n\nExcept for the type of the error, this method is equivalent to\n[:this.elementAt(0):].\n","line":"736"},{"ref":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"T","refId":"dart.async/Stream/T"}]},"kind":"property","name":"last","id":"last","comment":"\nReturns the last element of the stream.\n\nIf an error event occurs before the first data event, the resulting future\nis completed with that error.\n\nIf this stream is empty (a done event occurs before the first data event),\nthe resulting future completes with a [StateError].\n","line":"760"},{"ref":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"T","refId":"dart.async/Stream/T"}]},"kind":"property","name":"single","id":"single","comment":"\nReturns the single element.\n\nIf an error event occurs before or after the first data event, the\nresulting future is completed with that error.\n\nIf [this] is empty or has more than one element throws a [StateError].\n","line":"790"},{"kind":"constructor","name":"","id":"0()","line":"62"},{"returnType":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"T","refId":"dart.async/Stream/T"}]},"kind":"constructor","name":"fromFuture","id":"fromFuture1()","comment":"\nCreates a new single-subscription stream from the future.\n\nWhen the future completes, the stream will fire one event, either\ndata or error, and then close with a done-event.\n","children":[{"ref":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"T","refId":"dart.async/Stream/T"}]},"kind":"param","name":"future","id":"future"}],"line":"70"},{"returnType":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"T","refId":"dart.async/Stream/T"}]},"kind":"constructor","name":"fromIterable","id":"fromIterable1()","comment":"\nCreates a single-subscription stream that gets its data from [data].\n\nIf iterating [data] throws an error, the stream ends immediately with\nthat error. No done event will be sent (iteration is not complete), but no\nfurther data events will be generated either, since iteration cannot\ncontinue.\n","children":[{"ref":{"name":"Iterable","refId":"dart.core/Iterable","arguments":[{"name":"T","refId":"dart.async/Stream/T"}]},"kind":"param","name":"data","id":"data"}],"line":"91"},{"returnType":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"T","refId":"dart.async/Stream/T"}]},"kind":"constructor","name":"periodic","id":"periodic2()","comment":"\nCreates a stream that repeatedly emits events at [period] intervals.\n\nThe event values are computed by invoking [computation]. The argument to\nthis callback is an integer that starts with 0 and is incremented for\nevery event.\n\nIf [computation] is omitted the event values will all be `null`.\n","children":[{"ref":{"name":"Duration","refId":"dart.core/Duration"},"kind":"param","name":"period","id":"period"},{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"kind":"param","name":"computation","id":"computation","children":[{"returnType":{"name":"T","refId":"dart.async/Stream/T"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"computationCount","id":"computationCount","uri":"dart-sdk/lib/async/stream.dart","line":"106"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}],"line":"106"}],"line":"105"},{"returnType":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"T","refId":"dart.async/Stream/T"}]},"kind":"constructor","name":"eventTransformed","id":"eventTransformed2()","comment":"\nCreates a stream where all events of an existing stream are piped through\na sink-transformation.\n\nThe given [mapSink] closure is invoked when the returned stream is\nlistened to. All events from the [source] are added into the event sink\nthat is returned from the invocation. The transformation puts all\ntransformed events into the sink the [mapSink] closure received during\nits invocation. Conceptually the [mapSink] creates a transformation pipe\nwith the input sink being the returned [EventSink] and the output sink\nbeing the sink it received.\n\nThis constructor is frequently used to build transformers.\n\nExample use for a duplicating transformer:\n\n    class DuplicationSink implements EventSink<String> {\n      final EventSink<String> _outputSink;\n      DuplicationSink(this._outputSink);\n\n      void add(String data) {\n        _outputSink.add(data);\n        _outputSink.add(data);\n      }\n\n      void addError(e, [st]) => _outputSink(e, st);\n      void close() => _outputSink.close();\n    }\n\n    class DuplicationTransformer implements StreamTransformer<String, String> {\n      // Some generic types ommitted for brevety.\n      Stream bind(Stream stream) => new Stream<String>.eventTransform(\n          stream,\n          (EventSink sink) => new DuplicationSink(sink));\n    }\n\n    stringStream.transform(new DuplicationTransformer());\n","children":[{"ref":{"name":"Stream","refId":"dart.async/Stream"},"kind":"param","name":"source","id":"source"},{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"mapSink","id":"mapSink","children":[{"returnType":{"name":"EventSink","refId":"dart.async/EventSink"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"EventSink","refId":"dart.async/EventSink","arguments":[{"name":"T","refId":"dart.async/Stream/T"}]},"kind":"param","name":"sink","id":"sink","uri":"dart-sdk/lib/async/stream.dart","line":"194"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}],"line":"194"}],"line":"193"},{"kind":"typeparam","name":"T","id":"T"}],"uri":"dart-sdk/lib/async/stream.dart","line":"61"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"kind":"class","name":"_AsyncRun","id":"_AsyncRun","children":[{"returnType":{"name":"void","refId":"void"},"isStatic":true,"kind":"method","name":"_scheduleImmediate","id":"_scheduleImmediate1()","comment":"Schedule the given callback before any other event in the event-loop. ","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"callback","id":"callback","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"isPrivate":true,"line":"76"}],"isPrivate":true,"uri":"dart-sdk/lib/async/schedule_microtask.dart","line":"74"},{"returnType":{"name":"void","refId":"void"},"kind":"typedef","name":"_AsyncCallback","id":"_AsyncCallback","isPrivate":true,"uri":"dart-sdk/lib/async/schedule_microtask.dart","line":"7"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"interfaces":[{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"T","refId":"dart.async/_Future/T"}]}],"kind":"class","name":"_Future","id":"_Future","children":[{"isSetter":true,"kind":"method","name":"_isChained=","id":"_isChained=1()","children":[{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"param","name":"value","id":"value"}],"isPrivate":true,"line":"87"},{"returnType":{"name":"Future","refId":"dart.async/Future"},"kind":"method","name":"then","id":"then2()","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"f","id":"f","children":[{"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"T","refId":"dart.async/_Future/T"},"kind":"param","name":"value","id":"value","uri":"dart-sdk/lib/async/future_impl.dart","line":"185"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]},{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"isNamed":true,"kind":"param","name":"onError","id":"onError"}],"line":"185"},{"returnType":{"name":"Future","refId":"dart.async/Future"},"kind":"method","name":"catchError","id":"catchError2()","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"onError","id":"onError"},{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"isNamed":true,"kind":"param","name":"test","id":"test","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"functiontype","name":"Function","id":"Function","children":[{"kind":"param","name":"error","id":"error","uri":"dart-sdk/lib/async/future_impl.dart","line":"192"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"192"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"T","refId":"dart.async/_Future/T"}]},"kind":"method","name":"whenComplete","id":"whenComplete1()","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"action","id":"action","children":[{"kind":"functiontype","name":"Function","id":"Function","uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"198"},{"returnType":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"T","refId":"dart.async/_Future/T"}]},"kind":"method","name":"asStream","id":"asStream0()","line":"204"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_markPendingCompletion","id":"_markPendingCompletion0()","isPrivate":true,"line":"206"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_setValue","id":"_setValue1()","children":[{"ref":{"name":"T","refId":"dart.async/_Future/T"},"kind":"param","name":"value","id":"value"}],"isPrivate":true,"line":"221"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_setError","id":"_setError2()","children":[{"ref":{"name":"Object","refId":"dart.core/Object"},"kind":"param","name":"error","id":"error"},{"ref":{"name":"StackTrace","refId":"dart.core/StackTrace"},"kind":"param","name":"stackTrace","id":"stackTrace"}],"isPrivate":true,"line":"227"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_addListener","id":"_addListener1()","children":[{"ref":{"name":"_Future","refId":"dart.async/_Future"},"kind":"param","name":"listener","id":"listener"}],"isPrivate":true,"line":"233"},{"returnType":{"name":"_Future","refId":"dart.async/_Future"},"kind":"method","name":"_removeListeners","id":"_removeListeners0()","isPrivate":true,"line":"246"},{"returnType":{"name":"void","refId":"void"},"isStatic":true,"kind":"method","name":"_chainFutures","id":"_chainFutures2()","children":[{"ref":{"name":"Future","refId":"dart.async/Future"},"kind":"param","name":"source","id":"source"},{"ref":{"name":"_Future","refId":"dart.async/_Future"},"kind":"param","name":"target","id":"target"}],"isPrivate":true,"line":"262"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_complete","id":"_complete1()","children":[{"kind":"param","name":"value","id":"value"}],"isPrivate":true,"line":"290"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_completeError","id":"_completeError2()","children":[{"kind":"param","name":"error","id":"error"},{"ref":{"name":"StackTrace","refId":"dart.core/StackTrace"},"isOptional":true,"kind":"param","name":"stackTrace","id":"stackTrace"}],"isPrivate":true,"line":"306"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_asyncComplete","id":"_asyncComplete1()","children":[{"kind":"param","name":"value","id":"value"}],"isPrivate":true,"line":"318"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_asyncCompleteError","id":"_asyncCompleteError2()","children":[{"kind":"param","name":"error","id":"error"},{"ref":{"name":"StackTrace","refId":"dart.core/StackTrace"},"kind":"param","name":"stackTrace","id":"stackTrace"}],"isPrivate":true,"line":"358"},{"returnType":{"name":"void","refId":"void"},"isStatic":true,"kind":"method","name":"_propagateMultipleListeners","id":"_propagateMultipleListeners2()","comment":"\nPropagates the value/error of [source] to its [listeners].\n\nUnlinks all listeners and propagates the source to each listener\nseparately.\n","children":[{"ref":{"name":"_Future","refId":"dart.async/_Future"},"kind":"param","name":"source","id":"source"},{"ref":{"name":"_Future","refId":"dart.async/_Future"},"kind":"param","name":"listeners","id":"listeners"}],"isPrivate":true,"line":"377"},{"returnType":{"name":"void","refId":"void"},"isStatic":true,"kind":"method","name":"_propagateToListeners","id":"_propagateToListeners2()","comment":"\nPropagates the value/error of [source] to its [listeners], executing the\nlisteners' callbacks.\n\nIf [runCallback] is true (which should be the default) it executes\nthe registered action of listeners. If it is `false` then the callback is\nskipped. This is used to complete futures with chained futures.\n","children":[{"ref":{"name":"_Future","refId":"dart.async/_Future"},"kind":"param","name":"source","id":"source"},{"ref":{"name":"_Future","refId":"dart.async/_Future"},"kind":"param","name":"listeners","id":"listeners"}],"isPrivate":true,"line":"396"},{"returnType":{"name":"Future","refId":"dart.async/Future"},"kind":"method","name":"timeout","id":"timeout2()","children":[{"ref":{"name":"Duration","refId":"dart.core/Duration"},"kind":"param","name":"timeLimit","id":"timeLimit"},{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"isNamed":true,"kind":"param","name":"onTimeout","id":"onTimeout","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"541"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"_mayComplete","id":"_mayComplete","isPrivate":true,"line":"81"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"_isChained","id":"_isChained","isPrivate":true,"line":"82"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"_isComplete","id":"_isComplete","isPrivate":true,"line":"83"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"_hasValue","id":"_hasValue","isPrivate":true,"line":"84"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"_hasError","id":"_hasError","isPrivate":true,"line":"85"},{"ref":{"name":"_FutureOnValue","refId":"dart.async/_FutureOnValue"},"kind":"property","name":"_onValue","id":"_onValue","isPrivate":true,"line":"136"},{"ref":{"name":"_FutureErrorTest","refId":"dart.async/_FutureErrorTest"},"kind":"property","name":"_errorTest","id":"_errorTest","isPrivate":true,"line":"137"},{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"property","name":"_onError","id":"_onError","isPrivate":true,"line":"138"},{"ref":{"name":"_FutureAction","refId":"dart.async/_FutureAction"},"kind":"property","name":"_whenCompleteAction","id":"_whenCompleteAction","isPrivate":true,"line":"139"},{"ref":{"name":"T","refId":"dart.async/_Future/T"},"kind":"property","name":"_value","id":"_value","isPrivate":true,"line":"211"},{"ref":{"name":"_AsyncError","refId":"dart.async/_AsyncError"},"kind":"property","name":"_error","id":"_error","isPrivate":true,"line":"216"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"_INCOMPLETE","id":"_INCOMPLETE","comment":"Initial state, waiting for a result. In this state, the\n[resultOrListeners] field holds a single-linked list of\n[FutureListener] listeners.","isPrivate":true,"line":"61"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"_PENDING_COMPLETE","id":"_PENDING_COMPLETE","comment":"Pending completion. Set when completed using [_asyncComplete] or\n[_asyncCompleteError]. It is an error to try to complete it again.","isPrivate":true,"line":"64"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"_CHAINED","id":"_CHAINED","comment":"The future has been chained to another future. The result of that\nother future becomes the result of this future as well.\nIn this state, no callback should be executed anymore.","isPrivate":true,"line":"70"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"_VALUE","id":"_VALUE","comment":"The future has been completed with a value result.","isPrivate":true,"line":"72"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"_ERROR","id":"_ERROR","comment":"The future has been completed with an error result.","isPrivate":true,"line":"74"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"_state","id":"_state","comment":"Whether the future is complete, and as what. ","isPrivate":true,"line":"77"},{"ref":{"name":"Zone","refId":"dart.async/Zone"},"isFinal":true,"kind":"variable","name":"_zone","id":"_zone","isPrivate":true,"line":"79"},{"kind":"variable","name":"_resultOrListeners","id":"_resultOrListeners","comment":"\nEither the result, a list of listeners or another future.\n\nThe result of the future is either a value or an error.\nA result is only stored when the future has completed.\n\nThe listeners is an internally linked list of [_FutureListener]s.\nListeners are only remembered while the future is not yet complete,\nand it is not chained to another future.\n\nThe future is another future that his future is chained to. This future\nis waiting for the other future to complete, and when it does, this future\nwill complete with the same result.\nAll listeners are forwarded to the other future.\n\nThe cases are disjoint (incomplete and unchained, incomplete and\nchained, or completed with value or error), so the field only needs to hold\none value at a time.\n","isPrivate":true,"line":"116"},{"ref":{"name":"_Future","refId":"dart.async/_Future"},"kind":"variable","name":"_nextListener","id":"_nextListener","comment":"\nA [_Future] implements a linked list. If a future has more than one\nlistener the [_nextListener] field of the first listener points to the\nremaining listeners.\n","isPrivate":true,"line":"125"},{"ref":{"name":"_FutureOnValue","refId":"dart.async/_FutureOnValue"},"isFinal":true,"kind":"variable","name":"_onValueCallback","id":"_onValueCallback","isPrivate":true,"line":"131"},{"ref":{"name":"_FutureErrorTest","refId":"dart.async/_FutureErrorTest"},"isFinal":true,"kind":"variable","name":"_errorTestCallback","id":"_errorTestCallback","isPrivate":true,"line":"132"},{"ref":{"name":"Function","refId":"dart.core/Function"},"isFinal":true,"kind":"variable","name":"_onErrorCallback","id":"_onErrorCallback","isPrivate":true,"line":"133"},{"ref":{"name":"_FutureAction","refId":"dart.async/_FutureAction"},"isFinal":true,"kind":"variable","name":"_whenCompleteActionCallback","id":"_whenCompleteActionCallback","isPrivate":true,"line":"134"},{"kind":"constructor","name":"","id":"0()","line":"142"},{"kind":"constructor","name":"immediate","id":"immediate1()","comment":"Valid types for value: `T` or `Future<T>`.","children":[{"kind":"param","name":"value","id":"value"}],"line":"148"},{"kind":"constructor","name":"immediateError","id":"immediateError2()","children":[{"kind":"param","name":"error","id":"error"},{"ref":{"name":"StackTrace","refId":"dart.core/StackTrace"},"isOptional":true,"kind":"param","name":"stackTrace","id":"stackTrace"}],"line":"155"},{"kind":"constructor","name":"_then","id":"_then2()","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"onValueCallback","id":"onValueCallback","children":[{"kind":"functiontype","name":"Function","id":"Function","children":[{"kind":"param","name":"value","id":"value","uri":"dart-sdk/lib/async/future_impl.dart","line":"162"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]},{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"onErrorCallback","id":"onErrorCallback"}],"isPrivate":true,"line":"162"},{"kind":"constructor","name":"_catchError","id":"_catchError2()","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"onErrorCallback","id":"onErrorCallback"},{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"errorTestCallback","id":"errorTestCallback","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"functiontype","name":"Function","id":"Function","children":[{"kind":"param","name":"e","id":"e","uri":"dart-sdk/lib/async/future_impl.dart","line":"169"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"isPrivate":true,"line":"169"},{"kind":"constructor","name":"_whenComplete","id":"_whenComplete1()","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"whenCompleteActionCallback","id":"whenCompleteActionCallback","children":[{"kind":"functiontype","name":"Function","id":"Function","uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"isPrivate":true,"line":"177"},{"kind":"typeparam","name":"T","id":"T"}],"isPrivate":true,"uri":"dart-sdk/lib/async/future_impl.dart","line":"53"},{"superclass":{"name":"_Completer","refId":"dart.async/_Completer","arguments":[{"name":"T","refId":"dart.async/_SyncCompleter/T"}]},"kind":"class","name":"_SyncCompleter","id":"_SyncCompleter","children":[{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"complete","id":"complete1()","children":[{"isOptional":true,"kind":"param","name":"value","id":"value"}],"line":"42"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"completeError","id":"completeError2()","children":[{"ref":{"name":"Object","refId":"dart.core/Object"},"kind":"param","name":"error","id":"error"},{"ref":{"name":"StackTrace","refId":"dart.core/StackTrace"},"isOptional":true,"kind":"param","name":"stackTrace","id":"stackTrace"}],"line":"47"},{"kind":"typeparam","name":"T","id":"T"}],"isPrivate":true,"uri":"dart-sdk/lib/async/future_impl.dart","line":"40"},{"superclass":{"name":"_Completer","refId":"dart.async/_Completer","arguments":[{"name":"T","refId":"dart.async/_AsyncCompleter/T"}]},"kind":"class","name":"_AsyncCompleter","id":"_AsyncCompleter","children":[{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"complete","id":"complete1()","children":[{"isOptional":true,"kind":"param","name":"value","id":"value"}],"line":"28"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"completeError","id":"completeError2()","children":[{"ref":{"name":"Object","refId":"dart.core/Object"},"kind":"param","name":"error","id":"error"},{"ref":{"name":"StackTrace","refId":"dart.core/StackTrace"},"isOptional":true,"kind":"param","name":"stackTrace","id":"stackTrace"}],"line":"33"},{"kind":"typeparam","name":"T","id":"T"}],"isPrivate":true,"uri":"dart-sdk/lib/async/future_impl.dart","line":"26"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"interfaces":[{"name":"Completer","refId":"dart.async/Completer","arguments":[{"name":"T","refId":"dart.async/_Completer/T"}]}],"kind":"class","name":"_Completer","id":"_Completer","children":[{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"complete","id":"complete1()","children":[{"isOptional":true,"kind":"param","name":"value","id":"value"}],"line":"17"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"completeError","id":"completeError2()","children":[{"ref":{"name":"Object","refId":"dart.core/Object"},"kind":"param","name":"error","id":"error"},{"ref":{"name":"StackTrace","refId":"dart.core/StackTrace"},"isOptional":true,"kind":"param","name":"stackTrace","id":"stackTrace"}],"line":"19"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"isCompleted","id":"isCompleted","line":"23"},{"ref":{"name":"_Future","refId":"dart.async/_Future","arguments":[{"name":"T","refId":"dart.async/_Completer/T"}]},"isFinal":true,"kind":"variable","name":"future","id":"future","line":"15"},{"kind":"typeparam","name":"T","id":"T"}],"isPrivate":true,"uri":"dart-sdk/lib/async/future_impl.dart","line":"14"},{"kind":"typedef","name":"_FutureAction","id":"_FutureAction","comment":"Used by [WhenFuture]. ","isPrivate":true,"uri":"dart-sdk/lib/async/future_impl.dart","line":"12"},{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"typedef","name":"_FutureErrorTest","id":"_FutureErrorTest","comment":"Test used by [Future.catchError] to handle skip some errors. ","children":[{"kind":"param","name":"error","id":"error"}],"isPrivate":true,"uri":"dart-sdk/lib/async/future_impl.dart","line":"10"},{"kind":"typedef","name":"_FutureOnValue","id":"_FutureOnValue","comment":"The onValue and onError handlers return either a value or a future ","children":[{"ref":{"name":"T","refId":"dart.async/_FutureOnValue/T"},"kind":"param","name":"value","id":"value"},{"kind":"typeparam","name":"T","id":"T"}],"isPrivate":true,"uri":"dart-sdk/lib/async/future_impl.dart","line":"8"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"kind":"class","name":"Completer","id":"Completer","comment":"\nA way to produce Future objects and to complete them later\nwith a value or error.\n\nIf you already have a Future, you probably don't need a Completer.\nInstead, you can usually use [Future.then], which returns a Future:\n\n    Future doStuff(){\n      return someAsyncOperation().then((result) {\n        // Do something.\n      });\n    }\n\nIf you do need to create a Future from scratch—for example,\nwhen you're converting a callback-based API into a Future-based\none—you can use a Completer as follows:\n\n    Class AsyncOperation {\n      Completer _completer = new Completer();\n\n      Future<T> doOperation() {\n        _startOperation();\n        return _completer.future; // Send future object back to client.\n      }\n\n      // Something calls this when the value is ready.\n      _finishOperation(T result) {\n        _completer.complete(result);\n      }\n\n      // If something goes wrong, call this.\n      _errorHappened(error) {\n        _completer.completeError(error);\n      }\n    }\n","children":[{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"complete","id":"complete1()","comment":"\nCompletes [future] with the supplied values.\n\nIf the value is itself a future, the completer will wait for that future\nto complete, and complete with the same result, whether it is a success\nor an error.\n\nCalling `complete` or [completeError] must not be done more than once.\n\nAll listeners on the future are informed about the value.\n","children":[{"isOptional":true,"kind":"param","name":"value","id":"value"}],"line":"551"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"completeError","id":"completeError2()","comment":"\nComplete [future] with an error.\n\nCalling [complete] or `completeError` must not be done more than once.\n\nCompleting a future with an error indicates that an exception was thrown\nwhile trying to produce a value.\n\nThe argument [error] must not be `null`.\n\nIf `error` is a `Future`, the future itself is used as the error value.\nIf you want to complete with the result of the future, you can use:\n\n    thisCompleter.complete(theFuture)\n\nor if you only want to handle an error from the future:\n\n    theFuture.catchError(thisCompleter.completeError);\n\n","children":[{"ref":{"name":"Object","refId":"dart.core/Object"},"kind":"param","name":"error","id":"error"},{"ref":{"name":"StackTrace","refId":"dart.core/StackTrace"},"isOptional":true,"kind":"param","name":"stackTrace","id":"stackTrace"}],"line":"573"},{"ref":{"name":"Future","refId":"dart.async/Future"},"kind":"property","name":"future","id":"future","comment":"The future that will contain the result provided to this completer. ","line":"538"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"isCompleted","id":"isCompleted","comment":"\nWhether the future has been completed.\n","line":"578"},{"returnType":{"name":"Completer","refId":"dart.async/Completer","arguments":[{"name":"T","refId":"dart.async/Completer/T"}]},"kind":"constructor","name":"","id":"0()","comment":"\nCreates a completer whose future is completed asynchronously, sometime\nafter [complete] is called on it. This allows a call to [complete] to\nbe in the middle of other code, without running an unknown amount of\nfuture completion and [then] callbacks synchronously at the point that\n[complete] is called.\n\nExample:\n\n    var completer = new Completer.sync();\n    completer.future.then((_) { bar(); });\n    // The completion is the result of the asynchronous onDone event.\n    // However, there is code executed after the call to complete,\n    // but before completer.future runs its completion callback.\n    stream.listen(print, onDone: () {\n      completer.complete(\"done\");\n      foo();  // In this case, foo() runs before bar().\n    });\n","line":"506"},{"returnType":{"name":"Completer","refId":"dart.async/Completer","arguments":[{"name":"T","refId":"dart.async/Completer/T"}]},"kind":"constructor","name":"sync","id":"sync0()","comment":"\nCompletes the future synchronously.\n\nThis constructor should be avoided unless the completion of the future is\nknown to be the final result of another asynchronous operation. If in doubt\nuse the default [Completer] constructor.\n\nExample:\n\n    var completer = new Completer.sync();\n    // The completion is the result of the asynchronous onDone event.\n    // No other operation is performed after the completion. It is safe\n    // to use the Completer.sync constructor.\n    stream.listen(print, onDone: () { completer.complete(\"done\"); });\n\nBad example. Do not use this code. Only for illustrative purposes:\n\n    var completer = new Completer.sync();\n    completer.future.then((_) { bar(); });\n    // The completion is the result of the asynchronous onDone event.\n    // However, there is still code executed after the completion. This\n    // operation is *not* safe.\n    stream.listen(print, onDone: () {\n      completer.complete(\"done\");\n      foo();  // In this case, foo() runs after bar().\n    });\n","line":"535"},{"kind":"typeparam","name":"T","id":"T"}],"uri":"dart-sdk/lib/async/future.dart","line":"485"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"interfaces":[{"name":"Exception","refId":"dart.core/Exception"}],"isThrowable":true,"kind":"class","name":"TimeoutException","id":"TimeoutException","comment":"\nThrown when a scheduled timeout happens while waiting for an async result.\n","children":[{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"method","name":"toString","id":"toString0()","line":"439"},{"ref":{"name":"String","refId":"dart.core/String"},"isFinal":true,"kind":"variable","name":"message","id":"message","comment":"Description of the cause of the timeout. ","line":"433"},{"ref":{"name":"Duration","refId":"dart.core/Duration"},"isFinal":true,"kind":"variable","name":"duration","id":"duration","comment":"The duration that was exceeded. ","line":"435"},{"kind":"constructor","name":"","id":"2()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"initializedField":{"name":"message","refId":"dart.async/TimeoutException/message"},"kind":"param","name":"message","id":"message"},{"ref":{"name":"Duration","refId":"dart.core/Duration"},"isOptional":true,"initializedField":{"name":"duration","refId":"dart.async/TimeoutException/duration"},"kind":"param","name":"duration","id":"duration"}],"line":"437"}],"uri":"dart-sdk/lib/async/future.dart","line":"431"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"kind":"class","name":"Future","id":"Future","comment":"\nAn object representing a delayed computation.\n\nA [Future] is used to obtain a not yet\navailable value, or error, sometime in the future.  Receivers of a\n[Future] can register callbacks that handle the value or error once it is\navailable. For example:\n\n    Future<int> future = getFuture();\n    future.then((value) => handleValue(value))\n          .catchError((error) => handleError(error));\n\nA [Future] can be completed in two ways: with a value (\"the future succeeds\")\nor with an error (\"the future fails\"). Users can install callbacks for each\ncase. The result of registering a pair of callbacks is a new Future (the\n\"successor\") which in turn is completed with the result of invoking the\ncorresponding callback. The successor is completed with an error if the\ninvoked callback throws. For example:\n\n    Future<int> successor = future.then((int value) {\n        // Invoked when the future is completed with a value.\n        return 42;  // The successor is completed with the value 42.\n      },\n      onError: (e) {\n        // Invoked when the future is completed with an error.\n        if (canHandle(e)) {\n          return 499;  // The successor is completed with the value 499.\n        } else {\n          throw e;  // The successor is completed with the error e.\n        }\n      });\n\nIf a future does not have a successor but is completed with an error, it\nforwards the error message to the global error-handler. This special casing\nmakes sure that no error is silently dropped. However, it also means that\nerror handlers should be installed early, so that they are present as soon\nas a future is completed with an error. The following example demonstrates\nthis potential bug:\n\n    var future = getFuture();\n    new Timer(new Duration(milliseconds: 5), () {\n      // The error-handler is only attached 5ms after the future has been\n      // received. If the future fails in the mean-time it will forward the\n      // error to the global error-handler, even though there is code (just\n      // below) to handle the error.\n      future.then((value) { useValue(value); },\n                  onError: (e) { handleError(e); });\n    });\n\nIn general we discourage registering the two callbacks at the same time, but\nprefer to use [then] with one argument (the value handler), and to use\n[catchError] for handling errors. The missing callbacks (the error-handler\nfor [then], and the value-handler for [catchError]), are automatically\nconfigured to \"forward\" the value/error. Separating value and error-handling\ninto separate registration calls usually leads to code that is easier to\nreason about. In fact it makes asynchronous code very similar to synchronous\ncode:\n\n    // Synchronous code.\n    try {\n      int value = foo();\n      return bar(value);\n    } catch (e) {\n      return 499;\n    }\n\n Equivalent asynchronous code, based on futures:\n\n    Future<int> future = foo();  // foo now returns a future.\n    future.then((int value) => bar(value))\n          .catchError((e) => 499);\n\nSimilar to the synchronous code, the error handler (registered with\n[catchError]) is handling the errors for exceptions coming from calls to\n'foo', as well as 'bar'. This would not be the case if the error-handler was\nregistered at the same time as the value-handler.\n\nFutures can have more than one callback-pairs registered. Each successor is\ntreated independently and is handled as if it was the only successor.\n","children":[{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"List","refId":"dart.core/List"}]},"isStatic":true,"kind":"method","name":"wait","id":"wait2()","comment":"\nWait for all the given futures to complete and collect their values.\n\nReturns a future which will complete once all the futures in a list are\ncomplete. If any of the futures in the list completes with an error,\nthe resulting future also completes with an error. Otherwise the value\nof the returned future will be a list of all the values that were produced.\n\nIf `eagerError` is true, the future completes with an error immediately on\nthe first error from one of the futures. Otherwise all futures must\ncomplete before the returned future is completed (still with the first\nerror to occur, the remaining errors are silently dropped).\n","children":[{"ref":{"name":"Iterable","refId":"dart.core/Iterable","arguments":[{"name":"Future","refId":"dart.async/Future"}]},"kind":"param","name":"futures","id":"futures"},{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"false","isOptional":true,"isNamed":true,"kind":"param","name":"eagerError","id":"eagerError"}],"line":"220"},{"returnType":{"name":"Future","refId":"dart.async/Future"},"isStatic":true,"kind":"method","name":"forEach","id":"forEach2()","comment":"\nPerform an async operation for each element of the iterable, in turn.\n\nRuns [f] for each element in [input] in order, moving to the next element\nonly when the [Future] returned by [f] completes. Returns a [Future] that\ncompletes when all elements have been processed.\n\nThe return values of all [Future]s are discarded. Any errors will cause the\niteration to stop and will be piped through the returned [Future].\n","children":[{"ref":{"name":"Iterable","refId":"dart.core/Iterable"},"kind":"param","name":"input","id":"input"},{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"f","id":"f","children":[{"returnType":{"name":"Future","refId":"dart.async/Future"},"kind":"functiontype","name":"Function","id":"Function","children":[{"kind":"param","name":"element","id":"element","uri":"dart-sdk/lib/async/future.dart","line":"278"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"278"},{"returnType":{"name":"Future","refId":"dart.async/Future"},"kind":"method","name":"then","id":"then2()","comment":"\nWhen this future completes with a value, then [onValue] is called with this\nvalue. If [this] future is already completed then the invocation of\n[onValue] is delayed until the next event-loop iteration.\n\nReturns a new [Future] `f` which is completed with the result of\ninvoking [onValue] (if [this] completes with a value) or [onError] (if\n[this] completes with an error).\n\nIf the invoked callback throws an exception, the returned future `f` is\ncompleted with the error.\n\nIf the invoked callback returns a [Future] `f2` then `f` and `f2` are\nchained. That is, `f` is completed with the completion value of `f2`.\n\nThe [onError] callback must be of type `void onError(error)` or\n`void onError(error, StackTrace stackTrace)`. If [onError] accepts\ntwo arguments it is called with the stack trace (which could be `null` if\nthe stream itself received an error without stack trace).\nOtherwise it is called with just the error object.\n\nIf [onError] is not given it forwards the error to `f`.\n\nIn most cases, it is more readable to use [catchError] separately, possibly\nwith a `test` parameter, instead of handling both value and error in a\nsingle [then] call.\n","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"onValue","id":"onValue","children":[{"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"T","refId":"dart.async/Future/T"},"kind":"param","name":"value","id":"value","uri":"dart-sdk/lib/async/future.dart","line":"320"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]},{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"isNamed":true,"kind":"param","name":"onError","id":"onError"}],"line":"320"},{"returnType":{"name":"Future","refId":"dart.async/Future"},"kind":"method","name":"catchError","id":"catchError2()","comment":"\nHandles errors emitted by this [Future].\n\nReturns a new [Future] `f`.\n\nWhen [this] completes with a value, the value is forwarded to `f`\nunmodified. That is, `f` completes with the same value.\n\nWhen [this] completes with an error, [test] is called with the\nerror's value. If the invocation returns [true], [onError] is called with\nthe error. The result of [onError] is handled exactly the same as for\n[then]'s [onError].\n\nIf [test] returns false, the exception is not handled by [onError], but is\nthrown unmodified, thus forwarding it to `f`.\n\nIf [test] is omitted, it defaults to a function that always returns true.\n\nExample:\n\n    foo\n      .catchError(..., test: (e) => e is ArgumentError)\n      .catchError(..., test: (e) => e is NoSuchMethodError)\n      .then((v) { ... });\n\nThis method is equivalent to:\n\n    Future catchError(onError(error),\n                      {bool test(error)}) {\n      this.then((v) => v,  // Forward the value.\n                // But handle errors, if the [test] succeeds.\n                onError: (e, stackTrace) {\n                  if (test == null || test(e)) {\n                    if (onError is ZoneBinaryCallback) {\n                      return onError(e, stackTrace);\n                    }\n                    return onError(e);\n                  }\n                  throw e;\n                });\n    }\n\n","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"onError","id":"onError"},{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"isNamed":true,"kind":"param","name":"test","id":"test","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"Object","refId":"dart.core/Object"},"kind":"param","name":"error","id":"error","uri":"dart-sdk/lib/async/future.dart","line":"366"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}],"line":"366"}],"line":"365"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"T","refId":"dart.async/Future/T"}]},"kind":"method","name":"whenComplete","id":"whenComplete1()","comment":"\nRegister a function to be called when this future completes.\n\nThe [action] function is called when this future completes, whether it\ndoes so with a value or with an error.\n\nThis is the asynchronous equivalent of a \"finally\" block.\n\nThe future returned by this call, `f`, will complete the same way\nas this future unless an error occurs in the [action] call, or in\na [Future] returned by the [action] call. If the call to [action]\ndoes not return a future, its return value is ignored.\n\nIf the call to [action] throws, then `f` is completed with the\nthrown error.\n\nIf the call to [action] returns a [Future], `f2`, then completion of\n`f` is delayed until `f2` completes. If `f2` completes with\nan error, that will be the result of `f` too. The value of `f2` is always\nignored.\n\nThis method is equivalent to:\n\n    Future<T> whenComplete(action()) {\n      this.then((v) {\n                  var f2 = action();\n                  if (f2 is Future) return f2.then((_) => v);\n                  return v\n                },\n                onError: (e) {\n                  var f2 = action();\n                  if (f2 is Future) return f2.then((_) { throw e; });\n                  throw e;\n                });\n    }\n","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"action","id":"action","children":[{"kind":"functiontype","name":"Function","id":"Function","uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"404"},{"returnType":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"T","refId":"dart.async/Future/T"}]},"kind":"method","name":"asStream","id":"asStream0()","comment":"\nCreates a [Stream] that sends [this]' completion value, data or error, to\nits subscribers. The stream closes after the completion value.\n","line":"410"},{"returnType":{"name":"Future","refId":"dart.async/Future"},"kind":"method","name":"timeout","id":"timeout2()","comment":"\nTime-out the future computation after [timeLimit] has passed.\n\nReturns a new future that completes with the same value as this future,\nif this future completes in time.\n\nIf this future does not complete before `timeLimit` has passed,\nthe [onTimeout] action is executed instead, and its result (whether it\nreturns or throws) is used as the result of the returned future.\n\nIf `onTimeout` is omitted, a timeout will cause the returned future to\ncomplete with a [TimeoutException].\n","children":[{"ref":{"name":"Duration","refId":"dart.core/Duration"},"kind":"param","name":"timeLimit","id":"timeLimit"},{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"isNamed":true,"kind":"param","name":"onTimeout","id":"onTimeout","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"425"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"T","refId":"dart.async/Future/T"}]},"kind":"constructor","name":"","id":"1()","comment":"\nCreates a future containing the result of calling [computation]\nasynchronously with [Timer.run].\n\nIf the result of executing [computation] throws, the returned future is\ncompleted with the error.\n\nIf the returned value is itself a [Future], completion of\nthe created future will wait until the returned future completes,\nand will then complete with the same result.\n\nIf a value is returned, it becomes the result of the created future.\n","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"computation","id":"computation","children":[{"kind":"functiontype","name":"Function","id":"Function","uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"103"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"T","refId":"dart.async/Future/T"}]},"kind":"constructor","name":"microtask","id":"microtask1()","comment":"\nCreates a future containing the result of calling [computation]\nasynchronously with [scheduleMicrotask].\n\nIf the result of executing [computation] throws, the returned future is\ncompleted with the error.\n\nIf the returned value is itself a [Future], completion of\nthe created future will wait until the returned future completes,\nand will then complete with the same result.\n\nIf a value is returned, it becomes the result of the created future.\n","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"computation","id":"computation","children":[{"kind":"functiontype","name":"Function","id":"Function","uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"128"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"T","refId":"dart.async/Future/T"}]},"kind":"constructor","name":"sync","id":"sync1()","comment":"\nCreates a future containing the result of immediately calling\n[computation].\n\nIf calling [computation] throws, the returned future is completed with the\nerror.\n\nIf the returned value is itself a [Future], completion of\nthe created future will wait until the returned future completes,\nand will then complete with the same result.\n","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"computation","id":"computation","children":[{"kind":"functiontype","name":"Function","id":"Function","uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"151"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"T","refId":"dart.async/Future/T"}]},"kind":"constructor","name":"value","id":"value1()","comment":"\nA future whose value is available in the next event-loop iteration.\n\nIf [value] is not a [Future], using this constructor is equivalent\nto [:new Future<T>.sync(() => value):].\n\nSee [Completer] to create a Future and complete it later.\n","children":[{"isOptional":true,"kind":"param","name":"value","id":"value"}],"line":"168"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"T","refId":"dart.async/Future/T"}]},"kind":"constructor","name":"error","id":"error2()","comment":"\nA future that completes with an error in the next event-loop iteration.\n\nSee [Completer] to create a Future and complete it later.\n","children":[{"ref":{"name":"Object","refId":"dart.core/Object"},"kind":"param","name":"error","id":"error"},{"ref":{"name":"StackTrace","refId":"dart.core/StackTrace"},"isOptional":true,"kind":"param","name":"stackTrace","id":"stackTrace"}],"line":"177"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"T","refId":"dart.async/Future/T"}]},"kind":"constructor","name":"delayed","id":"delayed2()","comment":"\nCreates a future that completes after a delay.\n\nThe future will be completed after the given [duration] has passed with\nthe result of calling [computation]. If the duration is 0 or less, it\ncompletes no sooner than in the next event-loop iteration.\n\nIf [computation] is not given or [:null:] then it will behave as if\n[computation] was set to [:() => null:]. That is, it will complete with\n[:null:].\n\nIf calling [computation] throws, the created future will complete with the\nerror.\n\nSee [Completer]s, for futures with values that are computed asynchronously.\n","children":[{"ref":{"name":"Duration","refId":"dart.core/Duration"},"kind":"param","name":"duration","id":"duration"},{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"kind":"param","name":"computation","id":"computation","children":[{"returnType":{"name":"T","refId":"dart.async/Future/T"},"kind":"functiontype","name":"Function","id":"Function","uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"197"},{"kind":"typeparam","name":"T","id":"T"}],"uri":"dart-sdk/lib/async/future.dart","line":"88"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"kind":"class","name":"DeferredLibrary","id":"DeferredLibrary","comment":"\nIndicates that loading of [libraryName] is deferred.\n\nApplies to library imports, when used as metadata.\n\nExample usage:\n\n    @lazy\n    import 'foo.dart' as foo;\n\n    const lazy = const DeferredLibrary('com.example.foo');\n\n    void main() {\n      foo.method(); // Throws a NoSuchMethodError, foo is not loaded yet.\n      lazy.load().then(onFooLoaded);\n    }\n\n    void onFooLoaded(_) {\n      foo.method();\n    }\n","children":[{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"bool","refId":"dart.core/bool"}]},"kind":"method","name":"load","id":"load0()","comment":"\nEnsure that [libraryName] has been loaded.\n\nThe value of the returned future is true if this invocation of\n[load] caused the library to be loaded.\n","line":"40"},{"ref":{"name":"String","refId":"dart.core/String"},"isFinal":true,"kind":"variable","name":"libraryName","id":"libraryName","line":"29"},{"ref":{"name":"String","refId":"dart.core/String"},"isFinal":true,"kind":"variable","name":"uri","id":"uri","line":"30"},{"kind":"constructor","name":"","id":"2()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"initializedField":{"name":"libraryName","refId":"dart.async/DeferredLibrary/libraryName"},"kind":"param","name":"libraryName","id":"libraryName"},{"ref":{"name":"String","refId":"dart.core/String"},"isOptional":true,"isNamed":true,"initializedField":{"name":"uri","refId":"dart.async/DeferredLibrary/uri"},"kind":"param","name":"uri","id":"uri"}],"line":"32"}],"uri":"dart-sdk/lib/async/deferred_load.dart","line":"28"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"interfaces":[{"name":"StreamSubscription","refId":"dart.async/StreamSubscription","arguments":[{"name":"T","refId":"dart.async/_DoneSubscription/T"}]}],"kind":"class","name":"_DoneSubscription","id":"_DoneSubscription","children":[{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"onData","id":"onData1()","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"handleData","id":"handleData","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"T","refId":"dart.async/_DoneSubscription/T"},"kind":"param","name":"data","id":"data","uri":"dart-sdk/lib/async/broadcast_stream_controller.dart","line":"483"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"483"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"onError","id":"onError1()","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"handleError","id":"handleError"}],"line":"484"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"onDone","id":"onDone1()","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"handleDone","id":"handleDone","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"485"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"pause","id":"pause1()","children":[{"ref":{"name":"Future","refId":"dart.async/Future"},"isOptional":true,"kind":"param","name":"resumeSignal","id":"resumeSignal"}],"line":"486"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"resume","id":"resume0()","line":"490"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_resume","id":"_resume1()","children":[{"kind":"param","name":"_","id":"_","isPrivate":true}],"isPrivate":true,"line":"491"},{"returnType":{"name":"Future","refId":"dart.async/Future"},"kind":"method","name":"cancel","id":"cancel0()","line":"494"},{"returnType":{"name":"Future","refId":"dart.async/Future"},"kind":"method","name":"asFuture","id":"asFuture1()","children":[{"ref":{"name":"Object","refId":"dart.core/Object"},"isOptional":true,"kind":"param","name":"value","id":"value"}],"line":"496"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"isPaused","id":"isPaused","line":"495"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"_pauseCount","id":"_pauseCount","isPrivate":true,"line":"482"},{"kind":"typeparam","name":"T","id":"T"}],"isPrivate":true,"uri":"dart-sdk/lib/async/broadcast_stream_controller.dart","line":"481"},{"superclass":{"name":"_SyncBroadcastStreamController","refId":"dart.async/_SyncBroadcastStreamController","arguments":[{"name":"T","refId":"dart.async/_AsBroadcastStreamController/T"}]},"interfaces":[{"name":"_EventDispatch","refId":"dart.async/_EventDispatch","arguments":[{"name":"T","refId":"dart.async/_AsBroadcastStreamController/T"}]}],"kind":"class","name":"_AsBroadcastStreamController","id":"_AsBroadcastStreamController","comment":"\nStream controller that is used by [Stream.asBroadcastStream].\n\nThis stream controller allows incoming events while it is firing\nother events. This is handled by delaying the events until the\ncurrent event is done firing, and then fire the pending events.\n\nThis class extends [_SyncBroadcastStreamController]. Events of\nan \"asBroadcastStream\" stream are always initiated by events\non another stream, and it is fine to forward them synchronously.\n","children":[{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_addPendingEvent","id":"_addPendingEvent1()","children":[{"ref":{"name":"_DelayedEvent","refId":"dart.async/_DelayedEvent"},"kind":"param","name":"event","id":"event"}],"isPrivate":true,"line":"430"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"add","id":"add1()","children":[{"ref":{"name":"T","refId":"dart.async/_AsBroadcastStreamController/T"},"kind":"param","name":"data","id":"data"}],"line":"437"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"addError","id":"addError2()","children":[{"ref":{"name":"Object","refId":"dart.core/Object"},"kind":"param","name":"error","id":"error"},{"ref":{"name":"StackTrace","refId":"dart.core/StackTrace"},"isOptional":true,"kind":"param","name":"stackTrace","id":"stackTrace"}],"line":"448"},{"returnType":{"name":"Future","refId":"dart.async/Future"},"kind":"method","name":"close","id":"close0()","line":"459"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_callOnCancel","id":"_callOnCancel0()","isPrivate":true,"line":"470"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"_hasPending","id":"_hasPending","isPrivate":true,"line":"428"},{"ref":{"name":"_StreamImplEvents","refId":"dart.async/_StreamImplEvents"},"kind":"variable","name":"_pending","id":"_pending","isPrivate":true,"line":"423"},{"kind":"constructor","name":"","id":"2()","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"onListen","id":"onListen","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","uri":"dart-sdk/lib/core/function.dart","line":"13"}]},{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"onCancel","id":"onCancel","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"425"},{"kind":"typeparam","name":"T","id":"T"}],"isPrivate":true,"uri":"dart-sdk/lib/async/broadcast_stream_controller.dart","line":"420"},{"superclass":{"name":"_BroadcastStreamController","refId":"dart.async/_BroadcastStreamController","arguments":[{"name":"T","refId":"dart.async/_AsyncBroadcastStreamController/T"}]},"kind":"class","name":"_AsyncBroadcastStreamController","id":"_AsyncBroadcastStreamController","children":[{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_sendData","id":"_sendData1()","children":[{"ref":{"name":"T","refId":"dart.async/_AsyncBroadcastStreamController/T"},"kind":"param","name":"data","id":"data"}],"isPrivate":true,"line":"375"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_sendError","id":"_sendError2()","children":[{"ref":{"name":"Object","refId":"dart.core/Object"},"kind":"param","name":"error","id":"error"},{"ref":{"name":"StackTrace","refId":"dart.core/StackTrace"},"kind":"param","name":"stackTrace","id":"stackTrace"}],"isPrivate":true,"line":"384"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_sendDone","id":"_sendDone0()","isPrivate":true,"line":"393"},{"kind":"constructor","name":"","id":"2()","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"onListen","id":"onListen","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","uri":"dart-sdk/lib/core/function.dart","line":"13"}]},{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"onCancel","id":"onCancel","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"370"},{"kind":"typeparam","name":"T","id":"T"}],"isPrivate":true,"uri":"dart-sdk/lib/async/broadcast_stream_controller.dart","line":"369"},{"superclass":{"name":"_BroadcastStreamController","refId":"dart.async/_BroadcastStreamController","arguments":[{"name":"T","refId":"dart.async/_SyncBroadcastStreamController/T"}]},"kind":"class","name":"_SyncBroadcastStreamController","id":"_SyncBroadcastStreamController","children":[{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_sendData","id":"_sendData1()","children":[{"ref":{"name":"T","refId":"dart.async/_SyncBroadcastStreamController/T"},"kind":"param","name":"data","id":"data"}],"isPrivate":true,"line":"332"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_sendError","id":"_sendError2()","children":[{"ref":{"name":"Object","refId":"dart.core/Object"},"kind":"param","name":"error","id":"error"},{"ref":{"name":"StackTrace","refId":"dart.core/StackTrace"},"kind":"param","name":"stackTrace","id":"stackTrace"}],"isPrivate":true,"line":"349"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_sendDone","id":"_sendDone0()","isPrivate":true,"line":"356"},{"kind":"constructor","name":"","id":"2()","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"onListen","id":"onListen","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","uri":"dart-sdk/lib/core/function.dart","line":"13"}]},{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"onCancel","id":"onCancel","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"327"},{"kind":"typeparam","name":"T","id":"T"}],"isPrivate":true,"uri":"dart-sdk/lib/async/broadcast_stream_controller.dart","line":"326"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"interfaces":[{"name":"_EventDispatch","refId":"dart.async/_EventDispatch","arguments":[{"name":"T","refId":"dart.async/_BroadcastStreamController/T"}]},{"name":"_EventSink","refId":"dart.async/_EventSink","arguments":[{"name":"T","refId":"dart.async/_BroadcastStreamController/T"}]},{"name":"_BroadcastSubscriptionLink","refId":"dart.async/_BroadcastSubscriptionLink"},{"name":"_StreamControllerLifecycle","refId":"dart.async/_StreamControllerLifecycle","arguments":[{"name":"T","refId":"dart.async/_BroadcastStreamController/T"}]},{"name":"StreamController","refId":"dart.async/StreamController","arguments":[{"name":"T","refId":"dart.async/_BroadcastStreamController/T"}]}],"kind":"class","name":"_BroadcastStreamController","id":"_BroadcastStreamController","children":[{"returnType":{"name":"_Future","refId":"dart.async/_Future"},"kind":"method","name":"_ensureDoneFuture","id":"_ensureDoneFuture0()","isPrivate":true,"line":"150"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_addListener","id":"_addListener1()","comment":"Adds subscription to linked list of active listeners. ","children":[{"ref":{"name":"_BroadcastSubscription","refId":"dart.async/_BroadcastSubscription","arguments":[{"name":"T","refId":"dart.async/_BroadcastStreamController/T"}]},"kind":"param","name":"subscription","id":"subscription"}],"isPrivate":true,"line":"160"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_removeListener","id":"_removeListener1()","children":[{"ref":{"name":"_BroadcastSubscription","refId":"dart.async/_BroadcastSubscription","arguments":[{"name":"T","refId":"dart.async/_BroadcastStreamController/T"}]},"kind":"param","name":"subscription","id":"subscription"}],"isPrivate":true,"line":"170"},{"returnType":{"name":"StreamSubscription","refId":"dart.async/StreamSubscription","arguments":[{"name":"T","refId":"dart.async/_BroadcastStreamController/T"}]},"kind":"method","name":"_subscribe","id":"_subscribe1()","children":[{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"param","name":"cancelOnError","id":"cancelOnError"}],"isPrivate":true,"line":"182"},{"returnType":{"name":"Future","refId":"dart.async/Future"},"kind":"method","name":"_recordCancel","id":"_recordCancel1()","children":[{"ref":{"name":"_BroadcastSubscription","refId":"dart.async/_BroadcastSubscription","arguments":[{"name":"T","refId":"dart.async/_BroadcastStreamController/T"}]},"kind":"param","name":"subscription","id":"subscription"}],"isPrivate":true,"line":"196"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_recordPause","id":"_recordPause1()","children":[{"ref":{"name":"StreamSubscription","refId":"dart.async/StreamSubscription","arguments":[{"name":"T","refId":"dart.async/_BroadcastStreamController/T"}]},"kind":"param","name":"subscription","id":"subscription"}],"isPrivate":true,"line":"213"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_recordResume","id":"_recordResume1()","children":[{"ref":{"name":"StreamSubscription","refId":"dart.async/StreamSubscription","arguments":[{"name":"T","refId":"dart.async/_BroadcastStreamController/T"}]},"kind":"param","name":"subscription","id":"subscription"}],"isPrivate":true,"line":"214"},{"returnType":{"name":"Error","refId":"dart.core/Error"},"kind":"method","name":"_addEventError","id":"_addEventError0()","isPrivate":true,"line":"218"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"add","id":"add1()","children":[{"ref":{"name":"T","refId":"dart.async/_BroadcastStreamController/T"},"kind":"param","name":"data","id":"data"}],"line":"226"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"addError","id":"addError2()","children":[{"ref":{"name":"Object","refId":"dart.core/Object"},"kind":"param","name":"error","id":"error"},{"ref":{"name":"StackTrace","refId":"dart.core/StackTrace"},"isOptional":true,"kind":"param","name":"stackTrace","id":"stackTrace"}],"line":"231"},{"returnType":{"name":"Future","refId":"dart.async/Future"},"kind":"method","name":"close","id":"close0()","line":"236"},{"returnType":{"name":"Future","refId":"dart.async/Future"},"kind":"method","name":"addStream","id":"addStream2()","children":[{"ref":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"T","refId":"dart.async/_BroadcastStreamController/T"}]},"kind":"param","name":"stream","id":"stream"},{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"true","isOptional":true,"isNamed":true,"kind":"param","name":"cancelOnError","id":"cancelOnError"}],"line":"250"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_add","id":"_add1()","children":[{"ref":{"name":"T","refId":"dart.async/_BroadcastStreamController/T"},"kind":"param","name":"data","id":"data"}],"isPrivate":true,"line":"258"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_addError","id":"_addError2()","children":[{"ref":{"name":"Object","refId":"dart.core/Object"},"kind":"param","name":"error","id":"error"},{"ref":{"name":"StackTrace","refId":"dart.core/StackTrace"},"kind":"param","name":"stackTrace","id":"stackTrace"}],"isPrivate":true,"line":"262"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_close","id":"_close0()","isPrivate":true,"line":"267"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_forEachListener","id":"_forEachListener1()","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"action","id":"action","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"_BufferingStreamSubscription","refId":"dart.async/_BufferingStreamSubscription","arguments":[{"name":"T","refId":"dart.async/_BroadcastStreamController/T"}]},"kind":"param","name":"subscription","id":"subscription","uri":"dart-sdk/lib/async/broadcast_stream_controller.dart","line":"277"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}],"line":"277"}],"isPrivate":true,"line":"276"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_callOnCancel","id":"_callOnCancel0()","isPrivate":true,"line":"316"},{"ref":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"T","refId":"dart.async/_BroadcastStreamController/T"}]},"kind":"property","name":"stream","id":"stream","line":"116"},{"ref":{"name":"StreamSink","refId":"dart.async/StreamSink","arguments":[{"name":"T","refId":"dart.async/_BroadcastStreamController/T"}]},"kind":"property","name":"sink","id":"sink","line":"118"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"isClosed","id":"isClosed","line":"120"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"isPaused","id":"isPaused","comment":"\nA broadcast controller is never paused.\n\nEach receiving stream may be paused individually, and they handle their\nown buffering.\n","line":"128"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"hasListener","id":"hasListener","comment":"Whether there are currently one or more subscribers. ","line":"131"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"_hasOneListener","id":"_hasOneListener","comment":"\nTest whether the stream has exactly one listener.\n\nAssumes that the stream has a listener (not [_isEmpty]).\n","isPrivate":true,"line":"138"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"_isFiring","id":"_isFiring","comment":"Whether an event is being fired (sent to some, but not all, listeners). ","isPrivate":true,"line":"144"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"_isAddingStream","id":"_isAddingStream","isPrivate":true,"line":"146"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"_mayAddEvent","id":"_mayAddEvent","isPrivate":true,"line":"148"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"_isEmpty","id":"_isEmpty","isPrivate":true,"line":"157"},{"ref":{"name":"Future","refId":"dart.async/Future"},"kind":"property","name":"done","id":"done","line":"248"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"_STATE_INITIAL","id":"_STATE_INITIAL","isPrivate":true,"line":"75"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"_STATE_EVENT_ID","id":"_STATE_EVENT_ID","isPrivate":true,"line":"76"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"_STATE_FIRING","id":"_STATE_FIRING","isPrivate":true,"line":"77"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"_STATE_CLOSED","id":"_STATE_CLOSED","isPrivate":true,"line":"78"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"_STATE_ADDSTREAM","id":"_STATE_ADDSTREAM","isPrivate":true,"line":"79"},{"ref":{"name":"_NotificationHandler","refId":"dart.async/_NotificationHandler"},"isFinal":true,"kind":"variable","name":"_onListen","id":"_onListen","isPrivate":true,"line":"81"},{"ref":{"name":"_NotificationHandler","refId":"dart.async/_NotificationHandler"},"isFinal":true,"kind":"variable","name":"_onCancel","id":"_onCancel","isPrivate":true,"line":"82"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"_state","id":"_state","isPrivate":true,"line":"85"},{"ref":{"name":"_BroadcastSubscriptionLink","refId":"dart.async/_BroadcastSubscriptionLink"},"kind":"variable","name":"_next","id":"_next","isPrivate":true,"line":"88"},{"ref":{"name":"_BroadcastSubscriptionLink","refId":"dart.async/_BroadcastSubscriptionLink"},"kind":"variable","name":"_previous","id":"_previous","isPrivate":true,"line":"89"},{"ref":{"name":"_AddStreamState","refId":"dart.async/_AddStreamState","arguments":[{"name":"T","refId":"dart.async/_BroadcastStreamController/T"}]},"kind":"variable","name":"_addStreamState","id":"_addStreamState","isPrivate":true,"line":"92"},{"ref":{"name":"_Future","refId":"dart.async/_Future"},"kind":"variable","name":"_doneFuture","id":"_doneFuture","comment":"\nFuture returned by [close] and [done].\n\nThe future is completed whenever the done event has been sent to all\nrelevant listeners.\nThe relevant listeners are the ones that were listening when [close] was\ncalled. When all of these have been canceled (sending the done event makes\nthem cancel, but they can also be canceled before sending the event),\nthis future completes.\n\nAny attempt to listen after calling [close] will throw, so there won't\nbe any further listeners.\n","isPrivate":true,"line":"107"},{"kind":"constructor","name":"","id":"2()","children":[{"ref":{"name":"_NotificationHandler","refId":"dart.async/_NotificationHandler"},"initializedField":{"name":"_onListen","refId":"dart.async/_BroadcastStreamController/_onListen"},"kind":"param","name":"_onListen","id":"_onListen","isPrivate":true},{"ref":{"name":"_NotificationHandler","refId":"dart.async/_NotificationHandler"},"initializedField":{"name":"_onCancel","refId":"dart.async/_BroadcastStreamController/_onCancel"},"kind":"param","name":"_onCancel","id":"_onCancel","isPrivate":true}],"line":"109"},{"kind":"typeparam","name":"T","id":"T"}],"isPrivate":true,"uri":"dart-sdk/lib/async/broadcast_stream_controller.dart","line":"69"},{"superclass":{"name":"_ControllerSubscription","refId":"dart.async/_ControllerSubscription","arguments":[{"name":"T","refId":"dart.async/_BroadcastSubscription/T"}]},"interfaces":[{"name":"_BroadcastSubscriptionLink","refId":"dart.async/_BroadcastSubscriptionLink"}],"kind":"class","name":"_BroadcastSubscription","id":"_BroadcastSubscription","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"method","name":"_expectsEvent","id":"_expectsEvent1()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"eventId","id":"eventId"}],"isPrivate":true,"line":"39"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_toggleEventId","id":"_toggleEventId0()","isPrivate":true,"line":"43"},{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"method","name":"_setRemoveAfterFiring","id":"_setRemoveAfterFiring0()","isPrivate":true,"line":"49"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_onPause","id":"_onPause0()","isPrivate":true,"line":"59"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_onResume","id":"_onResume0()","isPrivate":true,"line":"63"},{"ref":{"name":"_BroadcastStreamController","refId":"dart.async/_BroadcastStreamController"},"kind":"property","name":"_controller","id":"_controller","isPrivate":true,"line":"37"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"_isFiring","id":"_isFiring","isPrivate":true,"line":"47"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"_removeAfterFiring","id":"_removeAfterFiring","isPrivate":true,"line":"54"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"_STATE_EVENT_ID","id":"_STATE_EVENT_ID","isPrivate":true,"line":"20"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"_STATE_FIRING","id":"_STATE_FIRING","isPrivate":true,"line":"21"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"_STATE_REMOVE_AFTER_FIRING","id":"_STATE_REMOVE_AFTER_FIRING","isPrivate":true,"line":"22"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"_eventState","id":"_eventState","isPrivate":true,"line":"26"},{"ref":{"name":"_BroadcastSubscriptionLink","refId":"dart.async/_BroadcastSubscriptionLink"},"kind":"variable","name":"_next","id":"_next","isPrivate":true,"line":"28"},{"ref":{"name":"_BroadcastSubscriptionLink","refId":"dart.async/_BroadcastSubscriptionLink"},"kind":"variable","name":"_previous","id":"_previous","isPrivate":true,"line":"29"},{"kind":"constructor","name":"","id":"2()","children":[{"ref":{"name":"_StreamControllerLifecycle","refId":"dart.async/_StreamControllerLifecycle"},"kind":"param","name":"controller","id":"controller"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"param","name":"cancelOnError","id":"cancelOnError","line":"32"}],"line":"31"},{"kind":"typeparam","name":"T","id":"T"}],"isPrivate":true,"uri":"dart-sdk/lib/async/broadcast_stream_controller.dart","line":"18"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"kind":"class","name":"_BroadcastSubscriptionLink","id":"_BroadcastSubscriptionLink","children":[{"ref":{"name":"_BroadcastSubscriptionLink","refId":"dart.async/_BroadcastSubscriptionLink"},"kind":"variable","name":"_next","id":"_next","isPrivate":true,"line":"14"},{"ref":{"name":"_BroadcastSubscriptionLink","refId":"dart.async/_BroadcastSubscriptionLink"},"kind":"variable","name":"_previous","id":"_previous","isPrivate":true,"line":"15"}],"isPrivate":true,"uri":"dart-sdk/lib/async/broadcast_stream_controller.dart","line":"13"},{"superclass":{"name":"_ControllerStream","refId":"dart.async/_ControllerStream","arguments":[{"name":"T","refId":"dart.async/_BroadcastStream/T"}]},"kind":"class","name":"_BroadcastStream","id":"_BroadcastStream","children":[{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"isBroadcast","id":"isBroadcast","line":"10"},{"kind":"constructor","name":"","id":"1()","children":[{"ref":{"name":"_StreamControllerLifecycle","refId":"dart.async/_StreamControllerLifecycle"},"kind":"param","name":"controller","id":"controller"}],"line":"8"},{"kind":"typeparam","name":"T","id":"T"}],"isPrivate":true,"uri":"dart-sdk/lib/async/broadcast_stream_controller.dart","line":"7"},{"superclass":{"name":"_AsyncError","refId":"dart.async/_AsyncError"},"isThrowable":true,"kind":"class","name":"_UncaughtAsyncError","id":"_UncaughtAsyncError","children":[{"returnType":{"name":"StackTrace","refId":"dart.core/StackTrace"},"isStatic":true,"kind":"method","name":"_getBestStackTrace","id":"_getBestStackTrace2()","children":[{"kind":"param","name":"error","id":"error"},{"ref":{"name":"StackTrace","refId":"dart.core/StackTrace"},"kind":"param","name":"stackTrace","id":"stackTrace"}],"isPrivate":true,"line":"35"},{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"method","name":"toString","id":"toString0()","line":"43"},{"kind":"constructor","name":"","id":"2()","children":[{"kind":"param","name":"error","id":"error"},{"ref":{"name":"StackTrace","refId":"dart.core/StackTrace"},"kind":"param","name":"stackTrace","id":"stackTrace"}],"line":"32"}],"isPrivate":true,"uri":"dart-sdk/lib/async/async_error.dart","line":"31"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"interfaces":[{"name":"Error","refId":"dart.core/Error"}],"isThrowable":true,"kind":"class","name":"_AsyncError","id":"_AsyncError","children":[{"isFinal":true,"kind":"variable","name":"error","id":"error","line":"25"},{"ref":{"name":"StackTrace","refId":"dart.core/StackTrace"},"isFinal":true,"kind":"variable","name":"stackTrace","id":"stackTrace","line":"26"},{"kind":"constructor","name":"","id":"2()","children":[{"initializedField":{"name":"error","refId":"dart.async/_AsyncError/error"},"kind":"param","name":"error","id":"error"},{"ref":{"name":"StackTrace","refId":"dart.core/StackTrace"},"initializedField":{"name":"stackTrace","refId":"dart.async/_AsyncError/stackTrace"},"kind":"param","name":"stackTrace","id":"stackTrace"}],"line":"28"}],"isPrivate":true,"uri":"dart-sdk/lib/async/async_error.dart","line":"24"}],"uri":"dart-sdk/lib/async/async.dart","line":"32"}