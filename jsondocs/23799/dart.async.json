{"dependencies":[{"uri":"dart-sdk/lib/core/core.dart","name":"dart:core","id":"dart.core","children":[{"comment":"\nEverything in Dart is an [Object].\n","uri":"dart-sdk/lib/core/object.dart","name":"Object","id":"Object","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"isOperator":true,"comment":"\nThe equality operator.\n\nThe default behavior for all [Object]s is to return true if and\nonly if [:this:] and [other] are the same object.\n\nIf a subclass overrides the equality operator it should override\nthe [hashCode] method as well to maintain consistency.\n","name":"==","id":"==1()","children":[{"name":"other","id":"other","kind":"param"}],"line":"29","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"comment":"\nReturns a string representation of this object.\n","name":"toString","id":"toString0()","line":"48","kind":"method"},{"comment":"\n[noSuchMethod] is invoked when users invoke a non-existant method\non an object. The name of the method and the arguments of the\ninvocation are passed to [noSuchMethod] in an [Invocation].\nIf [noSuchMethod] returns a value, that value becomes the result of\nthe original invocation.\n\nThe default behavior of [noSuchMethod] is to throw a\n[noSuchMethodError].\n","name":"noSuchMethod","id":"noSuchMethod1()","children":[{"ref":{"refId":"dart.core/Invocation","name":"Invocation"},"name":"invocation","id":"invocation","kind":"param"}],"line":"60","kind":"method"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"\nGet a hash code for this object.\n\nAll objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator [:==:]. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.\n\nIf a subclass overrides [hashCode] it should override the\nequality operator as well to maintain consistency.\n","name":"hashCode","id":"hashCode","line":"43","kind":"property"},{"ref":{"refId":"dart.core/Type","name":"Type"},"comment":"\nA representation of the runtime type of the object.\n","name":"runtimeType","id":"runtimeType","line":"65","kind":"property"},{"comment":"\nCreates a new [Object] instance.\n\n[Object] instances have no meaningful state, and are only useful\nthrough their identity. An [Object] instance is equal to itself\nonly.\n","name":"Object","id":"Object0()","line":"18","kind":"constructor"}],"line":"10","kind":"class"}],"line":"5","kind":"library"}],"uri":"dart-sdk/lib/async/async.dart","name":"dart:async","id":"dart.async","children":[{"returnType":{"refId":"void","name":"void"},"comment":"Default done handler forwards done. ","uri":"dart-sdk/lib/async/stream_pipe.dart","name":"_defaultHandleDone","isPrivate":true,"id":"_defaultHandleDone1()","children":[{"ref":{"refId":"dart.async/EventSink","name":"EventSink"},"name":"sink","id":"sink","kind":"param"}],"line":"420","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"Default error handler forwards all errors. ","uri":"dart-sdk/lib/async/stream_pipe.dart","name":"_defaultHandleError","isPrivate":true,"id":"_defaultHandleError2()","children":[{"name":"error","id":"error","kind":"param"},{"ref":{"refId":"dart.async/EventSink","name":"EventSink"},"name":"sink","id":"sink","kind":"param"}],"line":"415","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"Default data handler forwards all data. ","uri":"dart-sdk/lib/async/stream_pipe.dart","name":"_defaultHandleData","isPrivate":true,"id":"_defaultHandleData2()","children":[{"name":"data","id":"data","kind":"param"},{"ref":{"refId":"dart.async/EventSink","name":"EventSink"},"name":"sink","id":"sink","kind":"param"}],"line":"410","kind":"method"},{"comment":"Helper function to make an onError argument to [_runUserCode]. ","uri":"dart-sdk/lib/async/stream_pipe.dart","name":"_cancelAndError","isPrivate":true,"id":"_cancelAndError2()","children":[{"ref":{"refId":"dart.async/StreamSubscription","name":"StreamSubscription"},"name":"subscription","id":"subscription","kind":"param"},{"ref":{"refId":"dart.async/_FutureImpl","name":"_FutureImpl"},"name":"future","id":"future","kind":"param"}],"line":"28","kind":"method"},{"comment":"Runs user code and takes actions depending on success or failure. ","uri":"dart-sdk/lib/async/stream_pipe.dart","name":"_runUserCode","isPrivate":true,"id":"_runUserCode3()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"userCode","id":"userCode","children":[{"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","line":"13","kind":"functiontype"}],"kind":"param"},{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"onSuccess","id":"onSuccess","children":[{"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"uri":"dart-sdk/lib/async/stream_pipe.dart","name":"value","id":"value","line":"19","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"},{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"onError","id":"onError","children":[{"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"uri":"dart-sdk/lib/async/stream_pipe.dart","name":"error","id":"error","line":"19","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"}],"line":"19","kind":"method"},{"comment":"\nUtility function to attach a stack trace to an [error]  if it doesn't have\none already.\n","uri":"dart-sdk/lib/async/stream_pipe.dart","name":"_asyncError","isPrivate":true,"id":"_asyncError2()","children":[{"ref":{"refId":"dart.core/Object","name":"Object"},"name":"error","id":"error","kind":"param"},{"ref":{"refId":"dart.core/Object","name":"Object"},"name":"stackTrace","id":"stackTrace","kind":"param"}],"line":"11","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"Default done handler, does nothing. ","uri":"dart-sdk/lib/async/stream_impl.dart","name":"_nullDoneHandler","isPrivate":true,"id":"_nullDoneHandler0()","line":"558","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"Default error handler, reports the error to the global handler. ","uri":"dart-sdk/lib/async/stream_impl.dart","name":"_nullErrorHandler","isPrivate":true,"id":"_nullErrorHandler1()","children":[{"name":"error","id":"error","kind":"param"}],"line":"553","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"Default data handler, does nothing. ","uri":"dart-sdk/lib/async/stream_impl.dart","name":"_nullDataHandler","isPrivate":true,"id":"_nullDataHandler1()","children":[{"name":"value","id":"value","kind":"param"}],"line":"550","kind":"method"},{"comment":"Throws the given error in the next cycle. ","uri":"dart-sdk/lib/async/stream_impl.dart","name":"_throwDelayed","isPrivate":true,"id":"_throwDelayed2()","children":[{"name":"error","id":"error","kind":"param"},{"ref":{"refId":"dart.core/Object","name":"Object"},"isOptional":true,"name":"stackTrace","id":"stackTrace","kind":"param"}],"line":"8","kind":"method"},{"returnType":{"refId":"void","name":"void"},"uri":"dart-sdk/lib/async/stream_controller.dart","name":"_runGuarded","isPrivate":true,"id":"_runGuarded1()","children":[{"ref":{"refId":"dart.async/_NotificationHandler","name":"_NotificationHandler"},"name":"notificationHandler","id":"notificationHandler","kind":"param"}],"line":"355","kind":"method"},{"uri":"dart-sdk/lib/async/future_impl.dart","name":"deprecatedFutureValue","id":"deprecatedFutureValue1()","children":[{"ref":{"refId":"dart.async/_FutureImpl","name":"_FutureImpl"},"name":"future","id":"future","kind":"param"}],"line":"7","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nRuns the given [callback] asynchronously.\n\nCallbacks registered through this function are always executed in order and\nare guaranteed to run before other asynchronous events (like [Timer] events,\nor DOM events).\n\nWarning: it is possible to starve the DOM by registering asynchronous\ncallbacks through this method. For example the following program will\nrun the callbacks without ever giving the Timer callback a chance to execute:\n\n    Timer.run(() { print(\"executed\"); });  // Will never be executed;\n    foo() {\n      asyncRun(foo);  // Schedules [foo] in front of other events.\n    }\n    main() {\n      foo();\n    }\n","uri":"dart-sdk/lib/async/event_loop.dart","name":"runAsync","id":"runAsync1()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"callback","id":"callback","children":[{"returnType":{"refId":"void","name":"void"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","line":"13","kind":"functiontype"}],"kind":"param"}],"line":"47","kind":"method"},{"returnType":{"refId":"void","name":"void"},"uri":"dart-sdk/lib/async/event_loop.dart","name":"_asyncRunCallback","isPrivate":true,"id":"_asyncRunCallback0()","line":"12","kind":"method"},{"comment":"\n*This is an experimental API.*\n\nGet the [StackTrace] attached to [o].\n\nIf object [o] was thrown and caught in a dart:async method, a [StackTrace]\nobject was attached to it. Use [getAttachedStackTrace] to get that object.\n\nReturns [null] if no [StackTrace] was attached.\n","uri":"dart-sdk/lib/async/async_error.dart","name":"getAttachedStackTrace","id":"getAttachedStackTrace1()","children":[{"name":"o","id":"o","kind":"param"}],"line":"24","kind":"method"},{"returnType":{"refId":"void","name":"void"},"uri":"dart-sdk/lib/async/async_error.dart","name":"_attachStackTrace","isPrivate":true,"id":"_attachStackTrace2()","children":[{"name":"o","id":"o","kind":"param"},{"name":"st","id":"st","kind":"param"}],"line":"9","kind":"method"},{"ref":{"refId":"dart.collection/Queue","arguments":[{"refId":"dart.async/_AsyncCallback","name":"_AsyncCallback"}],"name":"Queue"},"uri":"dart-sdk/lib/async/event_loop.dart","name":"_asyncCallbacks","isPrivate":true,"id":"_asyncCallbacks","line":"10","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"uri":"dart-sdk/lib/async/event_loop.dart","name":"_callbacksAreEnqueued","isPrivate":true,"id":"_callbacksAreEnqueued","line":"9","kind":"variable"},{"ref":{"refId":"dart.core/Expando","name":"Expando"},"isFinal":true,"uri":"dart-sdk/lib/async/async_error.dart","name":"_stackTraceExpando","isPrivate":true,"id":"_stackTraceExpando","line":"7","kind":"variable"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"dart-sdk/lib/async/timer.dart","name":"Timer","id":"Timer","children":[{"returnType":{"refId":"void","name":"void"},"isStatic":true,"comment":"\nRuns the given [callback] asynchronously as soon as possible.\n\nThis function is equivalent to `new Timer(Duration.ZERO, callback)`.\n","name":"run","id":"run1()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"callback","id":"callback","children":[{"returnType":{"refId":"void","name":"void"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","line":"13","kind":"functiontype"}],"kind":"param"}],"line":"48","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nCancels the timer.\n","name":"cancel","id":"cancel0()","line":"55","kind":"method"},{"returnType":{"refId":"dart.async/Timer","name":"Timer"},"comment":"\nCreates a new timer.\n\nThe [callback] callback is invoked after the given [duration].\nA negative duration is treated similar to a duration of 0.\n\nIf the [duration] is statically known to be 0, consider using [run].\n\nFrequently the [duration] is either a constant or computed as in the\nfollowing example (taking advantage of the multiplication operator of\nthe Duration class):\n\n    const TIMEOUT = const Duration(seconds: 3);\n    const ms = const Duration(milliseconds: 1);\n\n    startTimeout([int milliseconds]) {\n      var duration = milliseconds == null ? TIMEOUT : ms * milliseconds;\n      return new Timer(duration, handleTimeout);\n    }\n\nNote: If Dart code using Timer is compiled to JavaScript, the finest\ngranularity available in the browser is 4 milliseconds.\n","name":"Timer","id":"Timer2()","children":[{"ref":{"refId":"dart.core/Duration","name":"Duration"},"name":"duration","id":"duration","kind":"param"},{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"callback","id":"callback","children":[{"returnType":{"refId":"void","name":"void"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","line":"13","kind":"functiontype"}],"kind":"param"}],"line":"32","kind":"constructor"},{"returnType":{"refId":"dart.async/Timer","name":"Timer"},"comment":"\nCreates a new repeating timer.\n\nThe [callback] is invoked repeatedly with [duration] intervals until\ncanceled. A negative duration is treated similar to a duration of 0.\n","name":"Timer.periodic","id":"Timer.periodic2()","children":[{"ref":{"refId":"dart.core/Duration","name":"Duration"},"name":"duration","id":"duration","kind":"param"},{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"callback","id":"callback","children":[{"returnType":{"refId":"void","name":"void"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.async/Timer","name":"Timer"},"uri":"dart-sdk/lib/async/timer.dart","name":"timer","id":"timer","line":"41","kind":"param"}],"line":"13","kind":"functiontype"}],"line":"41","kind":"param"}],"line":"40","kind":"constructor"}],"line":"7","kind":"class"},{"superclass":{"refId":"dart.async/StreamEventTransformer","arguments":[{"refId":"dart.async/_StreamTransformerImpl/S","name":"S"},{"refId":"dart.async/_StreamTransformerImpl/T","name":"T"}],"name":"StreamEventTransformer"},"comment":"\nA [StreamTransformer] that modifies stream events.\n\nThis class is used by [StreamTransformer]'s factory constructor.\nIt is actually an [StreamEventTransformer] where the functions used to\nmodify the events are passed as constructor arguments.\n\nIf an argument is omitted, it acts as the default method from\n[StreamEventTransformer].\n","uri":"dart-sdk/lib/async/stream_pipe.dart","name":"_StreamTransformerImpl","isPrivate":true,"id":"_StreamTransformerImpl","children":[{"returnType":{"refId":"void","name":"void"},"name":"handleData","id":"handleData2()","children":[{"ref":{"refId":"dart.async/_StreamTransformerImpl/S","name":"S"},"name":"data","id":"data","kind":"param"},{"ref":{"refId":"dart.async/EventSink","arguments":[{"refId":"dart.async/_StreamTransformerImpl/T","name":"T"}],"name":"EventSink"},"name":"sink","id":"sink","kind":"param"}],"line":"452","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"handleError","id":"handleError2()","children":[{"name":"error","id":"error","kind":"param"},{"ref":{"refId":"dart.async/EventSink","arguments":[{"refId":"dart.async/_StreamTransformerImpl/T","name":"T"}],"name":"EventSink"},"name":"sink","id":"sink","kind":"param"}],"line":"456","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"handleDone","id":"handleDone1()","children":[{"ref":{"refId":"dart.async/EventSink","arguments":[{"refId":"dart.async/_StreamTransformerImpl/T","name":"T"}],"name":"EventSink"},"name":"sink","id":"sink","kind":"param"}],"line":"460","kind":"method"},{"ref":{"refId":"dart.core/Function","name":"Function"},"isFinal":true,"name":"_handleData","isPrivate":true,"id":"_handleData","line":"438","kind":"variable"},{"ref":{"refId":"dart.async/_TransformErrorHandler","name":"_TransformErrorHandler"},"isFinal":true,"name":"_handleError","isPrivate":true,"id":"_handleError","line":"439","kind":"variable"},{"ref":{"refId":"dart.async/_TransformDoneHandler","name":"_TransformDoneHandler"},"isFinal":true,"name":"_handleDone","isPrivate":true,"id":"_handleDone","line":"440","kind":"variable"},{"name":"_StreamTransformerImpl","id":"_StreamTransformerImpl3()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"handleData","id":"handleData","children":[{"returnType":{"refId":"void","name":"void"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.async/_StreamTransformerImpl/S","name":"S"},"uri":"dart-sdk/lib/async/stream_pipe.dart","name":"data","id":"data","line":"442","kind":"param"},{"ref":{"refId":"dart.async/EventSink","arguments":[{"refId":"dart.async/_StreamTransformerImpl/T","name":"T"}],"name":"EventSink"},"uri":"dart-sdk/lib/async/stream_pipe.dart","name":"sink","id":"sink","line":"442","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"},{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"handleError","id":"handleError","children":[{"returnType":{"refId":"void","name":"void"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"uri":"dart-sdk/lib/async/stream_pipe.dart","name":"data","id":"data","line":"443","kind":"param"},{"ref":{"refId":"dart.async/EventSink","arguments":[{"refId":"dart.async/_StreamTransformerImpl/T","name":"T"}],"name":"EventSink"},"uri":"dart-sdk/lib/async/stream_pipe.dart","name":"sink","id":"sink","line":"443","kind":"param"}],"line":"13","kind":"functiontype"}],"line":"443","kind":"param"},{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"handleDone","id":"handleDone","children":[{"returnType":{"refId":"void","name":"void"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.async/EventSink","arguments":[{"refId":"dart.async/_StreamTransformerImpl/T","name":"T"}],"name":"EventSink"},"uri":"dart-sdk/lib/async/stream_pipe.dart","name":"sink","id":"sink","line":"444","kind":"param"}],"line":"13","kind":"functiontype"}],"line":"444","kind":"param"}],"line":"442","kind":"constructor"},{"name":"S","id":"S","kind":"typeparam"},{"name":"T","id":"T","kind":"typeparam"}],"line":"435","kind":"class"},{"returnType":{"refId":"void","name":"void"},"uri":"dart-sdk/lib/async/stream_pipe.dart","name":"_TransformDoneHandler","isPrivate":true,"id":"_TransformDoneHandler","children":[{"ref":{"refId":"dart.async/EventSink","arguments":[{"refId":"dart.async/_TransformDoneHandler/T","name":"T"}],"name":"EventSink"},"name":"sink","id":"sink","kind":"param"},{"name":"T","id":"T","kind":"typeparam"}],"line":"407","kind":"typedef"},{"returnType":{"refId":"void","name":"void"},"uri":"dart-sdk/lib/async/stream_pipe.dart","name":"_TransformErrorHandler","isPrivate":true,"id":"_TransformErrorHandler","children":[{"name":"data","id":"data","kind":"param"},{"ref":{"refId":"dart.async/EventSink","arguments":[{"refId":"dart.async/_TransformErrorHandler/T","name":"T"}],"name":"EventSink"},"name":"sink","id":"sink","kind":"param"},{"name":"T","id":"T","kind":"typeparam"}],"line":"406","kind":"typedef"},{"returnType":{"refId":"void","name":"void"},"uri":"dart-sdk/lib/async/stream_pipe.dart","name":"_TransformDataHandler","isPrivate":true,"id":"_TransformDataHandler","children":[{"ref":{"refId":"dart.async/_TransformDataHandler/S","name":"S"},"name":"data","id":"data","kind":"param"},{"ref":{"refId":"dart.async/EventSink","arguments":[{"refId":"dart.async/_TransformDataHandler/T","name":"T"}],"name":"EventSink"},"name":"sink","id":"sink","kind":"param"},{"name":"S","id":"S","kind":"typeparam"},{"name":"T","id":"T","kind":"typeparam"}],"line":"405","kind":"typedef"},{"superclass":{"refId":"dart.async/_ForwardingStream","arguments":[{"refId":"dart.async/_DistinctStream/T","name":"T"},{"refId":"dart.async/_DistinctStream/T","name":"T"}],"name":"_ForwardingStream"},"uri":"dart-sdk/lib/async/stream_pipe.dart","name":"_DistinctStream","isPrivate":true,"id":"_DistinctStream","children":[{"returnType":{"refId":"void","name":"void"},"name":"_handleData","isPrivate":true,"id":"_handleData2()","children":[{"ref":{"refId":"dart.async/_DistinctStream/T","name":"T"},"name":"inputEvent","id":"inputEvent","kind":"param"},{"ref":{"refId":"dart.async/_EventSink","arguments":[{"refId":"dart.async/_DistinctStream/T","name":"T"}],"name":"_EventSink"},"name":"sink","id":"sink","kind":"param"}],"line":"379","kind":"method"},{"isStatic":true,"name":"_SENTINEL","isPrivate":true,"id":"_SENTINEL","line":"371","kind":"variable"},{"ref":{"refId":"dart.async/_Equality","name":"_Equality"},"name":"_equals","isPrivate":true,"id":"_equals","line":"373","kind":"variable"},{"name":"_previous","isPrivate":true,"id":"_previous","line":"374","kind":"variable"},{"name":"_DistinctStream","id":"_DistinctStream2()","children":[{"ref":{"refId":"dart.async/Stream","arguments":[{"refId":"dart.async/_DistinctStream/T","name":"T"}],"name":"Stream"},"name":"source","id":"source","kind":"param"},{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"equals","id":"equals","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.async/_DistinctStream/T","name":"T"},"uri":"dart-sdk/lib/async/stream_pipe.dart","name":"a","id":"a","line":"376","kind":"param"},{"ref":{"refId":"dart.async/_DistinctStream/T","name":"T"},"uri":"dart-sdk/lib/async/stream_pipe.dart","name":"b","id":"b","line":"376","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"}],"line":"376","kind":"constructor"},{"name":"T","id":"T","kind":"typeparam"}],"line":"370","kind":"class"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"uri":"dart-sdk/lib/async/stream_pipe.dart","name":"_Equality","isPrivate":true,"id":"_Equality","children":[{"ref":{"refId":"dart.async/_Equality/T","name":"T"},"name":"a","id":"a","kind":"param"},{"ref":{"refId":"dart.async/_Equality/T","name":"T"},"name":"b","id":"b","kind":"param"},{"name":"T","id":"T","kind":"typeparam"}],"line":"368","kind":"typedef"},{"superclass":{"refId":"dart.async/_ForwardingStream","arguments":[{"refId":"dart.async/_SkipWhileStream/T","name":"T"},{"refId":"dart.async/_SkipWhileStream/T","name":"T"}],"name":"_ForwardingStream"},"uri":"dart-sdk/lib/async/stream_pipe.dart","name":"_SkipWhileStream","isPrivate":true,"id":"_SkipWhileStream","children":[{"returnType":{"refId":"void","name":"void"},"name":"_handleData","isPrivate":true,"id":"_handleData2()","children":[{"ref":{"refId":"dart.async/_SkipWhileStream/T","name":"T"},"name":"inputEvent","id":"inputEvent","kind":"param"},{"ref":{"refId":"dart.async/_EventSink","arguments":[{"refId":"dart.async/_SkipWhileStream/T","name":"T"}],"name":"_EventSink"},"name":"sink","id":"sink","kind":"param"}],"line":"347","kind":"method"},{"ref":{"refId":"dart.async/_Predicate","name":"_Predicate"},"isFinal":true,"name":"_test","isPrivate":true,"id":"_test","line":"341","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"_hasFailed","isPrivate":true,"id":"_hasFailed","line":"342","kind":"variable"},{"name":"_SkipWhileStream","id":"_SkipWhileStream2()","children":[{"ref":{"refId":"dart.async/Stream","arguments":[{"refId":"dart.async/_SkipWhileStream/T","name":"T"}],"name":"Stream"},"name":"source","id":"source","kind":"param"},{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"test","id":"test","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.async/_SkipWhileStream/T","name":"T"},"uri":"dart-sdk/lib/async/stream_pipe.dart","name":"value","id":"value","line":"344","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"}],"line":"344","kind":"constructor"},{"name":"T","id":"T","kind":"typeparam"}],"line":"340","kind":"class"},{"superclass":{"refId":"dart.async/_ForwardingStream","arguments":[{"refId":"dart.async/_SkipStream/T","name":"T"},{"refId":"dart.async/_SkipStream/T","name":"T"}],"name":"_ForwardingStream"},"uri":"dart-sdk/lib/async/stream_pipe.dart","name":"_SkipStream","isPrivate":true,"id":"_SkipStream","children":[{"returnType":{"refId":"void","name":"void"},"name":"_handleData","isPrivate":true,"id":"_handleData2()","children":[{"ref":{"refId":"dart.async/_SkipStream/T","name":"T"},"name":"inputEvent","id":"inputEvent","kind":"param"},{"ref":{"refId":"dart.async/_EventSink","arguments":[{"refId":"dart.async/_SkipStream/T","name":"T"}],"name":"_EventSink"},"name":"sink","id":"sink","kind":"param"}],"line":"331","kind":"method"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"_remaining","isPrivate":true,"id":"_remaining","line":"322","kind":"variable"},{"name":"_SkipStream","id":"_SkipStream2()","children":[{"ref":{"refId":"dart.async/Stream","arguments":[{"refId":"dart.async/_SkipStream/T","name":"T"}],"name":"Stream"},"name":"source","id":"source","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"count","id":"count","kind":"param"}],"line":"324","kind":"constructor"},{"name":"T","id":"T","kind":"typeparam"}],"line":"321","kind":"class"},{"superclass":{"refId":"dart.async/_ForwardingStream","arguments":[{"refId":"dart.async/_TakeWhileStream/T","name":"T"},{"refId":"dart.async/_TakeWhileStream/T","name":"T"}],"name":"_ForwardingStream"},"uri":"dart-sdk/lib/async/stream_pipe.dart","name":"_TakeWhileStream","isPrivate":true,"id":"_TakeWhileStream","children":[{"returnType":{"refId":"void","name":"void"},"name":"_handleData","isPrivate":true,"id":"_handleData2()","children":[{"ref":{"refId":"dart.async/_TakeWhileStream/T","name":"T"},"name":"inputEvent","id":"inputEvent","kind":"param"},{"ref":{"refId":"dart.async/_EventSink","arguments":[{"refId":"dart.async/_TakeWhileStream/T","name":"T"}],"name":"_EventSink"},"name":"sink","id":"sink","kind":"param"}],"line":"303","kind":"method"},{"ref":{"refId":"dart.async/_Predicate","name":"_Predicate"},"isFinal":true,"name":"_test","isPrivate":true,"id":"_test","line":"298","kind":"variable"},{"name":"_TakeWhileStream","id":"_TakeWhileStream2()","children":[{"ref":{"refId":"dart.async/Stream","arguments":[{"refId":"dart.async/_TakeWhileStream/T","name":"T"}],"name":"Stream"},"name":"source","id":"source","kind":"param"},{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"test","id":"test","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.async/_TakeWhileStream/T","name":"T"},"uri":"dart-sdk/lib/async/stream_pipe.dart","name":"value","id":"value","line":"300","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"}],"line":"300","kind":"constructor"},{"name":"T","id":"T","kind":"typeparam"}],"line":"297","kind":"class"},{"superclass":{"refId":"dart.async/_ForwardingStream","arguments":[{"refId":"dart.async/_TakeStream/T","name":"T"},{"refId":"dart.async/_TakeStream/T","name":"T"}],"name":"_ForwardingStream"},"uri":"dart-sdk/lib/async/stream_pipe.dart","name":"_TakeStream","isPrivate":true,"id":"_TakeStream","children":[{"returnType":{"refId":"void","name":"void"},"name":"_handleData","isPrivate":true,"id":"_handleData2()","children":[{"ref":{"refId":"dart.async/_TakeStream/T","name":"T"},"name":"inputEvent","id":"inputEvent","kind":"param"},{"ref":{"refId":"dart.async/_EventSink","arguments":[{"refId":"dart.async/_TakeStream/T","name":"T"}],"name":"_EventSink"},"name":"sink","id":"sink","kind":"param"}],"line":"283","kind":"method"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"_remaining","isPrivate":true,"id":"_remaining","line":"274","kind":"variable"},{"name":"_TakeStream","id":"_TakeStream2()","children":[{"ref":{"refId":"dart.async/Stream","arguments":[{"refId":"dart.async/_TakeStream/T","name":"T"}],"name":"Stream"},"name":"source","id":"source","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"count","id":"count","kind":"param"}],"line":"276","kind":"constructor"},{"name":"T","id":"T","kind":"typeparam"}],"line":"273","kind":"class"},{"superclass":{"refId":"dart.async/_ForwardingStream","arguments":[{"refId":"dart.async/_HandleErrorStream/T","name":"T"},{"refId":"dart.async/_HandleErrorStream/T","name":"T"}],"name":"_ForwardingStream"},"comment":"\nA stream pipe that converts or disposes error events\nbefore passing them on.\n","uri":"dart-sdk/lib/async/stream_pipe.dart","name":"_HandleErrorStream","isPrivate":true,"id":"_HandleErrorStream","children":[{"returnType":{"refId":"void","name":"void"},"name":"_handleError","isPrivate":true,"id":"_handleError2()","children":[{"ref":{"refId":"dart.core/Object","name":"Object"},"name":"error","id":"error","kind":"param"},{"ref":{"refId":"dart.async/_EventSink","arguments":[{"refId":"dart.async/_HandleErrorStream/T","name":"T"}],"name":"_EventSink"},"name":"sink","id":"sink","kind":"param"}],"line":"249","kind":"method"},{"ref":{"refId":"dart.async/_ErrorTransformation","name":"_ErrorTransformation"},"isFinal":true,"name":"_transform","isPrivate":true,"id":"_transform","line":"241","kind":"variable"},{"ref":{"refId":"dart.async/_ErrorTest","name":"_ErrorTest"},"isFinal":true,"name":"_test","isPrivate":true,"id":"_test","line":"242","kind":"variable"},{"name":"_HandleErrorStream","id":"_HandleErrorStream3()","children":[{"ref":{"refId":"dart.async/Stream","arguments":[{"refId":"dart.async/_HandleErrorStream/T","name":"T"}],"name":"Stream"},"name":"source","id":"source","kind":"param"},{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"transform","id":"transform","children":[{"returnType":{"refId":"void","name":"void"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"uri":"dart-sdk/lib/async/stream_pipe.dart","name":"event","id":"event","line":"245","kind":"param"}],"line":"13","kind":"functiontype"}],"line":"245","kind":"param"},{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"test","id":"test","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"uri":"dart-sdk/lib/async/stream_pipe.dart","name":"error","id":"error","line":"246","kind":"param"}],"line":"13","kind":"functiontype"}],"line":"246","kind":"param"}],"line":"244","kind":"constructor"},{"name":"T","id":"T","kind":"typeparam"}],"line":"240","kind":"class"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"uri":"dart-sdk/lib/async/stream_pipe.dart","name":"_ErrorTest","isPrivate":true,"id":"_ErrorTest","children":[{"name":"error","id":"error","kind":"param"}],"line":"234","kind":"typedef"},{"returnType":{"refId":"void","name":"void"},"uri":"dart-sdk/lib/async/stream_pipe.dart","name":"_ErrorTransformation","isPrivate":true,"id":"_ErrorTransformation","children":[{"name":"error","id":"error","kind":"param"}],"line":"233","kind":"typedef"},{"superclass":{"refId":"dart.async/_ForwardingStream","arguments":[{"refId":"dart.async/_ExpandStream/S","name":"S"},{"refId":"dart.async/_ExpandStream/T","name":"T"}],"name":"_ForwardingStream"},"comment":"\nA stream pipe that converts data events before passing them on.\n","uri":"dart-sdk/lib/async/stream_pipe.dart","name":"_ExpandStream","isPrivate":true,"id":"_ExpandStream","children":[{"returnType":{"refId":"void","name":"void"},"name":"_handleData","isPrivate":true,"id":"_handleData2()","children":[{"ref":{"refId":"dart.async/_ExpandStream/S","name":"S"},"name":"inputEvent","id":"inputEvent","kind":"param"},{"ref":{"refId":"dart.async/_EventSink","arguments":[{"refId":"dart.async/_ExpandStream/T","name":"T"}],"name":"_EventSink"},"name":"sink","id":"sink","kind":"param"}],"line":"219","kind":"method"},{"ref":{"refId":"dart.async/_Transformation","name":"_Transformation"},"isFinal":true,"name":"_expand","isPrivate":true,"id":"_expand","line":"214","kind":"variable"},{"name":"_ExpandStream","id":"_ExpandStream2()","children":[{"ref":{"refId":"dart.async/Stream","arguments":[{"refId":"dart.async/_ExpandStream/S","name":"S"}],"name":"Stream"},"name":"source","id":"source","kind":"param"},{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"expand","id":"expand","children":[{"returnType":{"refId":"dart.core/Iterable","arguments":[{"refId":"dart.async/_ExpandStream/T","name":"T"}],"name":"Iterable"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.async/_ExpandStream/S","name":"S"},"uri":"dart-sdk/lib/async/stream_pipe.dart","name":"event","id":"event","line":"216","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"}],"line":"216","kind":"constructor"},{"name":"S","id":"S","kind":"typeparam"},{"name":"T","id":"T","kind":"typeparam"}],"line":"213","kind":"class"},{"superclass":{"refId":"dart.async/_ForwardingStream","arguments":[{"refId":"dart.async/_MapStream/S","name":"S"},{"refId":"dart.async/_MapStream/T","name":"T"}],"name":"_ForwardingStream"},"comment":"\nA stream pipe that converts data events before passing them on.\n","uri":"dart-sdk/lib/async/stream_pipe.dart","name":"_MapStream","isPrivate":true,"id":"_MapStream","children":[{"returnType":{"refId":"void","name":"void"},"name":"_handleData","isPrivate":true,"id":"_handleData2()","children":[{"ref":{"refId":"dart.async/_MapStream/S","name":"S"},"name":"inputEvent","id":"inputEvent","kind":"param"},{"ref":{"refId":"dart.async/_EventSink","arguments":[{"refId":"dart.async/_MapStream/T","name":"T"}],"name":"_EventSink"},"name":"sink","id":"sink","kind":"param"}],"line":"198","kind":"method"},{"ref":{"refId":"dart.async/_Transformation","name":"_Transformation"},"isFinal":true,"name":"_transform","isPrivate":true,"id":"_transform","line":"193","kind":"variable"},{"name":"_MapStream","id":"_MapStream2()","children":[{"ref":{"refId":"dart.async/Stream","arguments":[{"refId":"dart.async/_MapStream/S","name":"S"}],"name":"Stream"},"name":"source","id":"source","kind":"param"},{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"transform","id":"transform","children":[{"returnType":{"refId":"dart.async/_MapStream/T","name":"T"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.async/_MapStream/S","name":"S"},"uri":"dart-sdk/lib/async/stream_pipe.dart","name":"event","id":"event","line":"195","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"}],"line":"195","kind":"constructor"},{"name":"S","id":"S","kind":"typeparam"},{"name":"T","id":"T","kind":"typeparam"}],"line":"192","kind":"class"},{"returnType":{"refId":"dart.async/_Transformation/T","name":"T"},"uri":"dart-sdk/lib/async/stream_pipe.dart","name":"_Transformation","isPrivate":true,"id":"_Transformation","children":[{"ref":{"refId":"dart.async/_Transformation/S","name":"S"},"name":"value","id":"value","kind":"param"},{"name":"S","id":"S","kind":"typeparam"},{"name":"T","id":"T","kind":"typeparam"}],"line":"187","kind":"typedef"},{"superclass":{"refId":"dart.async/_ForwardingStream","arguments":[{"refId":"dart.async/_WhereStream/T","name":"T"},{"refId":"dart.async/_WhereStream/T","name":"T"}],"name":"_ForwardingStream"},"uri":"dart-sdk/lib/async/stream_pipe.dart","name":"_WhereStream","isPrivate":true,"id":"_WhereStream","children":[{"returnType":{"refId":"void","name":"void"},"name":"_handleData","isPrivate":true,"id":"_handleData2()","children":[{"ref":{"refId":"dart.async/_WhereStream/T","name":"T"},"name":"inputEvent","id":"inputEvent","kind":"param"},{"ref":{"refId":"dart.async/_EventSink","arguments":[{"refId":"dart.async/_WhereStream/T","name":"T"}],"name":"_EventSink"},"name":"sink","id":"sink","kind":"param"}],"line":"172","kind":"method"},{"ref":{"refId":"dart.async/_Predicate","name":"_Predicate"},"isFinal":true,"name":"_test","isPrivate":true,"id":"_test","line":"167","kind":"variable"},{"name":"_WhereStream","id":"_WhereStream2()","children":[{"ref":{"refId":"dart.async/Stream","arguments":[{"refId":"dart.async/_WhereStream/T","name":"T"}],"name":"Stream"},"name":"source","id":"source","kind":"param"},{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"test","id":"test","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.async/_WhereStream/T","name":"T"},"uri":"dart-sdk/lib/async/stream_pipe.dart","name":"value","id":"value","line":"169","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"}],"line":"169","kind":"constructor"},{"name":"T","id":"T","kind":"typeparam"}],"line":"166","kind":"class"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"uri":"dart-sdk/lib/async/stream_pipe.dart","name":"_Predicate","isPrivate":true,"id":"_Predicate","children":[{"ref":{"refId":"dart.async/_Predicate/T","name":"T"},"name":"value","id":"value","kind":"param"},{"name":"T","id":"T","kind":"typeparam"}],"line":"164","kind":"typedef"},{"superclass":{"refId":"dart.async/_BufferingStreamSubscription","arguments":[{"refId":"dart.async/_ForwardingStreamSubscription/T","name":"T"}],"name":"_BufferingStreamSubscription"},"comment":"\nAbstract superclass for subscriptions that forward to other subscriptions.\n","uri":"dart-sdk/lib/async/stream_pipe.dart","name":"_ForwardingStreamSubscription","isPrivate":true,"id":"_ForwardingStreamSubscription","children":[{"returnType":{"refId":"void","name":"void"},"name":"_add","isPrivate":true,"id":"_add1()","children":[{"ref":{"refId":"dart.async/_ForwardingStreamSubscription/T","name":"T"},"name":"data","id":"data","kind":"param"}],"line":"111","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_addError","isPrivate":true,"id":"_addError1()","children":[{"ref":{"refId":"dart.core/Object","name":"Object"},"name":"error","id":"error","kind":"param"}],"line":"116","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_onPause","isPrivate":true,"id":"_onPause0()","line":"123","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_onResume","isPrivate":true,"id":"_onResume0()","line":"128","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_onCancel","isPrivate":true,"id":"_onCancel0()","line":"133","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_handleData","isPrivate":true,"id":"_handleData1()","children":[{"name":"data","id":"data","kind":"param"}],"line":"145","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_handleError","isPrivate":true,"id":"_handleError1()","children":[{"name":"error","id":"error","kind":"param"}],"line":"149","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_handleDone","isPrivate":true,"id":"_handleDone0()","line":"153","kind":"method"},{"ref":{"refId":"dart.async/_ForwardingStream","arguments":[{"refId":"dart.async/_ForwardingStreamSubscription/S","name":"S"},{"refId":"dart.async/_ForwardingStreamSubscription/T","name":"T"}],"name":"_ForwardingStream"},"isFinal":true,"name":"_stream","isPrivate":true,"id":"_stream","line":"91","kind":"variable"},{"ref":{"refId":"dart.async/StreamSubscription","arguments":[{"refId":"dart.async/_ForwardingStreamSubscription/S","name":"S"}],"name":"StreamSubscription"},"name":"_subscription","isPrivate":true,"id":"_subscription","line":"93","kind":"variable"},{"name":"_ForwardingStreamSubscription","id":"_ForwardingStreamSubscription5()","children":[{"initializedField":{"refId":"dart.async/_ForwardingStreamSubscription/_stream","name":"_stream"},"ref":{"refId":"dart.async/_ForwardingStream","arguments":[{"refId":"dart.async/_ForwardingStreamSubscription/S","name":"S"},{"refId":"dart.async/_ForwardingStreamSubscription/T","name":"T"}],"name":"_ForwardingStream"},"name":"_stream","isPrivate":true,"id":"_stream","kind":"param"},{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"onData","id":"onData","children":[{"returnType":{"refId":"void","name":"void"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.async/_ForwardingStreamSubscription/T","name":"T"},"uri":"dart-sdk/lib/async/stream_pipe.dart","name":"data","id":"data","line":"96","kind":"param"}],"line":"13","kind":"functiontype"}],"line":"96","kind":"param"},{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"onError","id":"onError","children":[{"returnType":{"refId":"void","name":"void"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"uri":"dart-sdk/lib/async/stream_pipe.dart","name":"error","id":"error","line":"97","kind":"param"}],"line":"13","kind":"functiontype"}],"line":"97","kind":"param"},{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"onDone","id":"onDone","children":[{"returnType":{"refId":"void","name":"void"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","line":"13","kind":"functiontype"}],"line":"98","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"cancelOnError","id":"cancelOnError","line":"99","kind":"param"}],"line":"95","kind":"constructor"},{"name":"S","id":"S","kind":"typeparam"},{"name":"T","id":"T","kind":"typeparam"}],"line":"89","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.async/Stream","arguments":[{"refId":"dart.async/_ForwardingStream/T","name":"T"}],"name":"Stream"},"comment":"\nA [Stream] that forwards subscriptions to another stream.\n\nThis stream implements [Stream], but forwards all subscriptions\nto an underlying stream, and wraps the returned subscription to\nmodify the events on the way.\n\nThis class is intended for internal use only.\n","uri":"dart-sdk/lib/async/stream_pipe.dart","name":"_ForwardingStream","isPrivate":true,"id":"_ForwardingStream","children":[{"returnType":{"refId":"dart.async/StreamSubscription","arguments":[{"refId":"dart.async/_ForwardingStream/T","name":"T"}],"name":"StreamSubscription"},"name":"listen","id":"listen4()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"onData","id":"onData","children":[{"returnType":{"refId":"void","name":"void"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.async/_ForwardingStream/T","name":"T"},"uri":"dart-sdk/lib/async/stream_pipe.dart","name":"value","id":"value","line":"51","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/Function","name":"Function"},"isOptional":true,"name":"onError","id":"onError","children":[{"returnType":{"refId":"void","name":"void"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"uri":"dart-sdk/lib/async/stream_pipe.dart","name":"error","id":"error","line":"52","kind":"param"}],"line":"13","kind":"functiontype"}],"line":"52","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/Function","name":"Function"},"isOptional":true,"name":"onDone","id":"onDone","children":[{"returnType":{"refId":"void","name":"void"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","line":"13","kind":"functiontype"}],"line":"53","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"name":"cancelOnError","id":"cancelOnError","line":"54","kind":"param"}],"line":"51","kind":"method"},{"returnType":{"refId":"dart.async/StreamSubscription","arguments":[{"refId":"dart.async/_ForwardingStream/T","name":"T"}],"name":"StreamSubscription"},"name":"_createSubscription","isPrivate":true,"id":"_createSubscription4()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"onData","id":"onData","children":[{"returnType":{"refId":"void","name":"void"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.async/_ForwardingStream/T","name":"T"},"uri":"dart-sdk/lib/async/stream_pipe.dart","name":"value","id":"value","line":"62","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"},{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"onError","id":"onError","children":[{"returnType":{"refId":"void","name":"void"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"uri":"dart-sdk/lib/async/stream_pipe.dart","name":"error","id":"error","line":"63","kind":"param"}],"line":"13","kind":"functiontype"}],"line":"63","kind":"param"},{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"onDone","id":"onDone","children":[{"returnType":{"refId":"void","name":"void"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","line":"13","kind":"functiontype"}],"line":"64","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"cancelOnError","id":"cancelOnError","line":"65","kind":"param"}],"line":"62","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_handleData","isPrivate":true,"id":"_handleData2()","children":[{"ref":{"refId":"dart.async/_ForwardingStream/S","name":"S"},"name":"data","id":"data","kind":"param"},{"ref":{"refId":"dart.async/_EventSink","arguments":[{"refId":"dart.async/_ForwardingStream/T","name":"T"}],"name":"_EventSink"},"name":"sink","id":"sink","kind":"param"}],"line":"72","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_handleError","isPrivate":true,"id":"_handleError2()","children":[{"name":"error","id":"error","kind":"param"},{"ref":{"refId":"dart.async/_EventSink","arguments":[{"refId":"dart.async/_ForwardingStream/T","name":"T"}],"name":"_EventSink"},"name":"sink","id":"sink","kind":"param"}],"line":"77","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_handleDone","isPrivate":true,"id":"_handleDone1()","children":[{"ref":{"refId":"dart.async/_EventSink","arguments":[{"refId":"dart.async/_ForwardingStream/T","name":"T"}],"name":"_EventSink"},"name":"sink","id":"sink","kind":"param"}],"line":"81","kind":"method"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"isBroadcast","id":"isBroadcast","line":"49","kind":"property"},{"ref":{"refId":"dart.async/Stream","arguments":[{"refId":"dart.async/_ForwardingStream/S","name":"S"}],"name":"Stream"},"isFinal":true,"name":"_source","isPrivate":true,"id":"_source","line":"45","kind":"variable"},{"name":"_ForwardingStream","id":"_ForwardingStream1()","children":[{"initializedField":{"refId":"dart.async/_ForwardingStream/_source","name":"_source"},"ref":{"refId":"dart.async/Stream","arguments":[{"refId":"dart.async/_ForwardingStream/S","name":"S"}],"name":"Stream"},"name":"_source","isPrivate":true,"id":"_source","kind":"param"}],"line":"47","kind":"constructor"},{"name":"S","id":"S","kind":"typeparam"},{"name":"T","id":"T","kind":"typeparam"}],"line":"44","kind":"class"},{"interfaces":[{"refId":"dart.async/StreamIterator","arguments":[{"refId":"dart.async/_StreamIteratorImpl/T","name":"T"}],"name":"StreamIterator"}],"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nSimple implementation of [StreamIterator].\n","uri":"dart-sdk/lib/async/stream_impl.dart","name":"_StreamIteratorImpl","isPrivate":true,"id":"_StreamIteratorImpl","children":[{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"dart.core/bool","name":"bool"}],"name":"Future"},"name":"moveNext","id":"moveNext0()","line":"810","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"Clears up the internal state when the iterator ends. ","name":"_clear","isPrivate":true,"id":"_clear0()","line":"842","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"cancel","id":"cancel0()","line":"849","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_onData","isPrivate":true,"id":"_onData1()","children":[{"ref":{"refId":"dart.async/_StreamIteratorImpl/T","name":"T"},"name":"data","id":"data","kind":"param"}],"line":"861","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_onError","isPrivate":true,"id":"_onError1()","children":[{"ref":{"refId":"dart.core/Object","name":"Object"},"name":"error","id":"error","kind":"param"}],"line":"876","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_onDone","isPrivate":true,"id":"_onDone0()","line":"890","kind":"method"},{"ref":{"refId":"dart.async/_StreamIteratorImpl/T","name":"T"},"name":"current","id":"current","line":"808","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"The simple state where [_data] holds the data to return, and [moveNext]\nis allowed. The subscription is actively listening.","name":"_STATE_FOUND","isPrivate":true,"id":"_STATE_FOUND","line":"766","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"State set after [moveNext] has returned false or an error,\nor after calling [cancel]. The subscription is always canceled.","name":"_STATE_DONE","isPrivate":true,"id":"_STATE_DONE","line":"769","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"State set after calling [moveNext], but before its returned future has\ncompleted. Calling [moveNext] again is not allowed in this state.\nThe subscription is actively listening.","name":"_STATE_MOVING","isPrivate":true,"id":"_STATE_MOVING","line":"773","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"States set when another event occurs while in _STATE_FOUND.\nThis extra overflow event is cached until the next call to [moveNext],\nwhich will complete as if it received the event normally.\nThe subscription is paused in these states, so we only ever get one\nevent too many.","name":"_STATE_EXTRA_DATA","isPrivate":true,"id":"_STATE_EXTRA_DATA","line":"779","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"_STATE_EXTRA_ERROR","isPrivate":true,"id":"_STATE_EXTRA_ERROR","line":"780","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"_STATE_EXTRA_DONE","isPrivate":true,"id":"_STATE_EXTRA_DONE","line":"781","kind":"variable"},{"ref":{"refId":"dart.async/StreamSubscription","name":"StreamSubscription"},"comment":"Subscription being listened to.","name":"_subscription","isPrivate":true,"id":"_subscription","line":"784","kind":"variable"},{"ref":{"refId":"dart.async/_StreamIteratorImpl/T","name":"T"},"comment":"The current element represented by the most recent call to moveNext.\n\nIs null between the time moveNext is called and its future completes.","name":"_current","isPrivate":true,"id":"_current","line":"789","kind":"variable"},{"comment":"The future returned by the most recent call to [moveNext].\n\nAlso used to store the next value/error in case the stream provides an\nevent before [moveNext] is called again. In that case, the stream will\nbe paused to prevent further events.","name":"_futureOrPrefetch","isPrivate":true,"id":"_futureOrPrefetch","line":"796","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"The current state.","name":"_state","isPrivate":true,"id":"_state","line":"799","kind":"variable"},{"name":"_StreamIteratorImpl","id":"_StreamIteratorImpl1()","children":[{"ref":{"refId":"dart.async/Stream","arguments":[{"refId":"dart.async/_StreamIteratorImpl/T","name":"T"}],"name":"Stream"},"name":"stream","id":"stream","kind":"param"}],"line":"801","kind":"constructor"},{"name":"T","id":"T","kind":"typeparam"}],"line":"755","kind":"class"},{"superclass":{"refId":"dart.async/Stream","arguments":[{"refId":"dart.async/_AsBroadcastStream/T","name":"T"}],"name":"Stream"},"uri":"dart-sdk/lib/async/stream_impl.dart","name":"_AsBroadcastStream","isPrivate":true,"id":"_AsBroadcastStream","children":[{"returnType":{"refId":"dart.async/StreamSubscription","arguments":[{"refId":"dart.async/_AsBroadcastStream/T","name":"T"}],"name":"StreamSubscription"},"name":"listen","id":"listen4()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"onData","id":"onData","children":[{"returnType":{"refId":"void","name":"void"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.async/_AsBroadcastStream/T","name":"T"},"uri":"dart-sdk/lib/async/stream_impl.dart","name":"data","id":"data","line":"727","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/Function","name":"Function"},"isOptional":true,"name":"onError","id":"onError","children":[{"returnType":{"refId":"void","name":"void"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.core/Object","name":"Object"},"uri":"dart-sdk/lib/async/stream_impl.dart","name":"error","id":"error","line":"728","kind":"param"}],"line":"13","kind":"functiontype"}],"line":"728","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/Function","name":"Function"},"isOptional":true,"name":"onDone","id":"onDone","children":[{"returnType":{"refId":"void","name":"void"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","line":"13","kind":"functiontype"}],"line":"729","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"name":"cancelOnError","id":"cancelOnError","line":"730","kind":"param"}],"line":"727","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_onCancel","isPrivate":true,"id":"_onCancel0()","line":"743","kind":"method"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"isBroadcast","id":"isBroadcast","line":"725","kind":"property"},{"ref":{"refId":"dart.async/Stream","arguments":[{"refId":"dart.async/_AsBroadcastStream/T","name":"T"}],"name":"Stream"},"isFinal":true,"name":"_source","isPrivate":true,"id":"_source","line":"717","kind":"variable"},{"ref":{"refId":"dart.async/_AsBroadcastStreamController","arguments":[{"refId":"dart.async/_AsBroadcastStream/T","name":"T"}],"name":"_AsBroadcastStreamController"},"name":"_controller","isPrivate":true,"id":"_controller","line":"718","kind":"variable"},{"ref":{"refId":"dart.async/StreamSubscription","arguments":[{"refId":"dart.async/_AsBroadcastStream/T","name":"T"}],"name":"StreamSubscription"},"name":"_subscription","isPrivate":true,"id":"_subscription","line":"719","kind":"variable"},{"name":"_AsBroadcastStream","id":"_AsBroadcastStream1()","children":[{"initializedField":{"refId":"dart.async/_AsBroadcastStream/_source","name":"_source"},"ref":{"refId":"dart.async/Stream","arguments":[{"refId":"dart.async/_AsBroadcastStream/T","name":"T"}],"name":"Stream"},"name":"_source","isPrivate":true,"id":"_source","kind":"param"}],"line":"721","kind":"constructor"},{"name":"T","id":"T","kind":"typeparam"}],"line":"716","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"dart-sdk/lib/async/stream_impl.dart","name":"_BroadcastLinkedList","isPrivate":true,"id":"_BroadcastLinkedList","children":[{"returnType":{"refId":"void","name":"void"},"name":"_unlink","isPrivate":true,"id":"_unlink0()","line":"701","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_insertBefore","isPrivate":true,"id":"_insertBefore1()","children":[{"ref":{"refId":"dart.async/_BroadcastLinkedList","name":"_BroadcastLinkedList"},"name":"newNext","id":"newNext","kind":"param"}],"line":"707","kind":"method"},{"ref":{"refId":"dart.async/_BroadcastLinkedList","name":"_BroadcastLinkedList"},"name":"_next","isPrivate":true,"id":"_next","line":"698","kind":"variable"},{"ref":{"refId":"dart.async/_BroadcastLinkedList","name":"_BroadcastLinkedList"},"name":"_previous","isPrivate":true,"id":"_previous","line":"699","kind":"variable"}],"line":"697","kind":"class"},{"superclass":{"refId":"dart.async/_PendingEvents","name":"_PendingEvents"},"comment":"Class holding pending events for a [_StreamImpl]. ","uri":"dart-sdk/lib/async/stream_impl.dart","name":"_StreamImplEvents","isPrivate":true,"id":"_StreamImplEvents","children":[{"returnType":{"refId":"void","name":"void"},"name":"add","id":"add1()","children":[{"ref":{"refId":"dart.async/_DelayedEvent","name":"_DelayedEvent"},"name":"event","id":"event","kind":"param"}],"line":"673","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"handleNext","id":"handleNext1()","children":[{"ref":{"refId":"dart.async/_EventDispatch","name":"_EventDispatch"},"name":"dispatch","id":"dispatch","kind":"param"}],"line":"681","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"clear","id":"clear0()","line":"691","kind":"method"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"isEmpty","id":"isEmpty","line":"671","kind":"property"},{"ref":{"refId":"dart.async/_DelayedEvent","name":"_DelayedEvent"},"comment":"Single linked list of [_DelayedEvent] objects.","name":"firstPendingEvent","id":"firstPendingEvent","line":"667","kind":"variable"},{"ref":{"refId":"dart.async/_DelayedEvent","name":"_DelayedEvent"},"comment":"Last element in the list of pending events. New events are added after it.","name":"lastPendingEvent","id":"lastPendingEvent","line":"669","kind":"variable"}],"line":"665","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"Superclass for provider of pending events. ","uri":"dart-sdk/lib/async/stream_impl.dart","name":"_PendingEvents","isPrivate":true,"id":"_PendingEvents","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nSchedule an event to run later.\n\nIf called more than once, it should be called with the same dispatch as\nargument each time. It may reuse an earlier argument in some cases.\n","name":"schedule","id":"schedule1()","children":[{"ref":{"refId":"dart.async/_EventDispatch","name":"_EventDispatch"},"name":"dispatch","id":"dispatch","kind":"param"}],"line":"636","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"cancelSchedule","id":"cancelSchedule0()","line":"653","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"handleNext","id":"handleNext1()","children":[{"ref":{"refId":"dart.async/_EventDispatch","name":"_EventDispatch"},"name":"dispatch","id":"dispatch","kind":"param"}],"line":"657","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"Throw away any pending events and cancel scheduled events. ","name":"clear","id":"clear0()","line":"660","kind":"method"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"isEmpty","id":"isEmpty","line":"625","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"isScheduled","id":"isScheduled","line":"627","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"_eventScheduled","isPrivate":true,"id":"_eventScheduled","line":"628","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"_STATE_UNSCHEDULED","isPrivate":true,"id":"_STATE_UNSCHEDULED","line":"604","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"_STATE_SCHEDULED","isPrivate":true,"id":"_STATE_SCHEDULED","line":"606","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"_STATE_CANCELED","isPrivate":true,"id":"_STATE_CANCELED","line":"609","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"\nState of being scheduled.\n\nSet to [_STATE_SCHEDULED] when pending events are scheduled for\nasync dispatch. Since we can't cancel a [runAsync] call, if schduling\nis \"canceled\", the _state is simply set to [_STATE_CANCELED] which will\nmake the async code do nothing except resetting [_state].\n\nIf events are scheduled while the state is [_STATE_CANCELED], it is\nmerely switched back to [_STATE_SCHEDULED], but no new call to [runAsync]\nis performed.\n","name":"_state","isPrivate":true,"id":"_state","line":"623","kind":"variable"}],"line":"602","kind":"class"},{"interfaces":[{"refId":"dart.async/_DelayedEvent","name":"_DelayedEvent"}],"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"A delayed done event. ","uri":"dart-sdk/lib/async/stream_impl.dart","name":"_DelayedDone","isPrivate":true,"id":"_DelayedDone","children":[{"returnType":{"refId":"void","name":"void"},"name":"perform","id":"perform1()","children":[{"ref":{"refId":"dart.async/_EventDispatch","name":"_EventDispatch"},"name":"dispatch","id":"dispatch","kind":"param"}],"line":"590","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isSetter":true,"name":"next=","id":"next=1()","children":[{"ref":{"refId":"dart.async/_DelayedEvent","name":"_DelayedEvent"},"name":"_","isPrivate":true,"id":"_","kind":"param"}],"line":"596","kind":"method"},{"ref":{"refId":"dart.async/_DelayedEvent","name":"_DelayedEvent"},"name":"next","id":"next","line":"594","kind":"property"},{"name":"_DelayedDone","id":"_DelayedDone0()","line":"589","kind":"constructor"}],"line":"588","kind":"class"},{"superclass":{"refId":"dart.async/_DelayedEvent","name":"_DelayedEvent"},"comment":"A delayed error event. ","uri":"dart-sdk/lib/async/stream_impl.dart","name":"_DelayedError","isPrivate":true,"id":"_DelayedError","children":[{"returnType":{"refId":"void","name":"void"},"name":"perform","id":"perform1()","children":[{"ref":{"refId":"dart.async/_EventDispatch","name":"_EventDispatch"},"name":"dispatch","id":"dispatch","kind":"param"}],"line":"582","kind":"method"},{"isFinal":true,"name":"error","id":"error","line":"580","kind":"variable"},{"name":"_DelayedError","id":"_DelayedError1()","children":[{"initializedField":{"refId":"dart.async/_DelayedError/error","name":"error"},"name":"error","id":"error","kind":"param"}],"line":"581","kind":"constructor"}],"line":"579","kind":"class"},{"superclass":{"refId":"dart.async/_DelayedEvent","name":"_DelayedEvent"},"comment":"A delayed data event. ","uri":"dart-sdk/lib/async/stream_impl.dart","name":"_DelayedData","isPrivate":true,"id":"_DelayedData","children":[{"returnType":{"refId":"void","name":"void"},"name":"perform","id":"perform1()","children":[{"ref":{"refId":"dart.async/_EventDispatch","arguments":[{"refId":"dart.async/_DelayedData/T","name":"T"}],"name":"_EventDispatch"},"name":"dispatch","id":"dispatch","kind":"param"}],"line":"573","kind":"method"},{"ref":{"refId":"dart.async/_DelayedData/T","name":"T"},"isFinal":true,"name":"value","id":"value","line":"571","kind":"variable"},{"name":"_DelayedData","id":"_DelayedData1()","children":[{"initializedField":{"refId":"dart.async/_DelayedData/value","name":"value"},"ref":{"refId":"dart.async/_DelayedData/T","name":"T"},"name":"value","id":"value","kind":"param"}],"line":"572","kind":"constructor"},{"name":"T","id":"T","kind":"typeparam"}],"line":"570","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"A delayed event on a buffering stream subscription. ","uri":"dart-sdk/lib/async/stream_impl.dart","name":"_DelayedEvent","isPrivate":true,"id":"_DelayedEvent","children":[{"returnType":{"refId":"void","name":"void"},"comment":"Execute the delayed event on the [StreamController]. ","name":"perform","id":"perform1()","children":[{"ref":{"refId":"dart.async/_EventDispatch","name":"_EventDispatch"},"name":"dispatch","id":"dispatch","kind":"param"}],"line":"566","kind":"method"},{"ref":{"refId":"dart.async/_DelayedEvent","name":"_DelayedEvent"},"comment":"Added as a linked list on the [StreamController]. ","name":"next","id":"next","line":"564","kind":"variable"}],"line":"562","kind":"class"},{"returnType":{"refId":"void","name":"void"},"uri":"dart-sdk/lib/async/stream_impl.dart","name":"_DoneHandler","isPrivate":true,"id":"_DoneHandler","line":"546","kind":"typedef"},{"returnType":{"refId":"void","name":"void"},"uri":"dart-sdk/lib/async/stream_impl.dart","name":"_ErrorHandler","isPrivate":true,"id":"_ErrorHandler","children":[{"name":"error","id":"error","kind":"param"}],"line":"545","kind":"typedef"},{"returnType":{"refId":"void","name":"void"},"uri":"dart-sdk/lib/async/stream_impl.dart","name":"_DataHandler","isPrivate":true,"id":"_DataHandler","children":[{"ref":{"refId":"dart.async/_DataHandler/T","name":"T"},"name":"value","id":"value","kind":"param"},{"name":"T","id":"T","kind":"typeparam"}],"line":"544","kind":"typedef"},{"superclass":{"refId":"dart.async/_PendingEvents","name":"_PendingEvents"},"comment":"Pending events object that gets its events from an [Iterable]. ","uri":"dart-sdk/lib/async/stream_impl.dart","name":"_IterablePendingEvents","isPrivate":true,"id":"_IterablePendingEvents","children":[{"returnType":{"refId":"void","name":"void"},"name":"handleNext","id":"handleNext1()","children":[{"ref":{"refId":"dart.async/_EventDispatch","name":"_EventDispatch"},"name":"dispatch","id":"dispatch","kind":"param"}],"line":"509","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"clear","id":"clear0()","line":"534","kind":"method"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"isEmpty","id":"isEmpty","line":"507","kind":"property"},{"ref":{"refId":"dart.core/Iterator","arguments":[{"refId":"dart.async/_IterablePendingEvents/T","name":"T"}],"name":"Iterator"},"name":"_iterator","isPrivate":true,"id":"_iterator","line":"503","kind":"variable"},{"name":"_IterablePendingEvents","id":"_IterablePendingEvents1()","children":[{"ref":{"refId":"dart.core/Iterable","arguments":[{"refId":"dart.async/_IterablePendingEvents/T","name":"T"}],"name":"Iterable"},"name":"data","id":"data","kind":"param"}],"line":"505","kind":"constructor"},{"name":"T","id":"T","kind":"typeparam"}],"line":"500","kind":"class"},{"superclass":{"refId":"dart.async/_StreamImpl","arguments":[{"refId":"dart.async/_GeneratedStreamImpl/T","name":"T"}],"name":"_StreamImpl"},"comment":"Stream that generates its own events. ","uri":"dart-sdk/lib/async/stream_impl.dart","name":"_GeneratedStreamImpl","isPrivate":true,"id":"_GeneratedStreamImpl","children":[{"returnType":{"refId":"dart.async/StreamSubscription","name":"StreamSubscription"},"name":"_createSubscription","isPrivate":true,"id":"_createSubscription4()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"onData","id":"onData","children":[{"returnType":{"refId":"void","name":"void"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.async/_GeneratedStreamImpl/T","name":"T"},"uri":"dart-sdk/lib/async/stream_impl.dart","name":"data","id":"data","line":"486","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"},{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"onError","id":"onError","children":[{"returnType":{"refId":"void","name":"void"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.core/Object","name":"Object"},"uri":"dart-sdk/lib/async/stream_impl.dart","name":"error","id":"error","line":"487","kind":"param"}],"line":"13","kind":"functiontype"}],"line":"487","kind":"param"},{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"onDone","id":"onDone","children":[{"returnType":{"refId":"void","name":"void"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","line":"13","kind":"functiontype"}],"line":"488","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"cancelOnError","id":"cancelOnError","line":"489","kind":"param"}],"line":"486","kind":"method"},{"ref":{"refId":"dart.async/_EventGenerator","name":"_EventGenerator"},"isFinal":true,"name":"_pending","isPrivate":true,"id":"_pending","line":"477","kind":"variable"},{"comment":"\nInitializes the stream to have only the events provided by a\n[_PendingEvents].\n\nA new [_PendingEvents] must be generated for each listen.\n","name":"_GeneratedStreamImpl","id":"_GeneratedStreamImpl1()","children":[{"initializedField":{"refId":"dart.async/_GeneratedStreamImpl/_pending","name":"_pending"},"ref":{"refId":"dart.async/_EventGenerator","name":"_EventGenerator"},"name":"_pending","isPrivate":true,"id":"_pending","kind":"param"}],"line":"484","kind":"constructor"},{"name":"T","id":"T","kind":"typeparam"}],"line":"476","kind":"class"},{"returnType":{"refId":"dart.async/_PendingEvents","name":"_PendingEvents"},"uri":"dart-sdk/lib/async/stream_impl.dart","name":"_EventGenerator","isPrivate":true,"id":"_EventGenerator","line":"473","kind":"typedef"},{"isAbstract":true,"superclass":{"refId":"dart.async/Stream","arguments":[{"refId":"dart.async/_StreamImpl/T","name":"T"}],"name":"Stream"},"uri":"dart-sdk/lib/async/stream_impl.dart","name":"_StreamImpl","isPrivate":true,"id":"_StreamImpl","children":[{"returnType":{"refId":"dart.async/StreamSubscription","arguments":[{"refId":"dart.async/_StreamImpl/T","name":"T"}],"name":"StreamSubscription"},"name":"listen","id":"listen4()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"onData","id":"onData","children":[{"returnType":{"refId":"void","name":"void"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.async/_StreamImpl/T","name":"T"},"uri":"dart-sdk/lib/async/stream_impl.dart","name":"data","id":"data","line":"444","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/Function","name":"Function"},"isOptional":true,"name":"onError","id":"onError","children":[{"returnType":{"refId":"void","name":"void"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"uri":"dart-sdk/lib/async/stream_impl.dart","name":"error","id":"error","line":"445","kind":"param"}],"line":"13","kind":"functiontype"}],"line":"445","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/Function","name":"Function"},"isOptional":true,"name":"onDone","id":"onDone","children":[{"returnType":{"refId":"void","name":"void"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","line":"13","kind":"functiontype"}],"line":"446","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"name":"cancelOnError","id":"cancelOnError","line":"447","kind":"param"}],"line":"444","kind":"method"},{"returnType":{"refId":"dart.async/_BufferingStreamSubscription","arguments":[{"refId":"dart.async/_StreamImpl/T","name":"T"}],"name":"_BufferingStreamSubscription"},"comment":"Create a subscription object. Called by [subcribe]. ","name":"_createSubscription","isPrivate":true,"id":"_createSubscription4()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"onData","id":"onData","children":[{"returnType":{"refId":"void","name":"void"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.async/_StreamImpl/T","name":"T"},"uri":"dart-sdk/lib/async/stream_impl.dart","name":"data","id":"data","line":"461","kind":"param"}],"line":"13","kind":"functiontype"}],"line":"461","kind":"param"},{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"onError","id":"onError","children":[{"returnType":{"refId":"void","name":"void"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"uri":"dart-sdk/lib/async/stream_impl.dart","name":"error","id":"error","line":"462","kind":"param"}],"line":"13","kind":"functiontype"}],"line":"462","kind":"param"},{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"onDone","id":"onDone","children":[{"returnType":{"refId":"void","name":"void"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","line":"13","kind":"functiontype"}],"line":"463","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"cancelOnError","id":"cancelOnError","line":"464","kind":"param"}],"line":"460","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"Hook called when the subscription has been created. ","name":"_onListen","isPrivate":true,"id":"_onListen1()","children":[{"ref":{"refId":"dart.async/StreamSubscription","name":"StreamSubscription"},"name":"subscription","id":"subscription","kind":"param"}],"line":"470","kind":"method"},{"name":"T","id":"T","kind":"typeparam"}],"line":"440","kind":"class"},{"interfaces":[{"refId":"dart.async/_EventDispatch","arguments":[{"refId":"dart.async/_BufferingStreamSubscription/T","name":"T"}],"name":"_EventDispatch"},{"refId":"dart.async/_EventSink","arguments":[{"refId":"dart.async/_BufferingStreamSubscription/T","name":"T"}],"name":"_EventSink"},{"refId":"dart.async/StreamSubscription","arguments":[{"refId":"dart.async/_BufferingStreamSubscription/T","name":"T"}],"name":"StreamSubscription"}],"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nDefault implementation of stream subscription of buffering events.\n\nThe only public methods are those of [StreamSubscription], so instances of\n[_BufferingStreamSubscription] can be returned directly as a\n[StreamSubscription] without exposing internal functionality.\n\nThe [StreamController] is a public facing version of [Stream] and this class,\nwith some methods made public.\n\nThe user interface of [_BufferingStreamSubscription] are the following\nmethods:\n* [_add]: Add a data event to the stream.\n* [_addError]: Add an error event to the stream.\n* [_close]: Request to close the stream.\n* [_onCancel]: Called when the subscription will provide no more events,\n    either due to being actively canceled, or after sending a done event.\n* [_onPause]: Called when the subscription wants the event source to pause.\n* [_onResume]: Called when allowing new events after a pause.\nThe user should not add new events when the subscription requests a paused,\nbut if it happens anyway, the subscription will enqueue the events just as\nwhen new events arrive while still firing an old event.\n","uri":"dart-sdk/lib/async/stream_impl.dart","name":"_BufferingStreamSubscription","isPrivate":true,"id":"_BufferingStreamSubscription","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the subscription's pending events object.\n\nThis can only be done once. The pending events object is used for the\nrest of the subscription's life cycle.\n","name":"_setPendingEvents","isPrivate":true,"id":"_setPendingEvents1()","children":[{"ref":{"refId":"dart.async/_PendingEvents","name":"_PendingEvents"},"name":"pendingEvents","id":"pendingEvents","kind":"param"}],"line":"126","kind":"method"},{"returnType":{"refId":"dart.async/_PendingEvents","name":"_PendingEvents"},"comment":"\nExtracts the pending events from a canceled stream.\n\nThis can only be done during the [_onCancel] method call. After that,\nany remaining pending events will be cleared.\n","name":"_extractPending","isPrivate":true,"id":"_extractPending0()","line":"142","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"onData","id":"onData1()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"handleData","id":"handleData","children":[{"returnType":{"refId":"void","name":"void"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.async/_BufferingStreamSubscription/T","name":"T"},"uri":"dart-sdk/lib/async/stream_impl.dart","name":"event","id":"event","line":"151","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"}],"line":"151","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"onError","id":"onError1()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"handleError","id":"handleError","children":[{"returnType":{"refId":"void","name":"void"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"uri":"dart-sdk/lib/async/stream_impl.dart","name":"error","id":"error","line":"156","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"}],"line":"156","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"onDone","id":"onDone1()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"handleDone","id":"handleDone","children":[{"returnType":{"refId":"void","name":"void"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","line":"13","kind":"functiontype"}],"kind":"param"}],"line":"161","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"pause","id":"pause1()","children":[{"ref":{"refId":"dart.async/Future","name":"Future"},"isOptional":true,"name":"resumeSignal","id":"resumeSignal","kind":"param"}],"line":"166","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"resume","id":"resume0()","line":"177","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"cancel","id":"cancel0()","line":"194","kind":"method"},{"returnType":{"refId":"dart.async/Future","name":"Future"},"name":"asFuture","id":"asFuture1()","children":[{"isOptional":true,"name":"futureValue","id":"futureValue","kind":"param"}],"line":"206","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_cancel","isPrivate":true,"id":"_cancel0()","line":"234","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nIncrement the pause count.\n\nAlso marks input as paused.\n","name":"_incrementPauseCount","isPrivate":true,"id":"_incrementPauseCount0()","line":"246","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nDecrements the pause count.\n\nDoes not automatically unpause the input (call [_onResume]) when\nthe pause count reaches zero. This is handled elsewhere, and only\nif there are no pending events buffered.\n","name":"_decrementPauseCount","isPrivate":true,"id":"_decrementPauseCount0()","line":"257","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_add","isPrivate":true,"id":"_add1()","children":[{"ref":{"refId":"dart.async/_BufferingStreamSubscription/T","name":"T"},"name":"data","id":"data","kind":"param"}],"line":"264","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_addError","isPrivate":true,"id":"_addError1()","children":[{"ref":{"refId":"dart.core/Object","name":"Object"},"name":"error","id":"error","kind":"param"}],"line":"274","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_close","isPrivate":true,"id":"_close0()","line":"283","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_onPause","isPrivate":true,"id":"_onPause0()","line":"297","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_onResume","isPrivate":true,"id":"_onResume0()","line":"301","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_onCancel","isPrivate":true,"id":"_onCancel0()","line":"305","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nAdd a pending event.\n\nIf the subscription is not paused, this also schedules a firing\nof pending events later (if necessary).\n","name":"_addPending","isPrivate":true,"id":"_addPending1()","children":[{"ref":{"refId":"dart.async/_DelayedEvent","name":"_DelayedEvent"},"name":"event","id":"event","kind":"param"}],"line":"317","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_sendData","isPrivate":true,"id":"_sendData1()","children":[{"ref":{"refId":"dart.async/_BufferingStreamSubscription/T","name":"T"},"name":"data","id":"data","kind":"param"}],"line":"331","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_sendError","isPrivate":true,"id":"_sendError1()","children":[{"name":"error","id":"error","kind":"param"}],"line":"346","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_sendDone","isPrivate":true,"id":"_sendDone0()","line":"364","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nCall a hook function.\n\nThe call is properly wrapped in code to avoid other callbacks\nduring the call, and it checks for state changes after the call\nthat should cause further callbacks.\n","name":"_guardCallback","isPrivate":true,"id":"_guardCallback1()","children":[{"name":"callback","id":"callback","kind":"param"}],"line":"385","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nCheck if the input needs to be informed of state changes.\n\nState changes are pausing, resuming and canceling.\n\nAfter canceling, no further callbacks will happen.\n\nThe cancel callback is called after a user cancel, or after\nthe final done event is sent.\n","name":"_checkState","isPrivate":true,"id":"_checkState1()","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"wasInputPaused","id":"wasInputPaused","kind":"param"}],"line":"404","kind":"method"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"_isInputPaused","isPrivate":true,"id":"_isInputPaused","line":"221","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"_isClosed","isPrivate":true,"id":"_isClosed","line":"222","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"_isCanceled","isPrivate":true,"id":"_isCanceled","line":"223","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"_inCallback","isPrivate":true,"id":"_inCallback","line":"224","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"_hasPending","isPrivate":true,"id":"_hasPending","line":"225","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"_isPaused","isPrivate":true,"id":"_isPaused","line":"226","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"_canFire","isPrivate":true,"id":"_canFire","line":"227","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"_mayResumeInput","isPrivate":true,"id":"_mayResumeInput","line":"228","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"_cancelOnError","isPrivate":true,"id":"_cancelOnError","line":"230","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"isPaused","id":"isPaused","line":"232","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"The `cancelOnError` flag from the `listen` call. ","name":"_STATE_CANCEL_ON_ERROR","isPrivate":true,"id":"_STATE_CANCEL_ON_ERROR","line":"68","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"\nWhether the \"done\" event has been received.\nNo further events are accepted after this.\n","name":"_STATE_CLOSED","isPrivate":true,"id":"_STATE_CLOSED","line":"73","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"\nSet if the input has been asked not to send events.\n\nThis is not the same as being paused, since the input will remain paused\nafter a call to [resume] if there are pending events.\n","name":"_STATE_INPUT_PAUSED","isPrivate":true,"id":"_STATE_INPUT_PAUSED","line":"80","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"\nWhether the subscription has been canceled.\n\nSet by calling [cancel], or by handling a \"done\" event, or an \"error\" event\nwhen `cancelOnError` is true.\n","name":"_STATE_CANCELED","isPrivate":true,"id":"_STATE_CANCELED","line":"87","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"_STATE_IN_CALLBACK","isPrivate":true,"id":"_STATE_IN_CALLBACK","line":"88","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"_STATE_HAS_PENDING","isPrivate":true,"id":"_STATE_HAS_PENDING","line":"89","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"_STATE_PAUSE_COUNT","isPrivate":true,"id":"_STATE_PAUSE_COUNT","line":"90","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"_STATE_PAUSE_COUNT_SHIFT","isPrivate":true,"id":"_STATE_PAUSE_COUNT_SHIFT","line":"91","kind":"variable"},{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"_onData","isPrivate":true,"id":"_onData","line":"96","kind":"variable"},{"ref":{"refId":"dart.async/_ErrorHandler","name":"_ErrorHandler"},"name":"_onError","isPrivate":true,"id":"_onError","line":"97","kind":"variable"},{"ref":{"refId":"dart.async/_DoneHandler","name":"_DoneHandler"},"name":"_onDone","isPrivate":true,"id":"_onDone","line":"98","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"Bit vector based on state-constants above. ","name":"_state","isPrivate":true,"id":"_state","line":"101","kind":"variable"},{"ref":{"refId":"dart.async/_PendingEvents","name":"_PendingEvents"},"comment":"\nQueue of pending events.\n\nIs created when necessary, or set in constructor for preconfigured events.\n","name":"_pending","isPrivate":true,"id":"_pending","line":"108","kind":"variable"},{"name":"_BufferingStreamSubscription","id":"_BufferingStreamSubscription4()","children":[{"initializedField":{"refId":"dart.async/_BufferingStreamSubscription/_onData","name":"_onData"},"ref":{"refId":"dart.core/Function","name":"Function"},"name":"_onData","isPrivate":true,"id":"_onData","kind":"param"},{"initializedField":{"refId":"dart.async/_BufferingStreamSubscription/_onError","name":"_onError"},"ref":{"refId":"dart.async/_ErrorHandler","name":"_ErrorHandler"},"name":"_onError","isPrivate":true,"id":"_onError","line":"111","kind":"param"},{"initializedField":{"refId":"dart.async/_BufferingStreamSubscription/_onDone","name":"_onDone"},"ref":{"refId":"dart.async/_DoneHandler","name":"_DoneHandler"},"name":"_onDone","isPrivate":true,"id":"_onDone","line":"112","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"cancelOnError","id":"cancelOnError","line":"113","kind":"param"}],"line":"110","kind":"constructor"},{"name":"T","id":"T","kind":"typeparam"}],"line":"64","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nAbstract and private interface for a place to send events.\n\nUsed by event buffering to finally dispatch the pending event, where\n[_EventSink] is where the event first enters the stream subscription,\nand may yet be buffered.\n","uri":"dart-sdk/lib/async/stream_impl.dart","name":"_EventDispatch","isPrivate":true,"id":"_EventDispatch","children":[{"returnType":{"refId":"void","name":"void"},"name":"_sendData","isPrivate":true,"id":"_sendData1()","children":[{"ref":{"refId":"dart.async/_EventDispatch/T","name":"T"},"name":"data","id":"data","kind":"param"}],"line":"36","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_sendError","isPrivate":true,"id":"_sendError1()","children":[{"ref":{"refId":"dart.core/Object","name":"Object"},"name":"error","id":"error","kind":"param"}],"line":"37","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_sendDone","isPrivate":true,"id":"_sendDone0()","line":"38","kind":"method"},{"name":"T","id":"T","kind":"typeparam"}],"line":"35","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"Abstract and private interface for a place to put events. ","uri":"dart-sdk/lib/async/stream_impl.dart","name":"_EventSink","isPrivate":true,"id":"_EventSink","children":[{"returnType":{"refId":"void","name":"void"},"name":"_add","isPrivate":true,"id":"_add1()","children":[{"ref":{"refId":"dart.async/_EventSink/T","name":"T"},"name":"data","id":"data","kind":"param"}],"line":"23","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_addError","isPrivate":true,"id":"_addError1()","children":[{"ref":{"refId":"dart.core/Object","name":"Object"},"name":"error","id":"error","kind":"param"}],"line":"24","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_close","isPrivate":true,"id":"_close0()","line":"25","kind":"method"},{"name":"T","id":"T","kind":"typeparam"}],"line":"22","kind":"class"},{"interfaces":[{"refId":"dart.async/_EventDispatch","arguments":[{"refId":"dart.async/_AsBroadcastStreamController/T","name":"T"}],"name":"_EventDispatch"}],"superclass":{"refId":"dart.async/_SyncBroadcastStreamController","arguments":[{"refId":"dart.async/_AsBroadcastStreamController/T","name":"T"}],"name":"_SyncBroadcastStreamController"},"comment":"\nStream controller that is used by [Stream.asBroadcastStream].\n\nThis stream controller allows incoming events while it is firing\nother events. This is handled by delaying the events until the\ncurrent event is done firing, and then fire the pending events.\n\nThis class extends [_SyncBroadcastStreamController]. Events of\nan \"asBroadcastStream\" stream are always initiated by events\non another stream, and it is fine to forward them synchronously.\n","uri":"dart-sdk/lib/async/stream_controller.dart","name":"_AsBroadcastStreamController","isPrivate":true,"id":"_AsBroadcastStreamController","children":[{"returnType":{"refId":"void","name":"void"},"name":"_addPendingEvent","isPrivate":true,"id":"_addPendingEvent1()","children":[{"ref":{"refId":"dart.async/_DelayedEvent","name":"_DelayedEvent"},"name":"event","id":"event","kind":"param"}],"line":"728","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"add","id":"add1()","children":[{"ref":{"refId":"dart.async/_AsBroadcastStreamController/T","name":"T"},"name":"data","id":"data","kind":"param"}],"line":"735","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"addError","id":"addError2()","children":[{"ref":{"refId":"dart.core/Object","name":"Object"},"name":"error","id":"error","kind":"param"},{"ref":{"refId":"dart.core/StackTrace","name":"StackTrace"},"isOptional":true,"name":"stackTrace","id":"stackTrace","kind":"param"}],"line":"746","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"close","id":"close0()","line":"757","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_callOnCancel","isPrivate":true,"id":"_callOnCancel0()","line":"767","kind":"method"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"_hasPending","isPrivate":true,"id":"_hasPending","line":"726","kind":"property"},{"ref":{"refId":"dart.async/_StreamImplEvents","name":"_StreamImplEvents"},"name":"_pending","isPrivate":true,"id":"_pending","line":"721","kind":"variable"},{"name":"_AsBroadcastStreamController","id":"_AsBroadcastStreamController2()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"onListen","id":"onListen","children":[{"returnType":{"refId":"void","name":"void"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","line":"13","kind":"functiontype"}],"kind":"param"},{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"onCancel","id":"onCancel","children":[{"returnType":{"refId":"void","name":"void"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","line":"13","kind":"functiontype"}],"kind":"param"}],"line":"723","kind":"constructor"},{"name":"T","id":"T","kind":"typeparam"}],"line":"718","kind":"class"},{"superclass":{"refId":"dart.async/_BroadcastStreamController","arguments":[{"refId":"dart.async/_AsyncBroadcastStreamController/T","name":"T"}],"name":"_BroadcastStreamController"},"uri":"dart-sdk/lib/async/stream_controller.dart","name":"_AsyncBroadcastStreamController","isPrivate":true,"id":"_AsyncBroadcastStreamController","children":[{"returnType":{"refId":"void","name":"void"},"name":"_sendData","isPrivate":true,"id":"_sendData1()","children":[{"ref":{"refId":"dart.async/_AsyncBroadcastStreamController/T","name":"T"},"name":"data","id":"data","kind":"param"}],"line":"679","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_sendError","isPrivate":true,"id":"_sendError1()","children":[{"ref":{"refId":"dart.core/Object","name":"Object"},"name":"error","id":"error","kind":"param"}],"line":"688","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_sendDone","isPrivate":true,"id":"_sendDone0()","line":"697","kind":"method"},{"name":"_AsyncBroadcastStreamController","id":"_AsyncBroadcastStreamController2()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"onListen","id":"onListen","children":[{"returnType":{"refId":"void","name":"void"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","line":"13","kind":"functiontype"}],"kind":"param"},{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"onCancel","id":"onCancel","children":[{"returnType":{"refId":"void","name":"void"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","line":"13","kind":"functiontype"}],"kind":"param"}],"line":"674","kind":"constructor"},{"name":"T","id":"T","kind":"typeparam"}],"line":"673","kind":"class"},{"superclass":{"refId":"dart.async/_BroadcastStreamController","arguments":[{"refId":"dart.async/_SyncBroadcastStreamController/T","name":"T"}],"name":"_BroadcastStreamController"},"uri":"dart-sdk/lib/async/stream_controller.dart","name":"_SyncBroadcastStreamController","isPrivate":true,"id":"_SyncBroadcastStreamController","children":[{"returnType":{"refId":"void","name":"void"},"name":"_sendData","isPrivate":true,"id":"_sendData1()","children":[{"ref":{"refId":"dart.async/_SyncBroadcastStreamController/T","name":"T"},"name":"data","id":"data","kind":"param"}],"line":"649","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_sendError","isPrivate":true,"id":"_sendError1()","children":[{"ref":{"refId":"dart.core/Object","name":"Object"},"name":"error","id":"error","kind":"param"}],"line":"656","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_sendDone","isPrivate":true,"id":"_sendDone0()","line":"663","kind":"method"},{"name":"_SyncBroadcastStreamController","id":"_SyncBroadcastStreamController2()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"onListen","id":"onListen","children":[{"returnType":{"refId":"void","name":"void"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","line":"13","kind":"functiontype"}],"kind":"param"},{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"onCancel","id":"onCancel","children":[{"returnType":{"refId":"void","name":"void"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","line":"13","kind":"functiontype"}],"kind":"param"}],"line":"644","kind":"constructor"},{"name":"T","id":"T","kind":"typeparam"}],"line":"643","kind":"class"},{"isAbstract":true,"interfaces":[{"refId":"dart.async/_EventDispatch","arguments":[{"refId":"dart.async/_BroadcastStreamController/T","name":"T"}],"name":"_EventDispatch"},{"refId":"dart.async/_BroadcastSubscriptionLink","name":"_BroadcastSubscriptionLink"},{"refId":"dart.async/_StreamControllerLifecycle","arguments":[{"refId":"dart.async/_BroadcastStreamController/T","name":"T"}],"name":"_StreamControllerLifecycle"},{"refId":"dart.async/StreamController","arguments":[{"refId":"dart.async/_BroadcastStreamController/T","name":"T"}],"name":"StreamController"}],"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"dart-sdk/lib/async/stream_controller.dart","name":"_BroadcastStreamController","isPrivate":true,"id":"_BroadcastStreamController","children":[{"returnType":{"refId":"void","name":"void"},"comment":"Adds subscription to linked list of active listeners. ","name":"_addListener","isPrivate":true,"id":"_addListener1()","children":[{"ref":{"refId":"dart.async/_BroadcastSubscription","arguments":[{"refId":"dart.async/_BroadcastStreamController/T","name":"T"}],"name":"_BroadcastSubscription"},"name":"subscription","id":"subscription","kind":"param"}],"line":"530","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_removeListener","isPrivate":true,"id":"_removeListener1()","children":[{"ref":{"refId":"dart.async/_BroadcastSubscription","arguments":[{"refId":"dart.async/_BroadcastStreamController/T","name":"T"}],"name":"_BroadcastSubscription"},"name":"subscription","id":"subscription","kind":"param"}],"line":"539","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_recordListen","isPrivate":true,"id":"_recordListen1()","children":[{"ref":{"refId":"dart.async/_BroadcastSubscription","arguments":[{"refId":"dart.async/_BroadcastStreamController/T","name":"T"}],"name":"_BroadcastSubscription"},"name":"subscription","id":"subscription","kind":"param"}],"line":"549","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_recordCancel","isPrivate":true,"id":"_recordCancel1()","children":[{"ref":{"refId":"dart.async/_BroadcastSubscription","arguments":[{"refId":"dart.async/_BroadcastStreamController/T","name":"T"}],"name":"_BroadcastSubscription"},"name":"subscription","id":"subscription","kind":"param"}],"line":"557","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_recordPause","isPrivate":true,"id":"_recordPause1()","children":[{"ref":{"refId":"dart.async/StreamSubscription","arguments":[{"refId":"dart.async/_BroadcastStreamController/T","name":"T"}],"name":"StreamSubscription"},"name":"subscription","id":"subscription","kind":"param"}],"line":"570","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_recordResume","isPrivate":true,"id":"_recordResume1()","children":[{"ref":{"refId":"dart.async/StreamSubscription","arguments":[{"refId":"dart.async/_BroadcastStreamController/T","name":"T"}],"name":"StreamSubscription"},"name":"subscription","id":"subscription","kind":"param"}],"line":"571","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"add","id":"add1()","children":[{"ref":{"refId":"dart.async/_BroadcastStreamController/T","name":"T"},"name":"data","id":"data","kind":"param"}],"line":"575","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"addError","id":"addError2()","children":[{"ref":{"refId":"dart.core/Object","name":"Object"},"name":"error","id":"error","kind":"param"},{"ref":{"refId":"dart.core/Object","name":"Object"},"isOptional":true,"name":"stackTrace","id":"stackTrace","kind":"param"}],"line":"582","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"close","id":"close0()","line":"590","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_forEachListener","isPrivate":true,"id":"_forEachListener1()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"action","id":"action","children":[{"returnType":{"refId":"void","name":"void"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.async/_BufferingStreamSubscription","arguments":[{"refId":"dart.async/_BroadcastStreamController/T","name":"T"}],"name":"_BufferingStreamSubscription"},"uri":"dart-sdk/lib/async/stream_controller.dart","name":"subscription","id":"subscription","line":"599","kind":"param"}],"line":"13","kind":"functiontype"}],"line":"599","kind":"param"}],"line":"598","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_callOnCancel","isPrivate":true,"id":"_callOnCancel0()","line":"638","kind":"method"},{"ref":{"refId":"dart.async/Stream","arguments":[{"refId":"dart.async/_BroadcastStreamController/T","name":"T"}],"name":"Stream"},"name":"stream","id":"stream","line":"505","kind":"property"},{"ref":{"refId":"dart.async/EventSink","arguments":[{"refId":"dart.async/_BroadcastStreamController/T","name":"T"}],"name":"EventSink"},"name":"sink","id":"sink","line":"507","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"isClosed","id":"isClosed","line":"509","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"comment":"\nA broadcast controller is never paused.\n\nEach receiving stream may be paused individually, and they handle their\nown buffering.\n","name":"isPaused","id":"isPaused","line":"517","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"comment":"Whether there are currently a subscriber on the [Stream]. ","name":"hasListener","id":"hasListener","line":"520","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"comment":"Whether an event is being fired (sent to some, but not all, listeners). ","name":"_isFiring","isPrivate":true,"id":"_isFiring","line":"523","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"_isEmpty","isPrivate":true,"id":"_isEmpty","line":"527","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"_STATE_INITIAL","isPrivate":true,"id":"_STATE_INITIAL","line":"483","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"_STATE_EVENT_ID","isPrivate":true,"id":"_STATE_EVENT_ID","line":"484","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"_STATE_FIRING","isPrivate":true,"id":"_STATE_FIRING","line":"485","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"_STATE_CLOSED","isPrivate":true,"id":"_STATE_CLOSED","line":"486","kind":"variable"},{"ref":{"refId":"dart.async/_NotificationHandler","name":"_NotificationHandler"},"isFinal":true,"name":"_onListen","isPrivate":true,"id":"_onListen","line":"488","kind":"variable"},{"ref":{"refId":"dart.async/_NotificationHandler","name":"_NotificationHandler"},"isFinal":true,"name":"_onCancel","isPrivate":true,"id":"_onCancel","line":"489","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"_state","isPrivate":true,"id":"_state","line":"492","kind":"variable"},{"ref":{"refId":"dart.async/_BroadcastSubscriptionLink","name":"_BroadcastSubscriptionLink"},"name":"_next","isPrivate":true,"id":"_next","line":"495","kind":"variable"},{"ref":{"refId":"dart.async/_BroadcastSubscriptionLink","name":"_BroadcastSubscriptionLink"},"name":"_previous","isPrivate":true,"id":"_previous","line":"496","kind":"variable"},{"name":"_BroadcastStreamController","id":"_BroadcastStreamController2()","children":[{"initializedField":{"refId":"dart.async/_BroadcastStreamController/_onListen","name":"_onListen"},"ref":{"refId":"dart.async/_NotificationHandler","name":"_NotificationHandler"},"name":"_onListen","isPrivate":true,"id":"_onListen","kind":"param"},{"initializedField":{"refId":"dart.async/_BroadcastStreamController/_onCancel","name":"_onCancel"},"ref":{"refId":"dart.async/_NotificationHandler","name":"_NotificationHandler"},"name":"_onCancel","isPrivate":true,"id":"_onCancel","kind":"param"}],"line":"498","kind":"constructor"},{"name":"T","id":"T","kind":"typeparam"}],"line":"478","kind":"class"},{"interfaces":[{"refId":"dart.async/_BroadcastSubscriptionLink","name":"_BroadcastSubscriptionLink"}],"superclass":{"refId":"dart.async/_ControllerSubscription","arguments":[{"refId":"dart.async/_BroadcastSubscription/T","name":"T"}],"name":"_ControllerSubscription"},"uri":"dart-sdk/lib/async/stream_controller.dart","name":"_BroadcastSubscription","isPrivate":true,"id":"_BroadcastSubscription","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"name":"_expectsEvent","isPrivate":true,"id":"_expectsEvent1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"eventId","id":"eventId","kind":"param"}],"line":"458","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_toggleEventId","isPrivate":true,"id":"_toggleEventId0()","line":"462","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"name":"_setRemoveAfterFiring","isPrivate":true,"id":"_setRemoveAfterFiring0()","line":"468","kind":"method"},{"ref":{"refId":"dart.async/_BroadcastStreamController","name":"_BroadcastStreamController"},"name":"_controller","isPrivate":true,"id":"_controller","line":"456","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"_isFiring","isPrivate":true,"id":"_isFiring","line":"466","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"_removeAfterFiring","isPrivate":true,"id":"_removeAfterFiring","line":"473","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"_STATE_EVENT_ID","isPrivate":true,"id":"_STATE_EVENT_ID","line":"439","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"_STATE_FIRING","isPrivate":true,"id":"_STATE_FIRING","line":"440","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"_STATE_REMOVE_AFTER_FIRING","isPrivate":true,"id":"_STATE_REMOVE_AFTER_FIRING","line":"441","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"_eventState","isPrivate":true,"id":"_eventState","line":"442","kind":"variable"},{"ref":{"refId":"dart.async/_BroadcastSubscriptionLink","name":"_BroadcastSubscriptionLink"},"name":"_next","isPrivate":true,"id":"_next","line":"444","kind":"variable"},{"ref":{"refId":"dart.async/_BroadcastSubscriptionLink","name":"_BroadcastSubscriptionLink"},"name":"_previous","isPrivate":true,"id":"_previous","line":"445","kind":"variable"},{"name":"_BroadcastSubscription","id":"_BroadcastSubscription5()","children":[{"ref":{"refId":"dart.async/_StreamControllerLifecycle","name":"_StreamControllerLifecycle"},"name":"controller","id":"controller","kind":"param"},{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"onData","id":"onData","children":[{"returnType":{"refId":"void","name":"void"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.async/_BroadcastSubscription/T","name":"T"},"uri":"dart-sdk/lib/async/stream_controller.dart","name":"data","id":"data","line":"448","kind":"param"}],"line":"13","kind":"functiontype"}],"line":"448","kind":"param"},{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"onError","id":"onError","children":[{"returnType":{"refId":"void","name":"void"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.core/Object","name":"Object"},"uri":"dart-sdk/lib/async/stream_controller.dart","name":"error","id":"error","line":"449","kind":"param"}],"line":"13","kind":"functiontype"}],"line":"449","kind":"param"},{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"onDone","id":"onDone","children":[{"returnType":{"refId":"void","name":"void"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","line":"13","kind":"functiontype"}],"line":"450","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"cancelOnError","id":"cancelOnError","line":"451","kind":"param"}],"line":"447","kind":"constructor"},{"name":"T","id":"T","kind":"typeparam"}],"line":"437","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"dart-sdk/lib/async/stream_controller.dart","name":"_BroadcastSubscriptionLink","isPrivate":true,"id":"_BroadcastSubscriptionLink","children":[{"ref":{"refId":"dart.async/_BroadcastSubscriptionLink","name":"_BroadcastSubscriptionLink"},"name":"_next","isPrivate":true,"id":"_next","line":"433","kind":"variable"},{"ref":{"refId":"dart.async/_BroadcastSubscriptionLink","name":"_BroadcastSubscriptionLink"},"name":"_previous","isPrivate":true,"id":"_previous","line":"434","kind":"variable"}],"line":"432","kind":"class"},{"superclass":{"refId":"dart.async/_StreamImpl","arguments":[{"refId":"dart.async/_BroadcastStream/T","name":"T"}],"name":"_StreamImpl"},"uri":"dart-sdk/lib/async/stream_controller.dart","name":"_BroadcastStream","isPrivate":true,"id":"_BroadcastStream","children":[{"returnType":{"refId":"dart.async/StreamSubscription","arguments":[{"refId":"dart.async/_BroadcastStream/T","name":"T"}],"name":"StreamSubscription"},"name":"_createSubscription","isPrivate":true,"id":"_createSubscription4()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"onData","id":"onData","children":[{"returnType":{"refId":"void","name":"void"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.async/_BroadcastStream/T","name":"T"},"uri":"dart-sdk/lib/async/stream_controller.dart","name":"data","id":"data","line":"419","kind":"param"}],"line":"13","kind":"functiontype"}],"line":"419","kind":"param"},{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"onError","id":"onError","children":[{"returnType":{"refId":"void","name":"void"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.core/Object","name":"Object"},"uri":"dart-sdk/lib/async/stream_controller.dart","name":"error","id":"error","line":"420","kind":"param"}],"line":"13","kind":"functiontype"}],"line":"420","kind":"param"},{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"onDone","id":"onDone","children":[{"returnType":{"refId":"void","name":"void"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","line":"13","kind":"functiontype"}],"line":"421","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"cancelOnError","id":"cancelOnError","line":"422","kind":"param"}],"line":"418","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_onListen","isPrivate":true,"id":"_onListen1()","children":[{"ref":{"refId":"dart.async/_BufferingStreamSubscription","name":"_BufferingStreamSubscription"},"name":"subscription","id":"subscription","kind":"param"}],"line":"427","kind":"method"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"isBroadcast","id":"isBroadcast","line":"416","kind":"property"},{"ref":{"refId":"dart.async/_BroadcastStreamController","name":"_BroadcastStreamController"},"name":"_controller","isPrivate":true,"id":"_controller","line":"412","kind":"variable"},{"name":"_BroadcastStream","id":"_BroadcastStream1()","children":[{"initializedField":{"refId":"dart.async/_BroadcastStream/_controller","name":"_controller"},"ref":{"refId":"dart.async/_BroadcastStreamController","name":"_BroadcastStreamController"},"name":"_controller","isPrivate":true,"id":"_controller","kind":"param"}],"line":"414","kind":"constructor"},{"name":"T","id":"T","kind":"typeparam"}],"line":"411","kind":"class"},{"superclass":{"refId":"dart.async/_BufferingStreamSubscription","arguments":[{"refId":"dart.async/_ControllerSubscription/T","name":"T"}],"name":"_BufferingStreamSubscription"},"uri":"dart-sdk/lib/async/stream_controller.dart","name":"_ControllerSubscription","isPrivate":true,"id":"_ControllerSubscription","children":[{"returnType":{"refId":"void","name":"void"},"name":"_onCancel","isPrivate":true,"id":"_onCancel0()","line":"398","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_onPause","isPrivate":true,"id":"_onPause0()","line":"402","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_onResume","isPrivate":true,"id":"_onResume0()","line":"406","kind":"method"},{"ref":{"refId":"dart.async/_StreamControllerLifecycle","arguments":[{"refId":"dart.async/_ControllerSubscription/T","name":"T"}],"name":"_StreamControllerLifecycle"},"isFinal":true,"name":"_controller","isPrivate":true,"id":"_controller","line":"389","kind":"variable"},{"name":"_ControllerSubscription","id":"_ControllerSubscription5()","children":[{"initializedField":{"refId":"dart.async/_ControllerSubscription/_controller","name":"_controller"},"ref":{"refId":"dart.async/_StreamControllerLifecycle","arguments":[{"refId":"dart.async/_ControllerSubscription/T","name":"T"}],"name":"_StreamControllerLifecycle"},"name":"_controller","isPrivate":true,"id":"_controller","kind":"param"},{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"onData","id":"onData","children":[{"returnType":{"refId":"void","name":"void"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.async/_ControllerSubscription/T","name":"T"},"uri":"dart-sdk/lib/async/stream_controller.dart","name":"data","id":"data","line":"392","kind":"param"}],"line":"13","kind":"functiontype"}],"line":"392","kind":"param"},{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"onError","id":"onError","children":[{"returnType":{"refId":"void","name":"void"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.core/Object","name":"Object"},"uri":"dart-sdk/lib/async/stream_controller.dart","name":"error","id":"error","line":"393","kind":"param"}],"line":"13","kind":"functiontype"}],"line":"393","kind":"param"},{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"onDone","id":"onDone","children":[{"returnType":{"refId":"void","name":"void"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","line":"13","kind":"functiontype"}],"line":"394","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"cancelOnError","id":"cancelOnError","line":"395","kind":"param"}],"line":"391","kind":"constructor"},{"name":"T","id":"T","kind":"typeparam"}],"line":"388","kind":"class"},{"superclass":{"refId":"dart.async/_StreamImpl","arguments":[{"refId":"dart.async/_ControllerStream/T","name":"T"}],"name":"_StreamImpl"},"uri":"dart-sdk/lib/async/stream_controller.dart","name":"_ControllerStream","isPrivate":true,"id":"_ControllerStream","children":[{"returnType":{"refId":"dart.async/StreamSubscription","arguments":[{"refId":"dart.async/_ControllerStream/T","name":"T"}],"name":"StreamSubscription"},"name":"_createSubscription","isPrivate":true,"id":"_createSubscription4()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"onData","id":"onData","children":[{"returnType":{"refId":"void","name":"void"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.async/_ControllerStream/T","name":"T"},"uri":"dart-sdk/lib/async/stream_controller.dart","name":"data","id":"data","line":"371","kind":"param"}],"line":"13","kind":"functiontype"}],"line":"371","kind":"param"},{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"onError","id":"onError","children":[{"returnType":{"refId":"void","name":"void"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.core/Object","name":"Object"},"uri":"dart-sdk/lib/async/stream_controller.dart","name":"error","id":"error","line":"372","kind":"param"}],"line":"13","kind":"functiontype"}],"line":"372","kind":"param"},{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"onDone","id":"onDone","children":[{"returnType":{"refId":"void","name":"void"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","line":"13","kind":"functiontype"}],"line":"373","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"cancelOnError","id":"cancelOnError","line":"374","kind":"param"}],"line":"370","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_onListen","isPrivate":true,"id":"_onListen1()","children":[{"ref":{"refId":"dart.async/_BufferingStreamSubscription","name":"_BufferingStreamSubscription"},"name":"subscription","id":"subscription","kind":"param"}],"line":"383","kind":"method"},{"ref":{"refId":"dart.async/_StreamControllerLifecycle","arguments":[{"refId":"dart.async/_ControllerStream/T","name":"T"}],"name":"_StreamControllerLifecycle"},"name":"_controller","isPrivate":true,"id":"_controller","line":"365","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"_hasListener","isPrivate":true,"id":"_hasListener","line":"366","kind":"variable"},{"name":"_ControllerStream","id":"_ControllerStream1()","children":[{"initializedField":{"refId":"dart.async/_ControllerStream/_controller","name":"_controller"},"ref":{"refId":"dart.async/_StreamControllerLifecycle","arguments":[{"refId":"dart.async/_ControllerStream/T","name":"T"}],"name":"_StreamControllerLifecycle"},"name":"_controller","isPrivate":true,"id":"_controller","kind":"param"}],"line":"368","kind":"constructor"},{"name":"T","id":"T","kind":"typeparam"}],"line":"364","kind":"class"},{"returnType":{"refId":"void","name":"void"},"uri":"dart-sdk/lib/async/stream_controller.dart","name":"_NotificationHandler","isPrivate":true,"id":"_NotificationHandler","line":"353","kind":"typedef"},{"superclass":{"refId":"dart.async/_StreamController","arguments":[{"refId":"dart.async/_AsyncStreamController/T","name":"T"}],"name":"_StreamController"},"uri":"dart-sdk/lib/async/stream_controller.dart","name":"_AsyncStreamController","isPrivate":true,"id":"_AsyncStreamController","children":[{"returnType":{"refId":"void","name":"void"},"name":"_sendData","isPrivate":true,"id":"_sendData1()","children":[{"ref":{"refId":"dart.async/_AsyncStreamController/T","name":"T"},"name":"data","id":"data","kind":"param"}],"line":"340","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_sendError","isPrivate":true,"id":"_sendError1()","children":[{"ref":{"refId":"dart.core/Object","name":"Object"},"name":"error","id":"error","kind":"param"}],"line":"344","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_sendDone","isPrivate":true,"id":"_sendDone0()","line":"348","kind":"method"},{"name":"_AsyncStreamController","id":"_AsyncStreamController4()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"onListen","id":"onListen","children":[{"returnType":{"refId":"void","name":"void"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","line":"13","kind":"functiontype"}],"kind":"param"},{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"onPause","id":"onPause","children":[{"returnType":{"refId":"void","name":"void"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","line":"13","kind":"functiontype"}],"line":"335","kind":"param"},{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"onResume","id":"onResume","children":[{"returnType":{"refId":"void","name":"void"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","line":"13","kind":"functiontype"}],"line":"336","kind":"param"},{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"onCancel","id":"onCancel","children":[{"returnType":{"refId":"void","name":"void"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","line":"13","kind":"functiontype"}],"line":"337","kind":"param"}],"line":"334","kind":"constructor"},{"name":"T","id":"T","kind":"typeparam"}],"line":"333","kind":"class"},{"superclass":{"refId":"dart.async/_StreamController","arguments":[{"refId":"dart.async/_SyncStreamController/T","name":"T"}],"name":"_StreamController"},"uri":"dart-sdk/lib/async/stream_controller.dart","name":"_SyncStreamController","isPrivate":true,"id":"_SyncStreamController","children":[{"returnType":{"refId":"void","name":"void"},"name":"_sendData","isPrivate":true,"id":"_sendData1()","children":[{"ref":{"refId":"dart.async/_SyncStreamController/T","name":"T"},"name":"data","id":"data","kind":"param"}],"line":"320","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_sendError","isPrivate":true,"id":"_sendError1()","children":[{"ref":{"refId":"dart.core/Object","name":"Object"},"name":"error","id":"error","kind":"param"}],"line":"324","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_sendDone","isPrivate":true,"id":"_sendDone0()","line":"328","kind":"method"},{"name":"_SyncStreamController","id":"_SyncStreamController4()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"onListen","id":"onListen","children":[{"returnType":{"refId":"void","name":"void"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","line":"13","kind":"functiontype"}],"kind":"param"},{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"onPause","id":"onPause","children":[{"returnType":{"refId":"void","name":"void"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","line":"13","kind":"functiontype"}],"line":"315","kind":"param"},{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"onResume","id":"onResume","children":[{"returnType":{"refId":"void","name":"void"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","line":"13","kind":"functiontype"}],"line":"316","kind":"param"},{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"onCancel","id":"onCancel","children":[{"returnType":{"refId":"void","name":"void"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","line":"13","kind":"functiontype"}],"line":"317","kind":"param"}],"line":"314","kind":"constructor"},{"name":"T","id":"T","kind":"typeparam"}],"line":"313","kind":"class"},{"isAbstract":true,"interfaces":[{"refId":"dart.async/_EventDispatch","arguments":[{"refId":"dart.async/_StreamController/T","name":"T"}],"name":"_EventDispatch"},{"refId":"dart.async/_StreamControllerLifecycle","arguments":[{"refId":"dart.async/_StreamController/T","name":"T"}],"name":"_StreamControllerLifecycle"},{"refId":"dart.async/StreamController","arguments":[{"refId":"dart.async/_StreamController/T","name":"T"}],"name":"StreamController"}],"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nDefault implementation of [StreamController].\n\nControls a stream that only supports a single controller.\n","uri":"dart-sdk/lib/async/stream_controller.dart","name":"_StreamController","isPrivate":true,"id":"_StreamController","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nSend or queue a data event.\n","name":"add","id":"add1()","children":[{"ref":{"refId":"dart.async/_StreamController/T","name":"T"},"name":"value","id":"value","kind":"param"}],"line":"229","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSend or enqueue an error event.\n","name":"addError","id":"addError2()","children":[{"ref":{"refId":"dart.core/Object","name":"Object"},"name":"error","id":"error","kind":"param"},{"ref":{"refId":"dart.core/Object","name":"Object"},"isOptional":true,"name":"stackTrace","id":"stackTrace","kind":"param"}],"line":"241","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nCloses this controller.\n\nAfter closing, no further events may be added using [add] or [addError].\n\nYou are allowed to close the controller more than once, but only the first\ncall has any effect.\n\nThe first time a controller is closed, a \"done\" event is sent to its\nstream.\n","name":"close","id":"close0()","line":"266","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_addPendingEvent","isPrivate":true,"id":"_addPendingEvent1()","children":[{"ref":{"refId":"dart.async/_DelayedEvent","name":"_DelayedEvent"},"name":"event","id":"event","kind":"param"}],"line":"278","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_recordListen","isPrivate":true,"id":"_recordListen1()","children":[{"ref":{"refId":"dart.async/_BufferingStreamSubscription","arguments":[{"refId":"dart.async/_StreamController/T","name":"T"}],"name":"_BufferingStreamSubscription"},"name":"subscription","id":"subscription","kind":"param"}],"line":"287","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_recordCancel","isPrivate":true,"id":"_recordCancel1()","children":[{"ref":{"refId":"dart.async/StreamSubscription","arguments":[{"refId":"dart.async/_StreamController/T","name":"T"}],"name":"StreamSubscription"},"name":"subscription","id":"subscription","kind":"param"}],"line":"297","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_recordPause","isPrivate":true,"id":"_recordPause1()","children":[{"ref":{"refId":"dart.async/StreamSubscription","arguments":[{"refId":"dart.async/_StreamController/T","name":"T"}],"name":"StreamSubscription"},"name":"subscription","id":"subscription","kind":"param"}],"line":"304","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_recordResume","isPrivate":true,"id":"_recordResume1()","children":[{"ref":{"refId":"dart.async/StreamSubscription","arguments":[{"refId":"dart.async/_StreamController/T","name":"T"}],"name":"StreamSubscription"},"name":"subscription","id":"subscription","kind":"param"}],"line":"308","kind":"method"},{"ref":{"refId":"dart.async/Stream","arguments":[{"refId":"dart.async/_StreamController/T","name":"T"}],"name":"Stream"},"name":"stream","id":"stream","line":"205","kind":"property"},{"ref":{"refId":"dart.async/EventSink","arguments":[{"refId":"dart.async/_StreamController/T","name":"T"}],"name":"EventSink"},"comment":"\nReturns a view of this object that only exposes the [EventSink] interface.\n","name":"sink","id":"sink","line":"210","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"comment":"\nWhether a listener has existed and been cancelled.\n\nAfter this, adding more events will be ignored.\n","name":"_isCancelled","isPrivate":true,"id":"_isCancelled","line":"217","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"isClosed","id":"isClosed","line":"219","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"isPaused","id":"isPaused","line":"221","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"hasListener","id":"hasListener","line":"224","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"_STATE_OPEN","isPrivate":true,"id":"_STATE_OPEN","line":"179","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"_STATE_CANCELLED","isPrivate":true,"id":"_STATE_CANCELLED","line":"180","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"_STATE_CLOSED","isPrivate":true,"id":"_STATE_CLOSED","line":"181","kind":"variable"},{"ref":{"refId":"dart.async/_NotificationHandler","name":"_NotificationHandler"},"isFinal":true,"name":"_onListen","isPrivate":true,"id":"_onListen","line":"183","kind":"variable"},{"ref":{"refId":"dart.async/_NotificationHandler","name":"_NotificationHandler"},"isFinal":true,"name":"_onPause","isPrivate":true,"id":"_onPause","line":"184","kind":"variable"},{"ref":{"refId":"dart.async/_NotificationHandler","name":"_NotificationHandler"},"isFinal":true,"name":"_onResume","isPrivate":true,"id":"_onResume","line":"185","kind":"variable"},{"ref":{"refId":"dart.async/_NotificationHandler","name":"_NotificationHandler"},"isFinal":true,"name":"_onCancel","isPrivate":true,"id":"_onCancel","line":"186","kind":"variable"},{"ref":{"refId":"dart.async/_StreamImpl","arguments":[{"refId":"dart.async/_StreamController/T","name":"T"}],"name":"_StreamImpl"},"name":"_stream","isPrivate":true,"id":"_stream","line":"187","kind":"variable"},{"ref":{"refId":"dart.async/_ControllerSubscription","arguments":[{"refId":"dart.async/_StreamController/T","name":"T"}],"name":"_ControllerSubscription"},"name":"_subscription","isPrivate":true,"id":"_subscription","line":"190","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"_state","isPrivate":true,"id":"_state","line":"193","kind":"variable"},{"ref":{"refId":"dart.async/_PendingEvents","name":"_PendingEvents"},"name":"_pendingEvents","isPrivate":true,"id":"_pendingEvents","line":"196","kind":"variable"},{"name":"_StreamController","id":"_StreamController4()","children":[{"initializedField":{"refId":"dart.async/_StreamController/_onListen","name":"_onListen"},"ref":{"refId":"dart.async/_NotificationHandler","name":"_NotificationHandler"},"name":"_onListen","isPrivate":true,"id":"_onListen","kind":"param"},{"initializedField":{"refId":"dart.async/_StreamController/_onPause","name":"_onPause"},"ref":{"refId":"dart.async/_NotificationHandler","name":"_NotificationHandler"},"name":"_onPause","isPrivate":true,"id":"_onPause","line":"199","kind":"param"},{"initializedField":{"refId":"dart.async/_StreamController/_onResume","name":"_onResume"},"ref":{"refId":"dart.async/_NotificationHandler","name":"_NotificationHandler"},"name":"_onResume","isPrivate":true,"id":"_onResume","line":"200","kind":"param"},{"initializedField":{"refId":"dart.async/_StreamController/_onCancel","name":"_onCancel"},"ref":{"refId":"dart.async/_NotificationHandler","name":"_NotificationHandler"},"name":"_onCancel","isPrivate":true,"id":"_onCancel","line":"201","kind":"param"}],"line":"198","kind":"constructor"},{"name":"T","id":"T","kind":"typeparam"}],"line":"176","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"dart-sdk/lib/async/stream_controller.dart","name":"_StreamControllerLifecycle","isPrivate":true,"id":"_StreamControllerLifecycle","children":[{"returnType":{"refId":"void","name":"void"},"name":"_recordListen","isPrivate":true,"id":"_recordListen1()","children":[{"ref":{"refId":"dart.async/StreamSubscription","arguments":[{"refId":"dart.async/_StreamControllerLifecycle/T","name":"T"}],"name":"StreamSubscription"},"name":"subscription","id":"subscription","kind":"param"}],"line":"165","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_recordPause","isPrivate":true,"id":"_recordPause1()","children":[{"ref":{"refId":"dart.async/StreamSubscription","arguments":[{"refId":"dart.async/_StreamControllerLifecycle/T","name":"T"}],"name":"StreamSubscription"},"name":"subscription","id":"subscription","kind":"param"}],"line":"166","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_recordResume","isPrivate":true,"id":"_recordResume1()","children":[{"ref":{"refId":"dart.async/StreamSubscription","arguments":[{"refId":"dart.async/_StreamControllerLifecycle/T","name":"T"}],"name":"StreamSubscription"},"name":"subscription","id":"subscription","kind":"param"}],"line":"167","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_recordCancel","isPrivate":true,"id":"_recordCancel1()","children":[{"ref":{"refId":"dart.async/StreamSubscription","arguments":[{"refId":"dart.async/_StreamControllerLifecycle/T","name":"T"}],"name":"StreamSubscription"},"name":"subscription","id":"subscription","kind":"param"}],"line":"168","kind":"method"},{"name":"T","id":"T","kind":"typeparam"}],"line":"164","kind":"class"},{"isAbstract":true,"interfaces":[{"refId":"dart.async/EventSink","arguments":[{"refId":"dart.async/StreamController/T","name":"T"}],"name":"EventSink"}],"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nA controller with the stream it controls.\n\nThis controller allows sending data, error and done events on\nits [stream].\nThis class can be used to create a simple stream that others\ncan listen on, and to push events to that stream.\n\nIt's possible to check whether the stream is paused or not, and whether\nit has subscribers or not, as well as getting a callback when either of\nthese change.\n\nIf the stream starts or stops having listeners (first listener subscribing,\nlast listener unsubscribing), the `onSubscriptionStateChange` callback\nis notified as soon as possible. If the subscription stat changes during\nan event firing or a callback being executed, the change will not be reported\nuntil the current event or callback has finished.\nIf the pause state has also changed during an event or callback, only the\nsubscription state callback is notified.\n\nIf the subscriber state has not changed, but the pause state has, the\n`onPauseStateChange` callback is notified as soon as possible, after firing\na current event or completing another callback. This happens if the stream\nis not paused, and a listener pauses it, or if the stream has been resumed\nfrom pause and has no pending events. If the listeners resume a paused stream\nwhile it still has queued events, the controller will still consider the\nstream paused until all queued events have been dispatched.\n\nWhether to invoke a callback depends only on the state before and after\na stream action, for example firing an event. If the state changes multiple\ntimes during the action, and then ends up in the same state as before, no\ncallback is performed.\n\nIf listeners are added after the stream has completed (sent a \"done\" event),\nthe listeners will be sent a \"done\" event eventually, but they won't affect\nthe stream at all, and won't trigger callbacks. From the controller's point\nof view, the stream is completely inert when has completed.\n","uri":"dart-sdk/lib/async/stream_controller.dart","name":"StreamController","id":"StreamController","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nSend or enqueue an error event.\n\nAlso allows an objection stack trace object, on top of what [EventSink]\nallows.\n","name":"addError","id":"addError2()","children":[{"ref":{"refId":"dart.core/Object","name":"Object"},"name":"error","id":"error","kind":"param"},{"ref":{"refId":"dart.core/Object","name":"Object"},"isOptional":true,"name":"stackTrace","id":"stackTrace","kind":"param"}],"line":"160","kind":"method"},{"ref":{"refId":"dart.async/Stream","arguments":[{"refId":"dart.async/StreamController/T","name":"T"}],"name":"Stream"},"comment":"The stream that this controller is controlling. ","name":"stream","id":"stream","line":"51","kind":"property"},{"ref":{"refId":"dart.async/EventSink","arguments":[{"refId":"dart.async/StreamController/T","name":"T"}],"name":"EventSink"},"comment":"\nReturns a view of this object that only exposes the [EventSink] interface.\n","name":"sink","id":"sink","line":"128","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"comment":"\nWhether the stream is closed for adding more events.\n\nIf true, the \"done\" event might not have fired yet, but it has been\nscheduled, and it is too late to add more events.\n","name":"isClosed","id":"isClosed","line":"136","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"comment":"\nWhether the subscription would need to buffer events.\n\nThis is the case if the controller's stream has a listener and it is\npaused, or if it has not received a listener yet. In that case, the\ncontroller is considered paused as well.\n\nA broadcast stream controller is never considered paused. It always\nforwards its events to all uncanceled listeners, if any, and let them\nhandle their own pausing.\n","name":"isPaused","id":"isPaused","line":"149","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"comment":"Whether there is a subscriber on the [Stream]. ","name":"hasListener","id":"hasListener","line":"152","kind":"property"},{"returnType":{"refId":"dart.async/StreamController","arguments":[{"refId":"dart.async/StreamController/T","name":"T"}],"name":"StreamController"},"comment":"\nA controller with a [stream] that supports only one single subscriber.\n\nIf [sync] is true, events may be passed directly to the stream's listener\nduring an [add], [addError] or [close] call. If [sync] is false, the event\nwill be passed to the listener at a later time, after the code creating\nthe event has returned.\n\nThe controller will buffer all incoming events until the subscriber is\nregistered.\n\nThe [onPause] function is called when the stream becomes\npaused. [onResume] is called when the stream resumed.\n\nThe [onListen] callback is called when the stream\nreceives its listener and [onCancel] when the listener ends\nits subscription.\n\nIf the stream is canceled before the controller needs new data the\n[onResume] call might not be executed.\n","name":"StreamController","id":"StreamController5()","children":[{"isNamed":true,"ref":{"refId":"dart.core/Function","name":"Function"},"isOptional":true,"name":"onListen","id":"onListen","children":[{"returnType":{"refId":"void","name":"void"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","line":"13","kind":"functiontype"}],"kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/Function","name":"Function"},"isOptional":true,"name":"onPause","id":"onPause","children":[{"returnType":{"refId":"void","name":"void"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","line":"13","kind":"functiontype"}],"line":"75","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/Function","name":"Function"},"isOptional":true,"name":"onResume","id":"onResume","children":[{"returnType":{"refId":"void","name":"void"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","line":"13","kind":"functiontype"}],"line":"76","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/Function","name":"Function"},"isOptional":true,"name":"onCancel","id":"onCancel","children":[{"returnType":{"refId":"void","name":"void"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","line":"13","kind":"functiontype"}],"line":"77","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"false","name":"sync","id":"sync","line":"78","kind":"param"}],"line":"74","kind":"constructor"},{"returnType":{"refId":"dart.async/StreamController","arguments":[{"refId":"dart.async/StreamController/T","name":"T"}],"name":"StreamController"},"comment":"\nA controller where [stream] can be listened to more than once.\n\nThe [Stream] returned by [stream] is a broadcast stream. It can be listened\nto more than once.\n\nThe controller distributes any events to all currently subscribed\nlisteners.\nIt is not allowed to call [add], [addError], or [close] before a previous\ncall has returned.\n\nIf [sync] is true, events may be passed directly to the stream's listener\nduring an [add], [addError] or [close] call. If [sync] is false, the event\nwill be passed to the listener at a later time, after the code creating\nthe event has returned.\n\nEach listener is handled independently, and if they pause, only the pausing\nlistener is affected. A paused listener will buffer events internally until\nunpaused or canceled.\n\nIf [sync] is false, no guarantees are given with regard to when\nmultiple listeners get the events, except that each listener will get\nall events in the correct order. If two events are sent on an async\ncontroller with two listeners, one of the listeners may get both events\nbefore the other listener gets any.\nA listener must be subscribed both when the event is initiated (that is,\nwhen [add] is called) and when the event is later delivered, in order to\nget the event.\n\nThe [onListen] callback is called when the first listener is subscribed,\nand the [onCancel] is called when there are no longer any active listeners.\nIf a listener is added again later, after the [onCancel] was called,\nthe [onListen] will be called again.\n","name":"StreamController.broadcast","id":"StreamController.broadcast3()","children":[{"isNamed":true,"ref":{"refId":"dart.core/Function","name":"Function"},"isOptional":true,"name":"onListen","id":"onListen","children":[{"returnType":{"refId":"void","name":"void"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","line":"13","kind":"functiontype"}],"kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/Function","name":"Function"},"isOptional":true,"name":"onCancel","id":"onCancel","children":[{"returnType":{"refId":"void","name":"void"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","line":"13","kind":"functiontype"}],"line":"118","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"false","name":"sync","id":"sync","line":"119","kind":"param"}],"line":"117","kind":"constructor"},{"name":"T","id":"T","kind":"typeparam"}],"line":"49","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nAn [Iterable] like interface for the values of a [Stream].\n\nThis wraps a [Stream] and a subscription on the stream. It listens\non the stream, and completes the future returned by [moveNext] when the\nnext value becomes available.\n\nNOTICE: This is a tentative design. This class may change.\n","uri":"dart-sdk/lib/async/stream.dart","name":"StreamIterator","id":"StreamIterator","children":[{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"dart.core/bool","name":"bool"}],"name":"Future"},"comment":"\nWait for the next stream value to be available.\n\nIt is not allowed to call this function again until the future has\ncompleted. If the returned future completes with anything except `true`,\nthe iterator is done, and no new value will ever be available.\n\nThe future may complete with an error, if the stream produces an error.\n","name":"moveNext","id":"moveNext0()","line":"1226","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nCancels the stream iterator (and the underlying stream subscription) early.\n\nThe stream iterator is automatically canceled if the [moveNext] future\ncompletes with either `false` or an error.\n\nIf a [moveNext] call has been made, it will complete with `false` as value,\nas will all further calls to [moveNext].\n\nIf you need to stop listening for values before the stream iterator is\nautomatically closed, you must call [cancel] to ensure that the stream\nis properly closed.\n","name":"cancel","id":"cancel0()","line":"1249","kind":"method"},{"ref":{"refId":"dart.async/StreamIterator/T","name":"T"},"comment":"\nThe current value of the stream.\n\nOnly valid when the future returned by [moveNext] completes with `true`\nas value, and only until the next call to [moveNext].\n","name":"current","id":"current","line":"1234","kind":"property"},{"returnType":{"refId":"dart.async/StreamIterator","arguments":[{"refId":"dart.async/StreamIterator/T","name":"T"}],"name":"StreamIterator"},"comment":"Create a [StreamIterator] on [stream]. ","name":"StreamIterator","id":"StreamIterator1()","children":[{"ref":{"refId":"dart.async/Stream","arguments":[{"refId":"dart.async/StreamIterator/T","name":"T"}],"name":"Stream"},"name":"stream","id":"stream","kind":"param"}],"line":"1212","kind":"constructor"},{"name":"T","id":"T","kind":"typeparam"}],"line":"1209","kind":"class"},{"interfaces":[{"refId":"dart.async/EventSink","arguments":[{"refId":"dart.async/_EventSinkAdapter/T","name":"T"}],"name":"EventSink"}],"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"dart-sdk/lib/async/stream.dart","name":"_EventSinkAdapter","isPrivate":true,"id":"_EventSinkAdapter","children":[{"returnType":{"refId":"void","name":"void"},"name":"add","id":"add1()","children":[{"ref":{"refId":"dart.async/_EventSinkAdapter/T","name":"T"},"name":"data","id":"data","kind":"param"}],"line":"1194","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"addError","id":"addError1()","children":[{"name":"error","id":"error","kind":"param"}],"line":"1195","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"close","id":"close0()","line":"1196","kind":"method"},{"ref":{"refId":"dart.async/_EventSink","name":"_EventSink"},"name":"_sink","isPrivate":true,"id":"_sink","line":"1191","kind":"variable"},{"name":"_EventSinkAdapter","id":"_EventSinkAdapter1()","children":[{"initializedField":{"refId":"dart.async/_EventSinkAdapter/_sink","name":"_sink"},"ref":{"refId":"dart.async/_EventSink","name":"_EventSink"},"name":"_sink","isPrivate":true,"id":"_sink","kind":"param"}],"line":"1192","kind":"constructor"},{"name":"T","id":"T","kind":"typeparam"}],"line":"1190","kind":"class"},{"superclass":{"refId":"dart.async/_BufferingStreamSubscription","arguments":[{"refId":"dart.async/_EventTransformStreamSubscription/T","name":"T"}],"name":"_BufferingStreamSubscription"},"uri":"dart-sdk/lib/async/stream.dart","name":"_EventTransformStreamSubscription","isPrivate":true,"id":"_EventTransformStreamSubscription","children":[{"returnType":{"refId":"void","name":"void"},"name":"_onPause","isPrivate":true,"id":"_onPause0()","line":"1147","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_onResume","isPrivate":true,"id":"_onResume0()","line":"1151","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_onCancel","isPrivate":true,"id":"_onCancel0()","line":"1155","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_handleData","isPrivate":true,"id":"_handleData1()","children":[{"ref":{"refId":"dart.async/_EventTransformStreamSubscription/S","name":"S"},"name":"data","id":"data","kind":"param"}],"line":"1164","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_handleError","isPrivate":true,"id":"_handleError1()","children":[{"name":"error","id":"error","kind":"param"}],"line":"1172","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_handleDone","isPrivate":true,"id":"_handleDone0()","line":"1180","kind":"method"},{"ref":{"refId":"dart.core/bool","name":"bool"},"comment":"Whether this subscription is still subscribed to its source. ","name":"_isSubscribed","isPrivate":true,"id":"_isSubscribed","line":"1145","kind":"property"},{"ref":{"refId":"dart.async/StreamEventTransformer","arguments":[{"refId":"dart.async/_EventTransformStreamSubscription/S","name":"S"},{"refId":"dart.async/_EventTransformStreamSubscription/T","name":"T"}],"name":"StreamEventTransformer"},"isFinal":true,"comment":"The transformer used to transform events. ","name":"_transformer","isPrivate":true,"id":"_transformer","line":"1120","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"comment":"Whether this stream has sent a done event. ","name":"_isClosed","isPrivate":true,"id":"_isClosed","line":"1123","kind":"variable"},{"ref":{"refId":"dart.async/StreamSubscription","arguments":[{"refId":"dart.async/_EventTransformStreamSubscription/S","name":"S"}],"name":"StreamSubscription"},"comment":"Source of incoming events. ","name":"_subscription","isPrivate":true,"id":"_subscription","line":"1126","kind":"variable"},{"ref":{"refId":"dart.async/EventSink","arguments":[{"refId":"dart.async/_EventTransformStreamSubscription/T","name":"T"}],"name":"EventSink"},"comment":"Cached EventSink wrapper for this class. ","name":"_sink","isPrivate":true,"id":"_sink","line":"1129","kind":"variable"},{"name":"_EventTransformStreamSubscription","id":"_EventTransformStreamSubscription6()","children":[{"ref":{"refId":"dart.async/Stream","arguments":[{"refId":"dart.async/_EventTransformStreamSubscription/S","name":"S"}],"name":"Stream"},"name":"source","id":"source","kind":"param"},{"initializedField":{"refId":"dart.async/_EventTransformStreamSubscription/_transformer","name":"_transformer"},"ref":{"refId":"dart.async/StreamEventTransformer","arguments":[{"refId":"dart.async/_EventTransformStreamSubscription/S","name":"S"},{"refId":"dart.async/_EventTransformStreamSubscription/T","name":"T"}],"name":"StreamEventTransformer"},"name":"_transformer","isPrivate":true,"id":"_transformer","line":"1132","kind":"param"},{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"onData","id":"onData","children":[{"returnType":{"refId":"void","name":"void"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.async/_EventTransformStreamSubscription/T","name":"T"},"uri":"dart-sdk/lib/async/stream.dart","name":"data","id":"data","line":"1133","kind":"param"}],"line":"13","kind":"functiontype"}],"line":"1133","kind":"param"},{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"onError","id":"onError","children":[{"returnType":{"refId":"void","name":"void"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"uri":"dart-sdk/lib/async/stream.dart","name":"error","id":"error","line":"1134","kind":"param"}],"line":"13","kind":"functiontype"}],"line":"1134","kind":"param"},{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"onDone","id":"onDone","children":[{"returnType":{"refId":"void","name":"void"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","line":"13","kind":"functiontype"}],"line":"1135","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"cancelOnError","id":"cancelOnError","line":"1136","kind":"param"}],"line":"1131","kind":"constructor"},{"name":"S","id":"S","kind":"typeparam"},{"name":"T","id":"T","kind":"typeparam"}],"line":"1117","kind":"class"},{"superclass":{"refId":"dart.async/Stream","arguments":[{"refId":"dart.async/EventTransformStream/T","name":"T"}],"name":"Stream"},"comment":"\nStream that transforms another stream by intercepting and replacing events.\n\nThis [Stream] is a transformation of a source stream. Listening on this\nstream is the same as listening on the source stream, except that events\nare intercepted and modified by a [StreamEventTransformer] before becoming\nevents on this stream.\n","uri":"dart-sdk/lib/async/stream.dart","name":"EventTransformStream","id":"EventTransformStream","children":[{"returnType":{"refId":"dart.async/StreamSubscription","arguments":[{"refId":"dart.async/EventTransformStream/T","name":"T"}],"name":"StreamSubscription"},"name":"listen","id":"listen4()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"onData","id":"onData","children":[{"returnType":{"refId":"void","name":"void"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.async/EventTransformStream/T","name":"T"},"uri":"dart-sdk/lib/async/stream.dart","name":"data","id":"data","line":"1103","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/Function","name":"Function"},"isOptional":true,"name":"onError","id":"onError","children":[{"returnType":{"refId":"void","name":"void"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"uri":"dart-sdk/lib/async/stream.dart","name":"error","id":"error","line":"1104","kind":"param"}],"line":"13","kind":"functiontype"}],"line":"1104","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/Function","name":"Function"},"isOptional":true,"name":"onDone","id":"onDone","children":[{"returnType":{"refId":"void","name":"void"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","line":"13","kind":"functiontype"}],"line":"1105","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"name":"cancelOnError","id":"cancelOnError","line":"1106","kind":"param"}],"line":"1103","kind":"method"},{"ref":{"refId":"dart.async/Stream","arguments":[{"refId":"dart.async/EventTransformStream/S","name":"S"}],"name":"Stream"},"isFinal":true,"name":"_source","isPrivate":true,"id":"_source","line":"1097","kind":"variable"},{"ref":{"refId":"dart.async/StreamEventTransformer","name":"StreamEventTransformer"},"isFinal":true,"name":"_transformer","isPrivate":true,"id":"_transformer","line":"1098","kind":"variable"},{"name":"EventTransformStream","id":"EventTransformStream2()","children":[{"ref":{"refId":"dart.async/Stream","arguments":[{"refId":"dart.async/EventTransformStream/S","name":"S"}],"name":"Stream"},"name":"source","id":"source","kind":"param"},{"ref":{"refId":"dart.async/StreamEventTransformer","arguments":[{"refId":"dart.async/EventTransformStream/S","name":"S"},{"refId":"dart.async/EventTransformStream/T","name":"T"}],"name":"StreamEventTransformer"},"name":"transformer","id":"transformer","line":"1100","kind":"param"}],"line":"1099","kind":"constructor"},{"name":"S","id":"S","kind":"typeparam"},{"name":"T","id":"T","kind":"typeparam"}],"line":"1096","kind":"class"},{"isAbstract":true,"interfaces":[{"refId":"dart.async/StreamTransformer","arguments":[{"refId":"dart.async/StreamEventTransformer/S","name":"S"},{"refId":"dart.async/StreamEventTransformer/T","name":"T"}],"name":"StreamTransformer"}],"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nBase class for transformers that modifies stream events.\n\nA [StreamEventTransformer] transforms incoming Stream\nevents of one kind into outgoing events of (possibly) another kind.\n\nSubscribing on the stream returned by [bind] is the same as subscribing on\nthe source stream, except that events are passed through the [transformer]\nbefore being emitted. The transformer may generate any number and\ntypes of events for each incoming event. Pauses on the returned\nsubscription are forwarded to this stream.\n\nAn example that duplicates all data events:\n\n    class DoubleTransformer<T> extends StreamEventTransformer<T, T> {\n      void handleData(T data, EventSink<T> sink) {\n        sink.add(value);\n        sink.add(value);\n      }\n    }\n    someTypeStream.transform(new DoubleTransformer<Type>());\n\nThe default implementations of the \"handle\" methods forward\nthe events unmodified. If using the default [handleData] the generic type [T]\nneeds to be assignable to [S].\n","uri":"dart-sdk/lib/async/stream.dart","name":"StreamEventTransformer","id":"StreamEventTransformer","children":[{"returnType":{"refId":"dart.async/Stream","arguments":[{"refId":"dart.async/StreamEventTransformer/T","name":"T"}],"name":"Stream"},"name":"bind","id":"bind1()","children":[{"ref":{"refId":"dart.async/Stream","arguments":[{"refId":"dart.async/StreamEventTransformer/S","name":"S"}],"name":"Stream"},"name":"source","id":"source","kind":"param"}],"line":"1051","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nAct on incoming data event.\n\nThe method may generate any number of events on the sink, but should\nnot throw.\n","name":"handleData","id":"handleData2()","children":[{"ref":{"refId":"dart.async/StreamEventTransformer/S","name":"S"},"name":"event","id":"event","kind":"param"},{"ref":{"refId":"dart.async/EventSink","arguments":[{"refId":"dart.async/StreamEventTransformer/T","name":"T"}],"name":"EventSink"},"name":"sink","id":"sink","kind":"param"}],"line":"1061","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nAct on incoming error event.\n\nThe method may generate any number of events on the sink, but should\nnot throw.\n","name":"handleError","id":"handleError2()","children":[{"name":"error","id":"error","kind":"param"},{"ref":{"refId":"dart.async/EventSink","arguments":[{"refId":"dart.async/StreamEventTransformer/T","name":"T"}],"name":"EventSink"},"name":"sink","id":"sink","kind":"param"}],"line":"1072","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nAct on incoming done event.\n\nThe method may generate any number of events on the sink, but should\nnot throw.\n","name":"handleDone","id":"handleDone1()","children":[{"ref":{"refId":"dart.async/EventSink","arguments":[{"refId":"dart.async/StreamEventTransformer/T","name":"T"}],"name":"EventSink"},"name":"sink","id":"sink","kind":"param"}],"line":"1082","kind":"method"},{"name":"StreamEventTransformer","id":"StreamEventTransformer0()","line":"1049","kind":"constructor"},{"name":"S","id":"S","kind":"typeparam"},{"name":"T","id":"T","kind":"typeparam"}],"line":"1048","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nThe target of a [Stream.transform] call.\n\nThe [Stream.transform] call will pass itself to this object and then return\nthe resulting stream.\n","uri":"dart-sdk/lib/async/stream.dart","name":"StreamTransformer","id":"StreamTransformer","children":[{"returnType":{"refId":"dart.async/Stream","arguments":[{"refId":"dart.async/StreamTransformer/T","name":"T"}],"name":"Stream"},"name":"bind","id":"bind1()","children":[{"ref":{"refId":"dart.async/Stream","arguments":[{"refId":"dart.async/StreamTransformer/S","name":"S"}],"name":"Stream"},"name":"stream","id":"stream","kind":"param"}],"line":"1018","kind":"method"},{"returnType":{"refId":"dart.async/StreamTransformer","arguments":[{"refId":"dart.async/StreamTransformer/S","name":"S"},{"refId":"dart.async/StreamTransformer/T","name":"T"}],"name":"StreamTransformer"},"comment":"\nCreate a [StreamTransformer] that delegates events to the given functions.\n\nThis is actually a [StreamEventTransformer] where the event handling is\nperformed by the function arguments.\nIf an argument is omitted, it acts as the corresponding default method from\n[StreamEventTransformer].\n\nExample use:\n\n    stringStream.transform(new StreamTransformer<String, String>(\n        handleData: (Strung value, EventSink<String> sink) {\n          sink.add(value);\n          sink.add(value);  // Duplicate the incoming events.\n        }));\n\n","name":"StreamTransformer","id":"StreamTransformer3()","children":[{"isNamed":true,"ref":{"refId":"dart.core/Function","name":"Function"},"isOptional":true,"name":"handleData","id":"handleData","children":[{"returnType":{"refId":"void","name":"void"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.async/StreamTransformer/S","name":"S"},"uri":"dart-sdk/lib/async/stream.dart","name":"data","id":"data","line":"1010","kind":"param"},{"ref":{"refId":"dart.async/EventSink","arguments":[{"refId":"dart.async/StreamTransformer/T","name":"T"}],"name":"EventSink"},"uri":"dart-sdk/lib/async/stream.dart","name":"sink","id":"sink","line":"1010","kind":"param"}],"line":"13","kind":"functiontype"}],"line":"1010","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/Function","name":"Function"},"isOptional":true,"name":"handleError","id":"handleError","children":[{"returnType":{"refId":"void","name":"void"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"uri":"dart-sdk/lib/async/stream.dart","name":"error","id":"error","line":"1011","kind":"param"},{"ref":{"refId":"dart.async/EventSink","arguments":[{"refId":"dart.async/StreamTransformer/T","name":"T"}],"name":"EventSink"},"uri":"dart-sdk/lib/async/stream.dart","name":"sink","id":"sink","line":"1011","kind":"param"}],"line":"13","kind":"functiontype"}],"line":"1011","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/Function","name":"Function"},"isOptional":true,"name":"handleDone","id":"handleDone","children":[{"returnType":{"refId":"void","name":"void"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.async/EventSink","arguments":[{"refId":"dart.async/StreamTransformer/T","name":"T"}],"name":"EventSink"},"uri":"dart-sdk/lib/async/stream.dart","name":"sink","id":"sink","line":"1012","kind":"param"}],"line":"13","kind":"functiontype"}],"line":"1012","kind":"param"}],"line":"1009","kind":"constructor"},{"name":"S","id":"S","kind":"typeparam"},{"name":"T","id":"T","kind":"typeparam"}],"line":"991","kind":"class"},{"isAbstract":true,"interfaces":[{"refId":"dart.async/EventSink","arguments":[{"refId":"dart.async/StreamSink/S","name":"S"}],"name":"EventSink"},{"refId":"dart.async/StreamConsumer","arguments":[{"refId":"dart.async/StreamSink/S","name":"S"}],"name":"StreamConsumer"}],"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nA [StreamSink] unifies the asynchronous methods from [StreamConsumer] and\nthe synchronous methods from [EventSink].\n\nThe [EventSink] methods can't be used while the [addStream] is called.\nAs soon as the [addStream]'s [Future] completes with a value, the\n[EventSink] methods can be used again.\n\nIf [addStream] is called after any of the [EventSink] methods, it'll\nbe delayed until the underlying system has consumed the data added by the\n[EventSink] methods.\n\nWhen [EventSink] methods are used, the [done] [Future] can be used to\ncatch any errors.\n\nWhen [close] is called, it will return the [done] [Future].\n","uri":"dart-sdk/lib/async/stream.dart","name":"StreamSink","id":"StreamSink","children":[{"returnType":{"refId":"dart.async/Future","name":"Future"},"comment":"\nClose the [StreamSink]. It'll return the [done] Future.\n","name":"close","id":"close0()","line":"971","kind":"method"},{"ref":{"refId":"dart.async/Future","name":"Future"},"comment":"\nThe [done] Future completes with the same values as [close], except\nfor the following case:\n\n* The synchronous methods of [EventSink] were called, resulting in an\n  error. If there is no active future (like from an addStream call), the\n  [done] future will complete with that error\n","name":"done","id":"done","line":"981","kind":"property"},{"name":"S","id":"S","kind":"typeparam"}],"line":"967","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nThe target of a [Stream.pipe] call.\n\nThe [Stream.pipe] call will pass itself to this object, and then return\nthe resulting [Future]. The pipe should complete the future when it's\ndone.\n","uri":"dart-sdk/lib/async/stream.dart","name":"StreamConsumer","id":"StreamConsumer","children":[{"returnType":{"refId":"dart.async/Future","name":"Future"},"name":"addStream","id":"addStream1()","children":[{"ref":{"refId":"dart.async/Stream","arguments":[{"refId":"dart.async/StreamConsumer/S","name":"S"}],"name":"Stream"},"name":"stream","id":"stream","kind":"param"}],"line":"945","kind":"method"},{"returnType":{"refId":"dart.async/Future","name":"Future"},"name":"close","id":"close0()","line":"946","kind":"method"},{"name":"S","id":"S","kind":"typeparam"}],"line":"944","kind":"class"},{"superclass":{"refId":"dart.async/EventSink","arguments":[{"refId":"dart.async/_EventSinkView/T","name":"T"}],"name":"EventSink"},"comment":"\n[EventSink] wrapper that only exposes the [EventSink] interface.\n","uri":"dart-sdk/lib/async/stream.dart","name":"_EventSinkView","isPrivate":true,"id":"_EventSinkView","children":[{"returnType":{"refId":"void","name":"void"},"name":"add","id":"add1()","children":[{"ref":{"refId":"dart.async/_EventSinkView/T","name":"T"},"name":"value","id":"value","kind":"param"}],"line":"931","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"addError","id":"addError1()","children":[{"name":"error","id":"error","kind":"param"}],"line":"932","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"close","id":"close0()","line":"933","kind":"method"},{"ref":{"refId":"dart.async/EventSink","arguments":[{"refId":"dart.async/_EventSinkView/T","name":"T"}],"name":"EventSink"},"isFinal":true,"name":"_sink","isPrivate":true,"id":"_sink","line":"927","kind":"variable"},{"name":"_EventSinkView","id":"_EventSinkView1()","children":[{"initializedField":{"refId":"dart.async/_EventSinkView/_sink","name":"_sink"},"ref":{"refId":"dart.async/EventSink","arguments":[{"refId":"dart.async/_EventSinkView/T","name":"T"}],"name":"EventSink"},"name":"_sink","isPrivate":true,"id":"_sink","kind":"param"}],"line":"929","kind":"constructor"},{"name":"T","id":"T","kind":"typeparam"}],"line":"926","kind":"class"},{"superclass":{"refId":"dart.async/Stream","arguments":[{"refId":"dart.async/StreamView/T","name":"T"}],"name":"Stream"},"comment":"[Stream] wrapper that only exposes the [Stream] interface. ","uri":"dart-sdk/lib/async/stream.dart","name":"StreamView","id":"StreamView","children":[{"returnType":{"refId":"dart.async/Stream","arguments":[{"refId":"dart.async/StreamView/T","name":"T"}],"name":"Stream"},"name":"asBroadcastStream","id":"asBroadcastStream0()","line":"912","kind":"method"},{"returnType":{"refId":"dart.async/StreamSubscription","arguments":[{"refId":"dart.async/StreamView/T","name":"T"}],"name":"StreamSubscription"},"name":"listen","id":"listen4()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"onData","id":"onData","children":[{"returnType":{"refId":"void","name":"void"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.async/StreamView/T","name":"T"},"uri":"dart-sdk/lib/async/stream.dart","name":"value","id":"value","line":"914","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/Function","name":"Function"},"isOptional":true,"name":"onError","id":"onError","children":[{"returnType":{"refId":"void","name":"void"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"uri":"dart-sdk/lib/async/stream.dart","name":"error","id":"error","line":"915","kind":"param"}],"line":"13","kind":"functiontype"}],"line":"915","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/Function","name":"Function"},"isOptional":true,"name":"onDone","id":"onDone","children":[{"returnType":{"refId":"void","name":"void"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","line":"13","kind":"functiontype"}],"line":"916","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"name":"cancelOnError","id":"cancelOnError","line":"917","kind":"param"}],"line":"914","kind":"method"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"isBroadcast","id":"isBroadcast","line":"910","kind":"property"},{"ref":{"refId":"dart.async/Stream","arguments":[{"refId":"dart.async/StreamView/T","name":"T"}],"name":"Stream"},"name":"_stream","isPrivate":true,"id":"_stream","line":"906","kind":"variable"},{"name":"StreamView","id":"StreamView1()","children":[{"initializedField":{"refId":"dart.async/StreamView/_stream","name":"_stream"},"ref":{"refId":"dart.async/Stream","arguments":[{"refId":"dart.async/StreamView/T","name":"T"}],"name":"Stream"},"name":"_stream","isPrivate":true,"id":"_stream","kind":"param"}],"line":"908","kind":"constructor"},{"name":"T","id":"T","kind":"typeparam"}],"line":"905","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nAn interface that abstracts creation or handling of [Stream] events.\n","uri":"dart-sdk/lib/async/stream.dart","name":"EventSink","id":"EventSink","children":[{"returnType":{"refId":"void","name":"void"},"comment":"Create a data event ","name":"add","id":"add1()","children":[{"ref":{"refId":"dart.async/EventSink/T","name":"T"},"name":"event","id":"event","kind":"param"}],"line":"896","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"Create an async error. ","name":"addError","id":"addError1()","children":[{"name":"errorEvent","id":"errorEvent","kind":"param"}],"line":"898","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"Request a stream to close. ","name":"close","id":"close0()","line":"900","kind":"method"},{"name":"T","id":"T","kind":"typeparam"}],"line":"894","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nA control object for the subscription on a [Stream].\n\nWhen you subscribe on a [Stream] using [Stream.listen],\na [StreamSubscription] object is returned. This object\nis used to later unsubscribe again, or to temporarily pause\nthe stream's events.\n","uri":"dart-sdk/lib/async/stream.dart","name":"StreamSubscription","id":"StreamSubscription","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nCancels this subscription. It will no longer receive events.\n\nIf an event is currently firing, this unsubscription will only\ntake effect after all subscribers have received the current event.\n","name":"cancel","id":"cancel0()","line":"840","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"Set or override the data event handler of this subscription. ","name":"onData","id":"onData1()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"handleData","id":"handleData","children":[{"returnType":{"refId":"void","name":"void"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.async/StreamSubscription/T","name":"T"},"uri":"dart-sdk/lib/async/stream.dart","name":"data","id":"data","line":"843","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"}],"line":"843","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"Set or override the error event handler of this subscription. ","name":"onError","id":"onError1()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"handleError","id":"handleError","children":[{"returnType":{"refId":"void","name":"void"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"uri":"dart-sdk/lib/async/stream.dart","name":"error","id":"error","line":"846","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"}],"line":"846","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"Set or override the done event handler of this subscription. ","name":"onDone","id":"onDone1()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"handleDone","id":"handleDone","children":[{"returnType":{"refId":"void","name":"void"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","line":"13","kind":"functiontype"}],"kind":"param"}],"line":"849","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nRequest that the stream pauses events until further notice.\n\nIf [resumeSignal] is provided, the stream will undo the pause\nwhen the future completes. If the future completes with an error,\nit will not be handled!\n\nA call to [resume] will also undo a pause.\n\nIf the subscription is paused more than once, an equal number\nof resumes must be performed to resume the stream.\n","name":"pause","id":"pause1()","children":[{"ref":{"refId":"dart.async/Future","name":"Future"},"isOptional":true,"name":"resumeSignal","id":"resumeSignal","kind":"param"}],"line":"863","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nResume after a pause.\n","name":"resume","id":"resume0()","line":"868","kind":"method"},{"returnType":{"refId":"dart.async/Future","name":"Future"},"comment":"\nReturns a future that handles the [onDone] and [onError] callbacks.\n\nThis method *overwrites* the existing [onDone] and [onError] callbacks\nwith new ones that complete the returned future.\n\nIn case of an error the subscription will automatically cancel (even\nwhen it was listening with `cancelOnError` set to `false`).\n\nIn case of a `done` event the future completes with the given\n[futureValue].\n","name":"asFuture","id":"asFuture1()","children":[{"isOptional":true,"name":"futureValue","id":"futureValue","kind":"param"}],"line":"887","kind":"method"},{"ref":{"refId":"dart.core/bool","name":"bool"},"comment":"\nReturns true if the [StreamSubscription] is paused.\n","name":"isPaused","id":"isPaused","line":"873","kind":"property"},{"name":"T","id":"T","kind":"typeparam"}],"line":"833","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nA source of asynchronous data events.\n\nA Stream provides a sequence of events. Each event is either a data event or\nan error event, representing the result of a single computation. When the\nStream is exhausted, it may send a single \"done\" event.\n\nYou can [listen] on a stream to receive the events it sends. When you listen,\nyou receive a [StreamSubscription] object that can be used to stop listening,\nor to temporarily pause events from the stream.\n\nWhen an event is fired, the listeners at that time are informed.\nIf a listener is added while an event is being fired, the change\nwill only take effect after the event is completely fired. If a listener\nis canceled, it immediately stops receiving events.\n\nWhen the \"done\" event is fired, subscribers are unsubscribed before\nreceiving the event. After the event has been sent, the stream has no\nsubscribers. Adding new subscribers after this point is allowed, but\nthey will just receive a new \"done\" event as soon as possible.\n\nStreams always respect \"pause\" requests. If necessary they need to buffer\ntheir input, but often, and preferably, they can simply request their input\nto pause too.\n\nThere are two kinds of streams: The normal \"single-subscription\" streams and\n\"broadcast\" streams.\n\nA single-subscription stream allows only a single listener at a time.\nIt holds back events until it gets a listener, and it may exhaust\nitself when the listener is unsubscribed, even if the stream wasn't done.\n\nSingle-subscription streams are generally used for streaming parts of\ncontiguous data like file I/O.\n\nA broadcast stream allows any number of listeners, and it fires\nits events when they are ready, whether there are listeners or not.\n\nBroadcast streams are used for independent events/observers.\n\nThe default implementation of [isBroadcast] returns false.\nA broadcast stream inheriting from [Stream] must override [isBroadcast]\nto return [:true:].\n","uri":"dart-sdk/lib/async/stream.dart","name":"Stream","id":"Stream","children":[{"returnType":{"refId":"dart.async/Stream","arguments":[{"refId":"dart.async/Stream/T","name":"T"}],"name":"Stream"},"comment":"\nReturns a multi-subscription stream that produces the same events as this.\n\nIf this stream is single-subscription, return a new stream that allows\nmultiple subscribers. It will subscribe to this stream when its first\nsubscriber is added, and unsubscribe again when the last subscription is\ncanceled.\n\nIf this stream is already a broadcast stream, it is returned unmodified.\n","name":"asBroadcastStream","id":"asBroadcastStream0()","line":"159","kind":"method"},{"returnType":{"refId":"dart.async/StreamSubscription","arguments":[{"refId":"dart.async/Stream/T","name":"T"}],"name":"StreamSubscription"},"comment":"\nAdds a subscription to this stream.\n\nOn each data event from this stream, the subscriber's [onData] handler\nis called. If [onData] is null, nothing happens.\n\nOn errors from this stream, the [onError] handler is given a\nobject describing the error.\n\nIf this stream closes, the [onDone] handler is called.\n\nIf [cancelOnError] is true, the subscription is ended when\nthe first error is reported. The default is false.\n","name":"listen","id":"listen4()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"onData","id":"onData","children":[{"returnType":{"refId":"void","name":"void"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.async/Stream/T","name":"T"},"uri":"dart-sdk/lib/async/stream.dart","name":"event","id":"event","line":"178","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/Function","name":"Function"},"isOptional":true,"name":"onError","id":"onError","children":[{"returnType":{"refId":"void","name":"void"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"uri":"dart-sdk/lib/async/stream.dart","name":"error","id":"error","line":"179","kind":"param"}],"line":"13","kind":"functiontype"}],"line":"179","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/Function","name":"Function"},"isOptional":true,"name":"onDone","id":"onDone","children":[{"returnType":{"refId":"void","name":"void"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","line":"13","kind":"functiontype"}],"line":"180","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"name":"cancelOnError","id":"cancelOnError","line":"181","kind":"param"}],"line":"178","kind":"method"},{"returnType":{"refId":"dart.async/Stream","arguments":[{"refId":"dart.async/Stream/T","name":"T"}],"name":"Stream"},"comment":"\nCreates a new stream from this stream that discards some data events.\n\nThe new stream sends the same error and done events as this stream,\nbut it only sends the data events that satisfy the [test].\n","name":"where","id":"where1()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"test","id":"test","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.async/Stream/T","name":"T"},"uri":"dart-sdk/lib/async/stream.dart","name":"event","id":"event","line":"189","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"}],"line":"189","kind":"method"},{"returnType":{"refId":"dart.async/Stream","name":"Stream"},"comment":"\nCreates a new stream that converts each element of this stream\nto a new value using the [convert] function.\n","name":"map","id":"map1()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"convert","id":"convert","children":[{"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.async/Stream/T","name":"T"},"uri":"dart-sdk/lib/async/stream.dart","name":"event","id":"event","line":"197","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"}],"line":"197","kind":"method"},{"returnType":{"refId":"dart.async/Stream","arguments":[{"refId":"dart.async/Stream/T","name":"T"}],"name":"Stream"},"comment":"\nCreates a wrapper Stream that intercepts some errors from this stream.\n\nIf this stream sends an error that matches [test], then it is intercepted\nby the [handle] function.\n\nAn [AsyncError] [:e:] is matched by a test function if [:test(e):] returns\ntrue. If [test] is omitted, every error is considered matching.\n\nIf the error is intercepted, the [handle] function can decide what to do\nwith it. It can throw if it wants to raise a new (or the same) error,\nor simply return to make the stream forget the error.\n\nIf you need to transform an error into a data event, use the more generic\n[Stream.transformEvent] to handle the event by writing a data event to\nthe output sink\n","name":"handleError","id":"handleError2()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"handle","id":"handle","children":[{"returnType":{"refId":"void","name":"void"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"uri":"dart-sdk/lib/async/stream.dart","name":"error","id":"error","line":"218","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/Function","name":"Function"},"isOptional":true,"name":"test","id":"test","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"uri":"dart-sdk/lib/async/stream.dart","name":"error","id":"error","line":"218","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"}],"line":"218","kind":"method"},{"returnType":{"refId":"dart.async/Stream","name":"Stream"},"comment":"\nCreates a new stream from this stream that converts each element\ninto zero or more events.\n\nEach incoming event is converted to an [Iterable] of new events,\nand each of these new events are then sent by the returned stream\nin order.\n","name":"expand","id":"expand1()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"convert","id":"convert","children":[{"returnType":{"refId":"dart.core/Iterable","name":"Iterable"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.async/Stream/T","name":"T"},"uri":"dart-sdk/lib/async/stream.dart","name":"value","id":"value","line":"230","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"}],"line":"230","kind":"method"},{"returnType":{"refId":"dart.async/Future","name":"Future"},"comment":"\nBinds this stream as the input of the provided [StreamConsumer].\n","name":"pipe","id":"pipe1()","children":[{"ref":{"refId":"dart.async/StreamConsumer","arguments":[{"refId":"dart.async/Stream/T","name":"T"}],"name":"StreamConsumer"},"name":"streamConsumer","id":"streamConsumer","kind":"param"}],"line":"237","kind":"method"},{"returnType":{"refId":"dart.async/Stream","name":"Stream"},"comment":"\nChains this stream as the input of the provided [StreamTransformer].\n\nReturns the result of [:streamTransformer.bind:] itself.\n","name":"transform","id":"transform1()","children":[{"ref":{"refId":"dart.async/StreamTransformer","arguments":[{"refId":"dart.async/Stream/T","name":"T"}],"name":"StreamTransformer"},"name":"streamTransformer","id":"streamTransformer","kind":"param"}],"line":"246","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"dart.async/Stream/T","name":"T"}],"name":"Future"},"comment":"\nReduces a sequence of values by repeatedly applying [combine].\n","name":"reduce","id":"reduce1()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"combine","id":"combine","children":[{"returnType":{"refId":"dart.async/Stream/T","name":"T"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.async/Stream/T","name":"T"},"uri":"dart-sdk/lib/async/stream.dart","name":"previous","id":"previous","line":"253","kind":"param"},{"ref":{"refId":"dart.async/Stream/T","name":"T"},"uri":"dart-sdk/lib/async/stream.dart","name":"element","id":"element","line":"253","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"}],"line":"253","kind":"method"},{"returnType":{"refId":"dart.async/Future","name":"Future"},"comment":"Reduces a sequence of values by repeatedly applying [combine]. ","name":"fold","id":"fold2()","children":[{"name":"initialValue","id":"initialValue","kind":"param"},{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"combine","id":"combine","children":[{"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"uri":"dart-sdk/lib/async/stream.dart","name":"previous","id":"previous","line":"285","kind":"param"},{"ref":{"refId":"dart.async/Stream/T","name":"T"},"uri":"dart-sdk/lib/async/stream.dart","name":"element","id":"element","line":"285","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"}],"line":"285","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"dart.core/bool","name":"bool"}],"name":"Future"},"comment":"\nChecks whether [match] occurs in the elements provided by this stream.\n\nCompletes the [Future] when the answer is known.\nIf this stream reports an error, the [Future] will report that error.\n","name":"contains","id":"contains1()","children":[{"ref":{"refId":"dart.async/Stream/T","name":"T"},"name":"match","id":"match","kind":"param"}],"line":"315","kind":"method"},{"returnType":{"refId":"dart.async/Future","name":"Future"},"comment":"\nExecutes [action] on each data event of the stream.\n\nCompletes the returned [Future] when all events of the stream\nhave been processed. Completes the future with an error if the\nstream has an error event, or if [action] throws.\n","name":"forEach","id":"forEach1()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"action","id":"action","children":[{"returnType":{"refId":"void","name":"void"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.async/Stream/T","name":"T"},"uri":"dart-sdk/lib/async/stream.dart","name":"element","id":"element","line":"348","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"}],"line":"348","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"dart.core/bool","name":"bool"}],"name":"Future"},"comment":"\nChecks whether [test] accepts all elements provided by this stream.\n\nCompletes the [Future] when the answer is known.\nIf this stream reports an error, the [Future] will report that error.\n","name":"every","id":"every1()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"test","id":"test","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.async/Stream/T","name":"T"},"uri":"dart-sdk/lib/async/stream.dart","name":"element","id":"element","line":"375","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"}],"line":"375","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"dart.core/bool","name":"bool"}],"name":"Future"},"comment":"\nChecks whether [test] accepts any element provided by this stream.\n\nCompletes the [Future] when the answer is known.\nIf this stream reports an error, the [Future] will report that error.\n","name":"any","id":"any1()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"test","id":"test","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.async/Stream/T","name":"T"},"uri":"dart-sdk/lib/async/stream.dart","name":"element","id":"element","line":"407","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"}],"line":"407","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"dart.core/List","arguments":[{"refId":"dart.async/Stream/T","name":"T"}],"name":"List"}],"name":"Future"},"comment":"Collects the data of this stream in a [List]. ","name":"toList","id":"toList0()","line":"466","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"dart.core/Set","arguments":[{"refId":"dart.async/Stream/T","name":"T"}],"name":"Set"}],"name":"Future"},"comment":"Collects the data of this stream in a [Set]. ","name":"toSet","id":"toSet0()","line":"484","kind":"method"},{"returnType":{"refId":"dart.async/Future","name":"Future"},"comment":"\nDiscards all data on the stream, but signals when it's done or an error\noccured.\n\nWhen subscribing using [drain], cancelOnError will be true. This means\nthat the future will complete with the first error on the stream and then\ncancel the subscription.\n\nIn case of a `done` event the future completes with the given\n[futureValue].\n","name":"drain","id":"drain1()","children":[{"isOptional":true,"name":"futureValue","id":"futureValue","kind":"param"}],"line":"512","kind":"method"},{"returnType":{"refId":"dart.async/Stream","arguments":[{"refId":"dart.async/Stream/T","name":"T"}],"name":"Stream"},"comment":"\nProvides at most the first [n] values of this stream.\n\nForwards the first [n] data events of this stream, and all error\nevents, to the returned stream, and ends with a done event.\n\nIf this stream produces fewer than [count] values before it's done,\nso will the returned stream.\n","name":"take","id":"take1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"count","id":"count","kind":"param"}],"line":"524","kind":"method"},{"returnType":{"refId":"dart.async/Stream","arguments":[{"refId":"dart.async/Stream/T","name":"T"}],"name":"Stream"},"comment":"\nForwards data events while [test] is successful.\n\nThe returned stream provides the same events as this stream as long\nas [test] returns [:true:] for the event data. The stream is done\nwhen either this stream is done, or when this stream first provides\na value that [test] doesn't accept.\n","name":"takeWhile","id":"takeWhile1()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"test","id":"test","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.async/Stream/T","name":"T"},"uri":"dart-sdk/lib/async/stream.dart","name":"element","id":"element","line":"536","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"}],"line":"536","kind":"method"},{"returnType":{"refId":"dart.async/Stream","arguments":[{"refId":"dart.async/Stream/T","name":"T"}],"name":"Stream"},"comment":"\nSkips the first [count] data events from this stream.\n","name":"skip","id":"skip1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"count","id":"count","kind":"param"}],"line":"543","kind":"method"},{"returnType":{"refId":"dart.async/Stream","arguments":[{"refId":"dart.async/Stream/T","name":"T"}],"name":"Stream"},"comment":"\nSkip data events from this stream while they are matched by [test].\n\nError and done events are provided by the returned stream unmodified.\n\nStarting with the first data event where [test] returns true for the\nevent data, the returned stream will have the same events as this stream.\n","name":"skipWhile","id":"skipWhile1()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"test","id":"test","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.async/Stream/T","name":"T"},"uri":"dart-sdk/lib/async/stream.dart","name":"element","id":"element","line":"555","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"}],"line":"555","kind":"method"},{"returnType":{"refId":"dart.async/Stream","arguments":[{"refId":"dart.async/Stream/T","name":"T"}],"name":"Stream"},"comment":"\nSkips data events if they are equal to the previous data event.\n\nThe returned stream provides the same events as this stream, except\nthat it never provides two consequtive data events that are equal.\n\nEquality is determined by the provided [equals] method. If that is\nomitted, the '==' operator on the last provided data element is used.\n","name":"distinct","id":"distinct1()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"isOptional":true,"name":"equals","id":"equals","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.async/Stream/T","name":"T"},"uri":"dart-sdk/lib/async/stream.dart","name":"previous","id":"previous","line":"568","kind":"param"},{"ref":{"refId":"dart.async/Stream/T","name":"T"},"uri":"dart-sdk/lib/async/stream.dart","name":"next","id":"next","line":"568","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"}],"line":"568","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"dart.async/Stream/T","name":"T"}],"name":"Future"},"comment":"\nFinds the first element of this stream matching [test].\n\nReturns a future that is filled with the first element of this stream\nthat [test] returns true for.\n\nIf no such element is found before this stream is done, and a\n[defaultValue] function is provided, the result of calling [defaultValue]\nbecomes the value of the future.\n\nIf an error occurs, or if this stream ends without finding a match and\nwith no [defaultValue] function provided, the future will receive an\nerror.\n","name":"firstWhere","id":"firstWhere2()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"test","id":"test","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.async/Stream/T","name":"T"},"uri":"dart-sdk/lib/async/stream.dart","name":"element","id":"element","line":"676","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/Function","name":"Function"},"isOptional":true,"name":"defaultValue","id":"defaultValue","children":[{"returnType":{"refId":"dart.async/Stream/T","name":"T"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","line":"13","kind":"functiontype"}],"kind":"param"}],"line":"676","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"dart.async/Stream/T","name":"T"}],"name":"Future"},"comment":"\nFinds the last element in this stream matching [test].\n\nAs [firstWhere], except that the last matching element is found.\nThat means that the result cannot be provided before this stream\nis done.\n","name":"lastWhere","id":"lastWhere2()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"test","id":"test","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.async/Stream/T","name":"T"},"uri":"dart-sdk/lib/async/stream.dart","name":"element","id":"element","line":"713","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/Function","name":"Function"},"isOptional":true,"name":"defaultValue","id":"defaultValue","children":[{"returnType":{"refId":"dart.async/Stream/T","name":"T"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","line":"13","kind":"functiontype"}],"kind":"param"}],"line":"713","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"dart.async/Stream/T","name":"T"}],"name":"Future"},"comment":"\nFinds the single element in this stream matching [test].\n\nLike [lastMatch], except that it is an error if more than one\nmatching element occurs in the stream.\n","name":"singleWhere","id":"singleWhere1()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"test","id":"test","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.async/Stream/T","name":"T"},"uri":"dart-sdk/lib/async/stream.dart","name":"element","id":"element","line":"755","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"}],"line":"755","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"dart.async/Stream/T","name":"T"}],"name":"Future"},"comment":"\nReturns the value of the [index]th data event of this stream.\n\nIf an error event occurs, the future will end with this error.\n\nIf this stream provides fewer than [index] elements before closing,\nan error is reported.\n","name":"elementAt","id":"elementAt1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"index","id":"index","kind":"param"}],"line":"801","kind":"method"},{"ref":{"refId":"dart.core/bool","name":"bool"},"comment":"\nReports whether this stream is a broadcast stream.\n","name":"isBroadcast","id":"isBroadcast","line":"147","kind":"property"},{"ref":{"refId":"dart.async/Future","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"Future"},"comment":"Counts the elements in the stream. ","name":"length","id":"length","line":"435","kind":"property"},{"ref":{"refId":"dart.async/Future","arguments":[{"refId":"dart.core/bool","name":"bool"}],"name":"Future"},"comment":"Reports whether this stream contains any elements. ","name":"isEmpty","id":"isEmpty","line":"449","kind":"property"},{"ref":{"refId":"dart.async/Future","arguments":[{"refId":"dart.async/Stream/T","name":"T"}],"name":"Future"},"comment":"\nReturns the first element.\n\nIf [this] is empty throws a [StateError]. Otherwise this method is\nequivalent to [:this.elementAt(0):]\n","name":"first","id":"first","line":"578","kind":"property"},{"ref":{"refId":"dart.async/Future","arguments":[{"refId":"dart.async/Stream/T","name":"T"}],"name":"Future"},"comment":"\nReturns the last element.\n\nIf [this] is empty throws a [StateError].\n","name":"last","id":"last","line":"602","kind":"property"},{"ref":{"refId":"dart.async/Future","arguments":[{"refId":"dart.async/Stream/T","name":"T"}],"name":"Future"},"comment":"\nReturns the single element.\n\nIf [this] is empty or has more than one element throws a [StateError].\n","name":"single","id":"single","line":"631","kind":"property"},{"name":"Stream","id":"Stream0()","line":"56","kind":"constructor"},{"returnType":{"refId":"dart.async/Stream","arguments":[{"refId":"dart.async/Stream/T","name":"T"}],"name":"Stream"},"comment":"\nCreates a new single-subscription stream from the future.\n\nWhen the future completes, the stream will fire one event, either\ndata or error, and then close with a done-event.\n","name":"Stream.fromFuture","id":"Stream.fromFuture1()","children":[{"ref":{"refId":"dart.async/Future","arguments":[{"refId":"dart.async/Stream/T","name":"T"}],"name":"Future"},"name":"future","id":"future","kind":"param"}],"line":"64","kind":"constructor"},{"returnType":{"refId":"dart.async/Stream","arguments":[{"refId":"dart.async/Stream/T","name":"T"}],"name":"Stream"},"comment":"\nCreates a single-subscription stream that gets its data from [data].\n","name":"Stream.fromIterable","id":"Stream.fromIterable1()","children":[{"ref":{"refId":"dart.core/Iterable","arguments":[{"refId":"dart.async/Stream/T","name":"T"}],"name":"Iterable"},"name":"data","id":"data","kind":"param"}],"line":"80","kind":"constructor"},{"returnType":{"refId":"dart.async/Stream","arguments":[{"refId":"dart.async/Stream/T","name":"T"}],"name":"Stream"},"comment":"\nCreates a stream that repeatedly emits events at [period] intervals.\n\nThe event values are computed by invoking [computation]. The argument to\nthis callback is an integer that starts with 0 and is incremented for\nevery event.\n\nIf [computation] is omitted the event values will all be `null`.\n","name":"Stream.periodic","id":"Stream.periodic2()","children":[{"ref":{"refId":"dart.core/Duration","name":"Duration"},"name":"period","id":"period","kind":"param"},{"ref":{"refId":"dart.core/Function","name":"Function"},"isOptional":true,"name":"computation","id":"computation","children":[{"returnType":{"refId":"dart.async/Stream/T","name":"T"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.core/int","name":"int"},"uri":"dart-sdk/lib/async/stream.dart","name":"computationCount","id":"computationCount","line":"95","kind":"param"}],"line":"13","kind":"functiontype"}],"line":"95","kind":"param"}],"line":"94","kind":"constructor"},{"name":"T","id":"T","kind":"typeparam"}],"line":"55","kind":"class"},{"superclass":{"refId":"dart.async/_TransformFuture","arguments":[{"refId":"dart.async/_WhenFuture/T","name":"T"},{"refId":"dart.async/_WhenFuture/T","name":"T"}],"name":"_TransformFuture"},"comment":"Future returned by [Future.whenComplete]. ","uri":"dart-sdk/lib/async/future_impl.dart","name":"_WhenFuture","isPrivate":true,"id":"_WhenFuture","children":[{"returnType":{"refId":"void","name":"void"},"name":"_sendValue","isPrivate":true,"id":"_sendValue1()","children":[{"ref":{"refId":"dart.async/_WhenFuture/T","name":"T"},"name":"value","id":"value","kind":"param"}],"line":"440","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_sendError","isPrivate":true,"id":"_sendError1()","children":[{"name":"error","id":"error","kind":"param"}],"line":"457","kind":"method"},{"ref":{"refId":"dart.async/_FutureAction","name":"_FutureAction"},"isFinal":true,"name":"_action","isPrivate":true,"id":"_action","line":"436","kind":"variable"},{"name":"_WhenFuture","id":"_WhenFuture1()","children":[{"initializedField":{"refId":"dart.async/_WhenFuture/_action","name":"_action"},"ref":{"refId":"dart.async/_FutureAction","name":"_FutureAction"},"name":"_action","isPrivate":true,"id":"_action","kind":"param"}],"line":"438","kind":"constructor"},{"name":"T","id":"T","kind":"typeparam"}],"line":"435","kind":"class"},{"superclass":{"refId":"dart.async/_ThenFuture","arguments":[{"refId":"dart.async/_SubscribeFuture/S","name":"S"},{"refId":"dart.async/_SubscribeFuture/T","name":"T"}],"name":"_ThenFuture"},"comment":"Future returned by [Future.then] with an [:onError:] parameter. ","uri":"dart-sdk/lib/async/future_impl.dart","name":"_SubscribeFuture","isPrivate":true,"id":"_SubscribeFuture","children":[{"returnType":{"refId":"void","name":"void"},"name":"_sendError","isPrivate":true,"id":"_sendError1()","children":[{"name":"error","id":"error","kind":"param"}],"line":"421","kind":"method"},{"ref":{"refId":"dart.async/_FutureOnError","name":"_FutureOnError"},"isFinal":true,"name":"_onError","isPrivate":true,"id":"_onError","line":"415","kind":"variable"},{"name":"_SubscribeFuture","id":"_SubscribeFuture2()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"onValue","id":"onValue","children":[{"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.async/_SubscribeFuture/S","name":"S"},"uri":"dart-sdk/lib/async/future_impl.dart","name":"value","id":"value","line":"417","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"},{"initializedField":{"refId":"dart.async/_SubscribeFuture/_onError","name":"_onError"},"ref":{"refId":"dart.async/_FutureOnError","name":"_FutureOnError"},"name":"_onError","isPrivate":true,"id":"_onError","kind":"param"}],"line":"417","kind":"constructor"},{"name":"S","id":"S","kind":"typeparam"},{"name":"T","id":"T","kind":"typeparam"}],"line":"414","kind":"class"},{"superclass":{"refId":"dart.async/_TransformFuture","arguments":[{"refId":"dart.async/_CatchErrorFuture/T","name":"T"},{"refId":"dart.async/_CatchErrorFuture/T","name":"T"}],"name":"_TransformFuture"},"comment":"Future returned by [Future.catchError]. ","uri":"dart-sdk/lib/async/future_impl.dart","name":"_CatchErrorFuture","isPrivate":true,"id":"_CatchErrorFuture","children":[{"name":"_sendValue","isPrivate":true,"id":"_sendValue1()","children":[{"ref":{"refId":"dart.async/_CatchErrorFuture/T","name":"T"},"name":"value","id":"value","kind":"param"}],"line":"380","kind":"method"},{"name":"_sendError","isPrivate":true,"id":"_sendError1()","children":[{"name":"error","id":"error","kind":"param"}],"line":"384","kind":"method"},{"ref":{"refId":"dart.async/_FutureErrorTest","name":"_FutureErrorTest"},"isFinal":true,"name":"_test","isPrivate":true,"id":"_test","line":"375","kind":"variable"},{"ref":{"refId":"dart.async/_FutureOnError","name":"_FutureOnError"},"isFinal":true,"name":"_onError","isPrivate":true,"id":"_onError","line":"376","kind":"variable"},{"name":"_CatchErrorFuture","id":"_CatchErrorFuture2()","children":[{"initializedField":{"refId":"dart.async/_CatchErrorFuture/_onError","name":"_onError"},"ref":{"refId":"dart.async/_FutureOnError","name":"_FutureOnError"},"name":"_onError","isPrivate":true,"id":"_onError","kind":"param"},{"initializedField":{"refId":"dart.async/_CatchErrorFuture/_test","name":"_test"},"ref":{"refId":"dart.async/_FutureErrorTest","name":"_FutureErrorTest"},"name":"_test","isPrivate":true,"id":"_test","kind":"param"}],"line":"378","kind":"constructor"},{"name":"T","id":"T","kind":"typeparam"}],"line":"374","kind":"class"},{"superclass":{"refId":"dart.async/_TransformFuture","arguments":[{"refId":"dart.async/_ThenFuture/S","name":"S"},{"refId":"dart.async/_ThenFuture/T","name":"T"}],"name":"_TransformFuture"},"comment":"Future returned by [Future.then] with no [:onError:] parameter. ","uri":"dart-sdk/lib/async/future_impl.dart","name":"_ThenFuture","isPrivate":true,"id":"_ThenFuture","children":[{"name":"_sendValue","isPrivate":true,"id":"_sendValue1()","children":[{"ref":{"refId":"dart.async/_ThenFuture/S","name":"S"},"name":"value","id":"value","kind":"param"}],"line":"356","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_sendError","isPrivate":true,"id":"_sendError1()","children":[{"name":"error","id":"error","kind":"param"}],"line":"368","kind":"method"},{"isFinal":true,"name":"_onValue","isPrivate":true,"id":"_onValue","line":"352","kind":"variable"},{"name":"_ThenFuture","id":"_ThenFuture1()","children":[{"initializedField":{"refId":"dart.async/_ThenFuture/_onValue","name":"_onValue"},"name":"_onValue","isPrivate":true,"id":"_onValue","kind":"param"}],"line":"354","kind":"constructor"},{"name":"S","id":"S","kind":"typeparam"},{"name":"T","id":"T","kind":"typeparam"}],"line":"349","kind":"class"},{"comment":"Used by [WhenFuture]. ","uri":"dart-sdk/lib/async/future_impl.dart","name":"_FutureAction","isPrivate":true,"id":"_FutureAction","line":"346","kind":"typedef"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"Test used by [Future.catchError] to handle skip some errors. ","uri":"dart-sdk/lib/async/future_impl.dart","name":"_FutureErrorTest","isPrivate":true,"id":"_FutureErrorTest","children":[{"name":"error","id":"error","kind":"param"}],"line":"344","kind":"typedef"},{"uri":"dart-sdk/lib/async/future_impl.dart","name":"_FutureOnError","isPrivate":true,"id":"_FutureOnError","children":[{"name":"error","id":"error","kind":"param"}],"line":"342","kind":"typedef"},{"comment":"The onValue and onError handlers return either a value or a future ","uri":"dart-sdk/lib/async/future_impl.dart","name":"_FutureOnValue","isPrivate":true,"id":"_FutureOnValue","children":[{"ref":{"refId":"dart.async/_FutureOnValue/T","name":"T"},"name":"value","id":"value","kind":"param"},{"name":"T","id":"T","kind":"typeparam"}],"line":"341","kind":"typedef"},{"isAbstract":true,"interfaces":[{"refId":"dart.async/_FutureListener","arguments":[{"refId":"dart.async/_TransformFuture/S","name":"S"}],"name":"_FutureListener"}],"superclass":{"refId":"dart.async/_FutureImpl","arguments":[{"refId":"dart.async/_TransformFuture/T","name":"T"}],"name":"_FutureImpl"},"comment":"\nTransforming future base class.\n\nA transforming future is itself a future and a future listener.\nSubclasses override [_sendValue]/[_sendError] to intercept\nthe results of a previous future.\n","uri":"dart-sdk/lib/async/future_impl.dart","name":"_TransformFuture","isPrivate":true,"id":"_TransformFuture","children":[{"returnType":{"refId":"void","name":"void"},"name":"_sendValue","isPrivate":true,"id":"_sendValue1()","children":[{"ref":{"refId":"dart.async/_TransformFuture/S","name":"S"},"name":"value","id":"value","kind":"param"}],"line":"331","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_sendError","isPrivate":true,"id":"_sendError1()","children":[{"name":"error","id":"error","kind":"param"}],"line":"333","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_subscribeTo","isPrivate":true,"id":"_subscribeTo1()","children":[{"ref":{"refId":"dart.async/_FutureImpl","name":"_FutureImpl"},"name":"future","id":"future","kind":"param"}],"line":"335","kind":"method"},{"ref":{"refId":"dart.async/_FutureListener","name":"_FutureListener"},"name":"_nextListener","isPrivate":true,"id":"_nextListener","line":"329","kind":"variable"},{"name":"S","id":"S","kind":"typeparam"},{"name":"T","id":"T","kind":"typeparam"}],"line":"326","kind":"class"},{"interfaces":[{"refId":"dart.async/Future","arguments":[{"refId":"dart.async/_FutureImpl/T","name":"T"}],"name":"Future"}],"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"dart-sdk/lib/async/future_impl.dart","name":"_FutureImpl","isPrivate":true,"id":"_FutureImpl","children":[{"returnType":{"refId":"void","name":"void"},"name":"_clearUnhandledError","isPrivate":true,"id":"_clearUnhandledError0()","line":"102","kind":"method"},{"returnType":{"refId":"dart.async/Future","name":"Future"},"name":"then","id":"then2()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"f","id":"f","children":[{"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.async/_FutureImpl/T","name":"T"},"uri":"dart-sdk/lib/async/future_impl.dart","name":"value","id":"value","line":"169","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/Function","name":"Function"},"isOptional":true,"name":"onError","id":"onError","children":[{"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"uri":"dart-sdk/lib/async/future_impl.dart","name":"error","id":"error","line":"169","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"}],"line":"169","kind":"method"},{"returnType":{"refId":"dart.async/Future","name":"Future"},"name":"catchError","id":"catchError2()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"f","id":"f","children":[{"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"uri":"dart-sdk/lib/async/future_impl.dart","name":"error","id":"error","line":"176","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/Function","name":"Function"},"isOptional":true,"name":"test","id":"test","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"uri":"dart-sdk/lib/async/future_impl.dart","name":"error","id":"error","line":"176","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"}],"line":"176","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"dart.async/_FutureImpl/T","name":"T"}],"name":"Future"},"name":"whenComplete","id":"whenComplete1()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"action","id":"action","children":[{"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","line":"13","kind":"functiontype"}],"kind":"param"}],"line":"180","kind":"method"},{"returnType":{"refId":"dart.async/Stream","arguments":[{"refId":"dart.async/_FutureImpl/T","name":"T"}],"name":"Stream"},"name":"asStream","id":"asStream0()","line":"184","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_setValue","isPrivate":true,"id":"_setValue1()","children":[{"ref":{"refId":"dart.async/_FutureImpl/T","name":"T"},"name":"value","id":"value","kind":"param"}],"line":"186","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_setError","isPrivate":true,"id":"_setError1()","children":[{"name":"error","id":"error","kind":"param"}],"line":"199","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_scheduleUnhandledError","isPrivate":true,"id":"_scheduleUnhandledError0()","line":"216","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_addListener","isPrivate":true,"id":"_addListener1()","children":[{"ref":{"refId":"dart.async/_FutureListener","name":"_FutureListener"},"name":"listener","id":"listener","kind":"param"}],"line":"235","kind":"method"},{"returnType":{"refId":"dart.async/_FutureListener","name":"_FutureListener"},"name":"_removeListeners","isPrivate":true,"id":"_removeListeners0()","line":"256","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nMake another [_FutureImpl] receive the result of this one.\n\nIf this future is already complete, the [future] is notified\nimmediately. This function is only called during event resolution\nwhere it's acceptable to send an event.\n","name":"_chain","isPrivate":true,"id":"_chain1()","children":[{"ref":{"refId":"dart.async/_FutureImpl","name":"_FutureImpl"},"name":"future","id":"future","kind":"param"}],"line":"279","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nHelper function to handle the result of transforming an incoming event.\n\nIf the result is itself a [Future], this future is linked to that\nfuture's output. If not, this future is completed with the result.\n","name":"_setOrChainValue","isPrivate":true,"id":"_setOrChainValue1()","children":[{"name":"result","id":"result","kind":"param"}],"line":"297","kind":"method"},{"returnType":{"refId":"dart.async/_FutureListener","name":"_FutureListener"},"name":"_asListener","isPrivate":true,"id":"_asListener0()","line":"316","kind":"method"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"_isComplete","isPrivate":true,"id":"_isComplete","line":"97","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"_hasValue","isPrivate":true,"id":"_hasValue","line":"98","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"_hasError","isPrivate":true,"id":"_hasError","line":"99","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"_hasUnhandledError","isPrivate":true,"id":"_hasUnhandledError","line":"100","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"_INCOMPLETE","isPrivate":true,"id":"_INCOMPLETE","line":"89","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"_VALUE","isPrivate":true,"id":"_VALUE","line":"90","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"_ERROR","isPrivate":true,"id":"_ERROR","line":"91","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"_UNHANDLED_ERROR","isPrivate":true,"id":"_UNHANDLED_ERROR","line":"92","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"Whether the future is complete, and as what. ","name":"_state","isPrivate":true,"id":"_state","line":"95","kind":"variable"},{"comment":"\nEither the result, or a list of listeners until the future completes.\n\nThe result of the future is either a value or an error.\nA result is only stored when the future has completed.\n\nThe listeners is an internally linked list of [_FutureListener]s.\nListeners are only remembered while the future is not yet complete.\n\nSince the result and the listeners cannot occur at the same time,\nwe can use the same field for both.\n","name":"_resultOrListeners","isPrivate":true,"id":"_resultOrListeners","line":"119","kind":"variable"},{"name":"_FutureImpl","id":"_FutureImpl0()","line":"121","kind":"constructor"},{"name":"_FutureImpl.immediate","id":"_FutureImpl.immediate1()","children":[{"ref":{"refId":"dart.async/_FutureImpl/T","name":"T"},"name":"value","id":"value","kind":"param"}],"line":"123","kind":"constructor"},{"name":"_FutureImpl.immediateError","id":"_FutureImpl.immediateError2()","children":[{"name":"error","id":"error","kind":"param"},{"ref":{"refId":"dart.core/Object","name":"Object"},"isOptional":true,"name":"stackTrace","id":"stackTrace","kind":"param"}],"line":"128","kind":"constructor"},{"returnType":{"refId":"dart.async/_FutureImpl","arguments":[{"refId":"dart.async/_FutureImpl/T","name":"T"}],"name":"_FutureImpl"},"name":"_FutureImpl.wait","id":"_FutureImpl.wait1()","children":[{"ref":{"refId":"dart.core/Iterable","arguments":[{"refId":"dart.async/Future","name":"Future"}],"name":"Iterable"},"name":"futures","id":"futures","kind":"param"}],"line":"136","kind":"constructor"},{"name":"T","id":"T","kind":"typeparam"}],"line":"88","kind":"class"},{"interfaces":[{"refId":"dart.async/_FutureListener","arguments":[{"refId":"dart.async/_FutureListenerWrapper/T","name":"T"}],"name":"_FutureListener"}],"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"Adapter for a [_FutureImpl] to be a future result listener. ","uri":"dart-sdk/lib/async/future_impl.dart","name":"_FutureListenerWrapper","isPrivate":true,"id":"_FutureListenerWrapper","children":[{"name":"_sendValue","isPrivate":true,"id":"_sendValue1()","children":[{"ref":{"refId":"dart.async/_FutureListenerWrapper/T","name":"T"},"name":"value","id":"value","kind":"param"}],"line":"84","kind":"method"},{"name":"_sendError","isPrivate":true,"id":"_sendError1()","children":[{"name":"error","id":"error","kind":"param"}],"line":"85","kind":"method"},{"ref":{"refId":"dart.async/_FutureImpl","name":"_FutureImpl"},"name":"future","id":"future","line":"81","kind":"variable"},{"ref":{"refId":"dart.async/_FutureListener","name":"_FutureListener"},"name":"_nextListener","isPrivate":true,"id":"_nextListener","line":"82","kind":"variable"},{"name":"_FutureListenerWrapper","id":"_FutureListenerWrapper1()","children":[{"initializedField":{"refId":"dart.async/_FutureListenerWrapper/future","name":"future"},"ref":{"refId":"dart.async/_FutureImpl","name":"_FutureImpl"},"name":"future","id":"future","kind":"param"}],"line":"83","kind":"constructor"},{"name":"T","id":"T","kind":"typeparam"}],"line":"80","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nA listener on a future.\n\nWhen the future completes, the [_sendValue] or [_sendError] method\nis invoked with the result.\n\nListeners are kept in a linked list.\n","uri":"dart-sdk/lib/async/future_impl.dart","name":"_FutureListener","isPrivate":true,"id":"_FutureListener","children":[{"returnType":{"refId":"void","name":"void"},"name":"_sendValue","isPrivate":true,"id":"_sendValue1()","children":[{"ref":{"refId":"dart.async/_FutureListener/T","name":"T"},"name":"value","id":"value","kind":"param"}],"line":"75","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_sendError","isPrivate":true,"id":"_sendError1()","children":[{"name":"error","id":"error","kind":"param"}],"line":"76","kind":"method"},{"ref":{"refId":"dart.async/_FutureListener","name":"_FutureListener"},"name":"_nextListener","isPrivate":true,"id":"_nextListener","line":"71","kind":"variable"},{"returnType":{"refId":"dart.async/_FutureListener","arguments":[{"refId":"dart.async/_FutureListener/T","name":"T"}],"name":"_FutureListener"},"name":"_FutureListener.wrap","id":"_FutureListener.wrap1()","children":[{"ref":{"refId":"dart.async/_FutureImpl","name":"_FutureImpl"},"name":"future","id":"future","kind":"param"}],"line":"72","kind":"constructor"},{"name":"T","id":"T","kind":"typeparam"}],"line":"70","kind":"class"},{"superclass":{"refId":"dart.async/_Completer","arguments":[{"refId":"dart.async/_SyncCompleter/T","name":"T"}],"name":"_Completer"},"uri":"dart-sdk/lib/async/future_impl.dart","name":"_SyncCompleter","isPrivate":true,"id":"_SyncCompleter","children":[{"returnType":{"refId":"void","name":"void"},"name":"_setFutureValue","isPrivate":true,"id":"_setFutureValue1()","children":[{"ref":{"refId":"dart.async/_SyncCompleter/T","name":"T"},"name":"value","id":"value","kind":"param"}],"line":"51","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_setFutureError","isPrivate":true,"id":"_setFutureError1()","children":[{"name":"error","id":"error","kind":"param"}],"line":"56","kind":"method"},{"name":"T","id":"T","kind":"typeparam"}],"line":"50","kind":"class"},{"superclass":{"refId":"dart.async/_Completer","arguments":[{"refId":"dart.async/_AsyncCompleter/T","name":"T"}],"name":"_Completer"},"uri":"dart-sdk/lib/async/future_impl.dart","name":"_AsyncCompleter","isPrivate":true,"id":"_AsyncCompleter","children":[{"returnType":{"refId":"void","name":"void"},"name":"_setFutureValue","isPrivate":true,"id":"_setFutureValue1()","children":[{"ref":{"refId":"dart.async/_AsyncCompleter/T","name":"T"},"name":"value","id":"value","kind":"param"}],"line":"39","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_setFutureError","isPrivate":true,"id":"_setFutureError1()","children":[{"name":"error","id":"error","kind":"param"}],"line":"44","kind":"method"},{"name":"T","id":"T","kind":"typeparam"}],"line":"38","kind":"class"},{"isAbstract":true,"interfaces":[{"refId":"dart.async/Completer","arguments":[{"refId":"dart.async/_Completer/T","name":"T"}],"name":"Completer"}],"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"dart-sdk/lib/async/future_impl.dart","name":"_Completer","isPrivate":true,"id":"_Completer","children":[{"returnType":{"refId":"void","name":"void"},"name":"_setFutureValue","isPrivate":true,"id":"_setFutureValue1()","children":[{"ref":{"refId":"dart.async/_Completer/T","name":"T"},"name":"value","id":"value","kind":"param"}],"line":"16","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_setFutureError","isPrivate":true,"id":"_setFutureError1()","children":[{"name":"error","id":"error","kind":"param"}],"line":"17","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"complete","id":"complete1()","children":[{"ref":{"refId":"dart.async/_Completer/T","name":"T"},"isOptional":true,"name":"value","id":"value","kind":"param"}],"line":"19","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"completeError","id":"completeError2()","children":[{"ref":{"refId":"dart.core/Object","name":"Object"},"name":"error","id":"error","kind":"param"},{"ref":{"refId":"dart.core/Object","name":"Object"},"isOptional":true,"defaultValue":"null","name":"stackTrace","id":"stackTrace","kind":"param"}],"line":"25","kind":"method"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"isCompleted","id":"isCompleted","line":"35","kind":"property"},{"ref":{"refId":"dart.async/Future","arguments":[{"refId":"dart.async/_Completer/T","name":"T"}],"name":"Future"},"isFinal":true,"name":"future","id":"future","line":"11","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"_isComplete","isPrivate":true,"id":"_isComplete","line":"12","kind":"variable"},{"name":"_Completer","id":"_Completer0()","line":"14","kind":"constructor"},{"name":"T","id":"T","kind":"typeparam"}],"line":"10","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nA [Completer] is used to produce [Future]s and supply their value when it\nbecomes available.\n\nA service that provides values to callers, and wants to return [Future]s can\nuse a [Completer] as follows:\n\n    Completer completer = new Completer();\n    // send future object back to client...\n    return completer.future;\n    ...\n\n    // later when value is available, call:\n    completer.complete(value);\n\n    // alternatively, if the service cannot produce the value, it\n    // can provide an error:\n    completer.completeError(error);\n\n","uri":"dart-sdk/lib/async/future.dart","name":"Completer","id":"Completer","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nCompletes [future] with the supplied values.\n\nAll listeners on the future will be immediately informed about the value.\n","name":"complete","id":"complete1()","children":[{"ref":{"refId":"dart.async/Completer/T","name":"T"},"isOptional":true,"name":"value","id":"value","kind":"param"}],"line":"387","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nComplete [future] with an error.\n\nCompleting a future with an error indicates that an exception was thrown\nwhile trying to produce a value.\n\nThe argument [exception] should not be `null`.\n","name":"completeError","id":"completeError2()","children":[{"ref":{"refId":"dart.core/Object","name":"Object"},"name":"exception","id":"exception","kind":"param"},{"ref":{"refId":"dart.core/Object","name":"Object"},"isOptional":true,"name":"stackTrace","id":"stackTrace","kind":"param"}],"line":"397","kind":"method"},{"ref":{"refId":"dart.async/Future","name":"Future"},"comment":"The future that will contain the result provided to this completer. ","name":"future","id":"future","line":"380","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"comment":"\nWhether the future has been completed.\n","name":"isCompleted","id":"isCompleted","line":"402","kind":"property"},{"returnType":{"refId":"dart.async/Completer","arguments":[{"refId":"dart.async/Completer/T","name":"T"}],"name":"Completer"},"name":"Completer","id":"Completer0()","line":"346","kind":"constructor"},{"returnType":{"refId":"dart.async/Completer","arguments":[{"refId":"dart.async/Completer/T","name":"T"}],"name":"Completer"},"comment":"\nCompletes the future synchronously.\n\nThis constructor should be avoided unless the completion of the future is\nknown to be the final result of another asynchronous operation. If in doubt\nuse the default [Completer] constructor.\n\nExample:\n\n    var completer = new Completer.sync();\n    // The completion is the result of the asynchronous onDone event.\n    // No other operation is performed after the completion. It is safe\n    // to use the Completer.sync constructor.\n    stream.listen(print, onDone: () { completer.complete(\"done\"); });\n\nBad example. Do not use this code. Only for illustrative purposes:\n\n    var completer = new Completer.sync();\n    // The completion is the result of the asynchronous onDone event.\n    // However, there is still code executed after the completion. This\n    // operation is *not* safe.\n    stream.listen(print, onDone: () {\n      completer.complete(\"done\");\n      foo();  // This operation follows the completion.\n    });\n\n*WARNING* This constructor is experimental and could disappear or change\nbehavior.\n","name":"Completer.sync","id":"Completer.sync0()","line":"377","kind":"constructor"},{"name":"T","id":"T","kind":"typeparam"}],"line":"344","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nA [Future] represents a delayed computation. It is used to obtain a not-yet\navailable value, or error, sometime in the future.  Receivers of a\n[Future] can register callbacks that handle the value or error once it is\navailable. For example:\n\n    Future<int> future = getFuture();\n    future.then((value) => handleValue(value))\n          .catchError((error) => handleError(error));\n\nA [Future] can be completed in two ways: with a value (\"the future succeeds\")\nor with an error (\"the future fails\"). Users can install callbacks for each\ncase. The result of registering a pair of callbacks is a new Future (the\n\"successor\") which in turn is completed with the result of invoking the\ncorresponding callback. The successor is completed with an error if the\ninvoked callback throws. For example:\n\n    Future<int> successor = future.then((int value) {\n        // Invoked when the future is completed with a value.\n        return 42;  // The successor is completed with the value 42.\n      },\n      onError: (e) {\n        // Invoked when the future is completed with an error.\n        if (canHandle(e)) {\n          return 499;  // The successor is completed with the value 499.\n        } else {\n          throw e;  // The successor is completed with the error e.\n        }\n      });\n\nIf a future does not have a successor but is completed with an error, it\nforwards the error message to the global error-handler. This special casing\nmakes sure that no error is silently dropped. However, it also means that\nerror handlers should be installed early, so that they are present as soon\nas a future is completed with an error. The following example demonstrates\nthis potential bug:\n\n    var future = getFuture();\n    new Timer(new Duration(milliseconds: 5), () {\n      // The error-handler is only attached 5ms after the future has been\n      // received. If the future fails in the mean-time it will forward the\n      // error to the global error-handler, even though there is code (just\n      // below) to handle the error.\n      future.then((value) { useValue(value); },\n                  onError: (e) { handleError(e); });\n    });\n\nIn general we discourage registering the two callbacks at the same time, but\nprefer to use [then] with one argument (the value handler), and to use\n[catchError] for handling errors. The missing callbacks (the error-handler\nfor [then], and the value-handler for [catchError]), are automatically\nconfigured to \"forward\" the value/error. Separating value and error-handling\ninto separate registration calls usually leads to code that is easier to\nreason about. In fact it makes asynchronous code very similar to synchronous\ncode:\n\n    // Synchronous code.\n    try {\n      int value = foo();\n      return bar(value);\n    } catch (e) {\n      return 499;\n    }\n\n Equivalent asynchronous code, based on futures:\n\n    Future<int> future = foo();  // foo now returns a future.\n    future.then((int value) => bar(value))\n          .catchError((e) => 499);\n\nSimilar to the synchronous code, the error handler (registered with\n[catchError]) is handling the errors for exceptions coming from calls to\n'foo', as well as 'bar'. This would not be the case if the error-handler was\nregistered at the same time as the value-handler.\n\nFutures can have more than one callback-pairs registered. Each successor is\ntreated independently and is handled as if it was the only successor.\n","uri":"dart-sdk/lib/async/future.dart","name":"Future","id":"Future","children":[{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"dart.core/List","name":"List"}],"name":"Future"},"isStatic":true,"comment":"\nWait for all the given futures to complete and collect their values.\n\nReturns a future which will complete once all the futures in a list are\ncomplete. If any of the futures in the list completes with an error,\nthe resulting future also completes with an error. Otherwise the value\nof the returned future will be a list of all the values that were produced.\n","name":"wait","id":"wait1()","children":[{"ref":{"refId":"dart.core/Iterable","arguments":[{"refId":"dart.async/Future","name":"Future"}],"name":"Iterable"},"name":"futures","id":"futures","kind":"param"}],"line":"183","kind":"method"},{"returnType":{"refId":"dart.async/Future","name":"Future"},"isStatic":true,"comment":"\nPerform an async operation for each element of the iterable, in turn.\n\nRuns [f] for each element in [input] in order, moving to the next element\nonly when the [Future] returned by [f] completes. Returns a [Future] that\ncompletes when all elements have been processed.\n\nThe return values of all [Future]s are discarded. Any errors will cause the\niteration to stop and will be piped through the returned [Future].\n","name":"forEach","id":"forEach2()","children":[{"ref":{"refId":"dart.core/Iterable","name":"Iterable"},"name":"input","id":"input","kind":"param"},{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"f","id":"f","children":[{"returnType":{"refId":"dart.async/Future","name":"Future"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"uri":"dart-sdk/lib/async/future.dart","name":"element","id":"element","line":"197","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"}],"line":"197","kind":"method"},{"returnType":{"refId":"dart.async/Future","name":"Future"},"comment":"\nWhen this future completes with a value, then [onValue] is called with this\nvalue. If [this] future is already completed then the invocation of\n[onValue] is delayed until the next event-loop iteration.\n\nReturns a new [Future] `f` which is completed with the result of\ninvoking [onValue] (if [this] completes with a value) or [onError] (if\n[this] completes with an error).\n\nIf the invoked callback throws an exception, the returned future `f` is\ncompleted with the error.\n\nIf the invoked callback returns a [Future] `f2` then `f` and `f2` are\nchained. That is, `f` is completed with the completion value of `f2`.\n\nIf [onError] is not given, it is equivalent to `(e) { throw e; }`. That\nis, it forwards the error to `f`.\n\nIn most cases, it is more readable to use [catchError] separately, possibly\nwith a `test` parameter, instead of handling both value and error in a\nsingle [then] call.\n","name":"then","id":"then2()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"onValue","id":"onValue","children":[{"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.async/Future/T","name":"T"},"uri":"dart-sdk/lib/async/future.dart","name":"value","id":"value","line":"234","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/Function","name":"Function"},"isOptional":true,"name":"onError","id":"onError","children":[{"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.core/Object","name":"Object"},"uri":"dart-sdk/lib/async/future.dart","name":"error","id":"error","line":"234","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"}],"line":"234","kind":"method"},{"returnType":{"refId":"dart.async/Future","name":"Future"},"comment":"\nHandles errors emitted by this [Future].\n\nReturns a new [Future] `f`.\n\nWhen [this] completes with a value, the value is forwarded to `f`\nunmodified. That is, `f` completes with the same value.\n\nWhen [this] completes with an error, [test] is called with the\nerror's value. If the invocation returns [true], [onError] is called with\nthe error. The result of [onError] is handled exactly the same as for\n[then]'s [onError].\n\nIf [test] returns false, the exception is not handled by [onError], but is\nthrown unmodified, thus forwarding it to `f`.\n\nIf [test] is omitted, it defaults to a function that always returns true.\n\nExample:\n\n    foo\n      .catchError(..., test: (e) => e is ArgumentError)\n      .catchError(..., test: (e) => e is NoSuchMethodError)\n      .then((v) { ... });\n\nThis method is equivalent to:\n\n    Future catchError(onError(error),\n                      {bool test(error)}) {\n      this.then((v) => v,  // Forward the value.\n                // But handle errors, if the [test] succeeds.\n                onError: (e) {\n                  if (test == null || test(e)) {\n                    return onError(e);\n                  }\n                  throw e;\n                });\n    }\n\n","name":"catchError","id":"catchError2()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"onError","id":"onError","children":[{"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.core/Object","name":"Object"},"uri":"dart-sdk/lib/async/future.dart","name":"error","id":"error","line":"276","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/Function","name":"Function"},"isOptional":true,"name":"test","id":"test","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"ref":{"refId":"dart.core/Object","name":"Object"},"uri":"dart-sdk/lib/async/future.dart","name":"error","id":"error","line":"277","kind":"param"}],"line":"13","kind":"functiontype"}],"line":"277","kind":"param"}],"line":"276","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"dart.async/Future/T","name":"T"}],"name":"Future"},"comment":"\nRegister a function to be called when this future completes.\n\nThe [action] function is called when this future completes, whether it\ndoes so with a value or with an error.\n\nThis is the asynchronous equivalent of a \"finally\" block.\n\nThe future returned by this call, `f`, will complete the same way\nas this future unless an error occurs in the [action] call, or in\na [Future] returned by the [action] call. If the call to [action]\ndoes not return a future, its return value is ignored.\n\nIf the call to [action] throws, then `f` is completed with the\nthrown error.\n\nIf the call to [action] returns a [Future], `f2`, then completion of\n`f` is delayed until `f2` completes. If `f2` completes with\nan error, that will be the result of `f` too. The value of `f2` is always\nignored.\n\nThis method is equivalent to:\n\n    Future<T> whenComplete(action()) {\n      this.then((v) {\n                  var f2 = action();\n                  if (f2 is Future) return f2.then((_) => v);\n                  return v\n                },\n                onError: (e) {\n                  var f2 = action();\n                  if (f2 is Future) return f2.then((_) { throw e; });\n                  throw e;\n                });\n    }\n","name":"whenComplete","id":"whenComplete1()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"action","id":"action","children":[{"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","line":"13","kind":"functiontype"}],"kind":"param"}],"line":"315","kind":"method"},{"returnType":{"refId":"dart.async/Stream","arguments":[{"refId":"dart.async/Future/T","name":"T"}],"name":"Stream"},"comment":"\nCreates a [Stream] that sends [this]' completion value, data or error, to\nits subscribers. The stream closes after the completion value.\n","name":"asStream","id":"asStream0()","line":"321","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"dart.async/Future/T","name":"T"}],"name":"Future"},"comment":"\nCreates a future containing the result of calling [computation]\nasynchronously with [runAsync].\n\nif the result of executing [computation] throws, the returned future is\ncompleted with the error. If a thrown value is an [AsyncError], it is used\ndirectly, instead of wrapping this error again in another [AsyncError].\n\nIf the returned value is itself a [Future], completion of\nthe created future will wait until the returned future completes,\nand will then complete with the same result.\n\nIf a value is returned, it becomes the result of the created future.\n","name":"Future","id":"Future1()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"computation","id":"computation","children":[{"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","line":"13","kind":"functiontype"}],"kind":"param"}],"line":"102","kind":"constructor"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"dart.async/Future/T","name":"T"}],"name":"Future"},"comment":"\nCreates a future containing the result of immediately calling\n[computation].\n\nif the result of executing [computation] throws, the returned future is\ncompleted with the error. If a thrown value is an [AsyncError], it is used\ndirectly, instead of wrapping this error again in another [AsyncError].\n\nIf the returned value is itself a [Future], completion of\nthe created future will wait until the returned future completes,\nand will then complete with the same result.\n","name":"Future.sync","id":"Future.sync1()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"computation","id":"computation","children":[{"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","line":"13","kind":"functiontype"}],"kind":"param"}],"line":"121","kind":"constructor"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"dart.async/Future/T","name":"T"}],"name":"Future"},"comment":"\nA future whose value is available in the next event-loop iteration.\n\nIf [value] is not a [Future], using this constructor is equivalent\nto [:new Future.sync(() => value):].\n\nSee [Completer] to create a Future and complete it later.\n","name":"Future.value","id":"Future.value1()","children":[{"ref":{"refId":"dart.async/Future/T","name":"T"},"isOptional":true,"name":"value","id":"value","kind":"param"}],"line":"138","kind":"constructor"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"dart.async/Future/T","name":"T"}],"name":"Future"},"comment":"\nA future that completes with an error in the next event-loop iteration.\n\nSee [Completer] to create a Future and complete it later.\n","name":"Future.error","id":"Future.error2()","children":[{"name":"error","id":"error","kind":"param"},{"ref":{"refId":"dart.core/Object","name":"Object"},"isOptional":true,"name":"stackTrace","id":"stackTrace","kind":"param"}],"line":"145","kind":"constructor"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"dart.async/Future/T","name":"T"}],"name":"Future"},"comment":"\nCreates a future that completes after a delay.\n\nThe future will be completed after the given [duration] has passed with\nthe result of calling [computation]. If the duration is 0 or less, it\ncompletes no sooner than in the next event-loop iteration.\n\nIf [computation] is not given or [:null:] then it will behave as if\n[computation] was set to [:() => null:]. That is, it will complete with\n[:null:].\n\nIf calling [computation] throws, the created future will complete with the\nerror.\n\nSee [Completer]s, for futures with values that are computed asynchronously.\n","name":"Future.delayed","id":"Future.delayed2()","children":[{"ref":{"refId":"dart.core/Duration","name":"Duration"},"name":"duration","id":"duration","kind":"param"},{"ref":{"refId":"dart.core/Function","name":"Function"},"isOptional":true,"name":"computation","id":"computation","children":[{"returnType":{"refId":"dart.async/Future/T","name":"T"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","line":"13","kind":"functiontype"}],"kind":"param"}],"line":"165","kind":"constructor"},{"name":"T","id":"T","kind":"typeparam"}],"line":"86","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"dart-sdk/lib/async/event_loop.dart","name":"_AsyncRun","isPrivate":true,"id":"_AsyncRun","children":[{"returnType":{"refId":"void","name":"void"},"isStatic":true,"comment":"Enqueues the given callback before any other event in the event-loop. ","name":"_enqueueImmediate","isPrivate":true,"id":"_enqueueImmediate1()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"callback","id":"callback","children":[{"returnType":{"refId":"void","name":"void"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","line":"13","kind":"functiontype"}],"kind":"param"}],"line":"59","kind":"method"}],"line":"57","kind":"class"},{"returnType":{"refId":"void","name":"void"},"uri":"dart-sdk/lib/async/event_loop.dart","name":"_AsyncCallback","isPrivate":true,"id":"_AsyncCallback","line":"7","kind":"typedef"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nIndicates that loading of [libraryName] is deferred.\n\nApplies to library imports, when used as metadata.\n\nExample usage:\n\n    @lazy\n    import 'foo.dart' as foo;\n\n    const lazy = const DeferredLibrary('com.example.foo');\n\n    void main() {\n      foo.method(); // Throws a NoSuchMethodError, foo is not loaded yet.\n      lazy.load().then(onFooLoaded);\n    }\n\n    void onFooLoaded(_) {\n      foo.method();\n    }\n","uri":"dart-sdk/lib/async/deferred_load.dart","name":"DeferredLibrary","id":"DeferredLibrary","children":[{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"dart.core/bool","name":"bool"}],"name":"Future"},"comment":"\nEnsure that [libraryName] has been loaded.\n\nThe value of the returned future is true if this invocation of\n[load] caused the library to be loaded.\n","name":"load","id":"load0()","line":"40","kind":"method"},{"ref":{"refId":"dart.core/String","name":"String"},"isFinal":true,"name":"libraryName","id":"libraryName","line":"29","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isFinal":true,"name":"uri","id":"uri","line":"30","kind":"variable"},{"name":"DeferredLibrary","id":"DeferredLibrary2()","children":[{"initializedField":{"refId":"dart.async/DeferredLibrary/libraryName","name":"libraryName"},"ref":{"refId":"dart.core/String","name":"String"},"name":"libraryName","id":"libraryName","kind":"param"},{"initializedField":{"refId":"dart.async/DeferredLibrary/uri","name":"uri"},"isNamed":true,"ref":{"refId":"dart.core/String","name":"String"},"isOptional":true,"name":"uri","id":"uri","kind":"param"}],"line":"32","kind":"constructor"}],"line":"28","kind":"class"}],"line":"5","kind":"library"}